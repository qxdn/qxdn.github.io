<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Welcome to qxdn Blog</title>
    <url>/2020/10/18/helloworld/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>保研后无所事事，同时想起来自己的GitHub Page一直没有用过，因此借用了<a href="https://github.com/Huxpro">Huxpro</a>的<a href="https://github.com/Huxpro/huxpro.github.io">Hux Blog</a>来搭建自己的GitHub page</p>
<h2 id="正文"><a class="markdownIt-Anchor" href="#正文"></a> 正文</h2>
<p>Hello World</p>
<p>这里是<a href="https://github.com/qxdn">qxdn</a>的Blog，也是第一篇Blog</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>电赛</title>
    <url>/2020/10/19/electronicDesignContest/</url>
    <content><![CDATA[<h2 id="电赛选题"><a class="markdownIt-Anchor" href="#电赛选题"></a> 电赛选题</h2>
<p>我作为组长和<a href="https://github.com/while0l1">李志豪</a>、<a href="https://github.com/renruiwhut">任睿</a>一起参加了2019年的电赛。说到组长的选择其实也是很随意，就是投骰子比小，最小的做组长。2019年的题目可以见<a href="https://www.nuedc-training.com.cn/index/news/details/new_id/154.html">这里</a>，我们当时主要在F题和H题里面纠结，我主张F题，而李志豪强烈反对，因为我们缺少传感器，而且一时没有解决方法，因此我们选择了H题。</p>
<span id="more"></span>
<h2 id="题目要求"><a class="markdownIt-Anchor" href="#题目要求"></a> 题目要求</h2>
<p>题目的具体要求和测试结果见<a href="https://www.nuedc-training.com.cn/index/news/details/new_id/153">这</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.9/problem.png" alt="参考图片" /></p>
<h3 id="基本要求"><a class="markdownIt-Anchor" href="#基本要求"></a> 基本要求</h3>
<ol>
<li>电磁炮能够将弹丸射出炮口。</li>
<li>环形靶放置在靶心距离定标点200~300cm间，且在中心轴线上的位置处，键盘输入距离d值，电磁炮将弹丸发射至该位置，距离偏差的绝对值不大于50cm。</li>
<li>用键盘给电磁炮输入环形靶中心与定标点的距离d 及与中心轴线的偏离角度a，一键启动后，电磁炮自动瞄准射击，按击中环形靶环数计分；若脱靶则不计分。</li>
</ol>
<h3 id="发挥部分"><a class="markdownIt-Anchor" href="#发挥部分"></a> 发挥部分</h3>
<ol>
<li>在指定范围内任意位置放置环形靶（有引导标识，参见说明2），一键启动后，电磁炮自动搜寻目标并炮击环形靶，按击中环形靶环数计分，完成时间≤30s。</li>
<li>环形靶与引导标识一同放置在距离定标点d=250cm 的弧线上（以靶心定位），引导标识处于最远位置。电磁炮放置在定标点，炮管水平方向与中轴线夹角a =-30°、仰角0°。一键启动电磁炮，炮管在水平方向与中轴线夹角a从-30°至30°、再返回-30°做往复转动，在转动过程中（中途不得停顿）电磁炮自动搜寻目标并炮击环形靶，按击中环形靶环数计分，启动至击发完成时间≤10s。</li>
<li>其他。</li>
</ol>
<h2 id="制作电磁炮"><a class="markdownIt-Anchor" href="#制作电磁炮"></a> 制作电磁炮</h2>
<p>使用漆包线包裹发射管，我们制作了电磁炮的炮管。使用Boost电路制作升压，电容来存储能量。关于控制电磁炮发射距离使用的是固定发射电压、调整发射角度的方法，使用的方法是使用MATLAB进行数据拟合。测量距离使用openmv中距离和像素的大小成反比的关系。系统结构图、DC-DC电路如下图所示。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.9/structure.png" alt="系统结构图" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.9/DC-DC.png" alt="DC-DC" /></p>
<h2 id="实物"><a class="markdownIt-Anchor" href="#实物"></a> 实物</h2>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.9/railgun.jpg" alt="railgun" /></p>
<h2 id="报告"><a class="markdownIt-Anchor" href="#报告"></a> 报告</h2>
<p><a href="/others/railgunReport.docx">报告</a></p>
<h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2>
<p>我们组的电赛代码在<a href="https://github.com/qxdn/BIg-Ivan">这</a>，取名大伊万（笑）。这里面还包含一些训练时期的项目，都在git分支里面。</p>
<h2 id="结果"><a class="markdownIt-Anchor" href="#结果"></a> 结果</h2>
<p>在省赛和国赛的时候都打了全十环（不得不说运气真好），然后公费去上海同济玩了几天。最终结果就是获得了一个H题的国一了，不算国家奖学金的话，这是我获得的第一个竞赛国奖。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.9/edc.jpg" alt="同济现场" /></p>
]]></content>
      <categories>
        <category>c</category>
      </categories>
      <tags>
        <tag>电赛</tag>
        <tag>C</tag>
        <tag>C++</tag>
        <tag>软件</tag>
        <tag>硬件</tag>
      </tags>
  </entry>
  <entry>
    <title>电赛准备</title>
    <url>/2020/10/19/electronicDesignContestPerpare/</url>
    <content><![CDATA[<h2 id="进入606实验室"><a class="markdownIt-Anchor" href="#进入606实验室"></a> 进入606实验室</h2>
<p>  加入实验室需要经过笔试以及面试。招生时间通常为大一下到大二上这段时间。笔试期间主要为《电路分析》、《模拟电子技术基础》和《数字电子技术基础》里面的知识，还包括单片机、C语音以及IDE的一些知识。面试主要看一些个人项目。我主要展示了一些在403实验室制作的水温控制系统、万年历还有个人制作的简易示波器（因为当时对ADC不是很熟练，而且不知道奈奎斯特抽样定理，所以做的很尴尬）。进入实验室后和学长进行双选，因为当时和张俊伟、李洋一起被分配做电源，所以找了余世民学长做电源。</p>
<h2 id="606实验室学习"><a class="markdownIt-Anchor" href="#606实验室学习"></a> 606实验室学习</h2>
<p>  在实验室的上半个学期主要为学习，以及完成实验室的任务。实验室有着淘汰机制，没有完成阶段任务，在最后就会被淘汰。阶段任务主要为三极管放大电路、运放电路、滤波器等。虽然题目看起来简单，但是实际做起来还是与书上的理想情况不一样。幸好最后没有被淘汰。</p>
<h2 id="转为控制组"><a class="markdownIt-Anchor" href="#转为控制组"></a> 转为控制组</h2>
<p>  在一段时间的电源制作（其实没有）后，我反而对控制题目比较感兴趣，就加入了<a href="https://github.com/while0l1">李志豪</a>、<a href="https://github.com/renruiwhut">任睿</a>的小组，一起做控制题。制作了一阶倒立摆、自由摆、板球控制系统、麦克纳姆轮四轮车、悬挂系统、风力摆、二轮循迹平衡车、XY写字机器人等项目。</p>
<h2 id="实物图片"><a class="markdownIt-Anchor" href="#实物图片"></a> 实物图片</h2>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.0/flb.gif" alt="风力摆" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.0/balanceCar.gif" alt="二轮平衡车" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.0/XYWriter.gif" alt="XY写字机器人" /></p>
<h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2>
<p>  这些就是我们组在电赛期间的一些准备内容，代码主要在<a href="https://github.com/while0l1/stm32f4_modules">代码1</a>和<a href="https://github.com/qxdn/MYDS">代码2</a>和<a href="https://github.com/qxdn/BIg-Ivan">训练代码</a></p>
]]></content>
      <categories>
        <category>c</category>
      </categories>
      <tags>
        <tag>电赛</tag>
        <tag>C</tag>
        <tag>C++</tag>
        <tag>软件</tag>
        <tag>硬件</tag>
      </tags>
  </entry>
  <entry>
    <title>节能减排</title>
    <url>/2020/10/19/energySaving/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>原先的校内初选中，我最先参加的与能动学院一起的节能减排做纵倾优化的船，但是没有通过初审。于是和汪博文、赵之清、胡群强、王瑞林、任睿、孙文滨一起参加节能减排大赛，制作光伏屋顶。</p>
<h2 id="研制背景"><a class="markdownIt-Anchor" href="#研制背景"></a> 研制背景</h2>
<p>传统光伏屋顶的发电效率比较低，因此我们考虑将一部分光伏板换成天窗使用。由于天窗会有灰尘雨水等，比较容易脏，需要人力清除成本。因此我们对天窗挡板做智能处理，能够根据天气光照自动控制开合角度，使得光照最大化同时减少人力清理成本。根据贾博文老师说，这个貌似是根据他在新加坡看到的直接更改的。</p>
<h2 id="实物"><a class="markdownIt-Anchor" href="#实物"></a> 实物</h2>
<p>我们主要制作了<a href="http://101.133.235.188/">智能设计平台</a>(现在应该上不去了)、手机控制平台和光伏屋顶。三个之间的通信主要是使用MQTT协议。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.8/design.png" alt="智能设计网页" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.8/controller.png" alt="智能控制平台" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.8/roof.gif" alt="光伏屋顶" /></p>
<h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2>
<p><a href="https://github.com/qxdn/sunbest">智能设计平台</a>、<a href="https://github.com/qxdn/WindowController">天窗控制平台</a>和<a href="https://github.com/qxdn/EnergySaveRoof">实物与8266代码</a>因为疫情原因而且组员也不是很会因此实物代码比较老、但是8266的代码是最新的。</p>
<h2 id="结果"><a class="markdownIt-Anchor" href="#结果"></a> 结果</h2>
<p>最后还是只得了一个国三，如果再做的好一点也许就能过了网申冲击国二、国一了。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>C</tag>
        <tag>C++</tag>
        <tag>软件</tag>
        <tag>硬件</tag>
        <tag>节能减排</tag>
        <tag>java</tag>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>用AlexNet实现DogsVsCats</title>
    <url>/2020/10/23/DogsVsCatsAlexNet/</url>
    <content><![CDATA[<h2 id="alexnet-实现猫狗大战"><a class="markdownIt-Anchor" href="#alexnet-实现猫狗大战"></a> AlexNet 实现猫狗大战</h2>
<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>早就听说过tensorflow的大名，但一直没有时间仔细研究，而且一直缺少数据集，也就没怎么了解。同时因为那tensorflow1的复杂静态图一直劝退。如今有了时间，而且tensorflow2更加易懂，因此仔细研究了一下，也就是第一次炼丹。首先是在<a href="https://www.kaggle.com/">kaggle</a>下载数据集就难到我了，没想到翻了墙还被困在手机号验证。最后只能借助于微软提供的数据集下载。最开始用自己的CPU跑又慢又卡，自从我换了硬盘加了内存以来，好久都没有这么卡过了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.7/overload.png" alt="overload" /></p>
<p>随后换上了Google的<a href="https://colab.research.google.com/notebooks/intro.ipynb#">colab</a>,用了免费GPU才知道GPU的好。</p>
<blockquote>
<p>以下正文</p>
</blockquote>
<h2 id="1-数据准备"><a class="markdownIt-Anchor" href="#1-数据准备"></a> 1、数据准备</h2>
<p>在Colab上需要下载数据和准备环境，已经将数据上传到了Github</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!pip install tensorflow</span><br><span class="line">!wget https://github.com/qxdn/DogsVsCats/releases/download/v1<span class="number">.0</span><span class="number">.0</span>/data.<span class="built_in">zip</span></span><br><span class="line">!unzip data.<span class="built_in">zip</span></span><br><span class="line">!rm -rf data.<span class="built_in">zip</span></span><br></pre></td></tr></table></figure>
<p>AlexNet的输入是<code>[227,227,3]</code>，因此要对输入进行预处理，使得符合规范，同时还需要进行贴标签(dog=1,cat=0)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> layers,models</span><br><span class="line"></span><br><span class="line">BATCH_SIZE = <span class="number">125</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_image</span>(<span class="params">img_path,size=(<span class="params"><span class="number">227</span>,<span class="number">227</span></span>)</span>):</span><br><span class="line">    label = tf.constant(<span class="number">0</span>,tf.int8) <span class="keyword">if</span> tf.strings.regex_full_match(img_path,<span class="string">&quot;.*cat.*&quot;</span>) \</span><br><span class="line">            <span class="keyword">else</span> tf.constant(<span class="number">1</span>,tf.int8)</span><br><span class="line">    img = tf.io.read_file(img_path)</span><br><span class="line">    img = tf.image.decode_jpeg(img) </span><br><span class="line">    img = tf.image.resize(img,size)/<span class="number">255.0</span>  <span class="comment">#转float要归一</span></span><br><span class="line">    <span class="keyword">return</span>(img,label)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用并行化预处理num_parallel_calls 和预存数据prefetch来提升性能</span></span><br><span class="line"><span class="comment"># num_parallel_calls=tf.data.experimental.AUTOTUNE 根据CPU动态处理 未指定就顺序处理</span></span><br><span class="line"><span class="comment">#shuffle 随机重排</span></span><br><span class="line"><span class="comment">#batch()一次出多少</span></span><br><span class="line"><span class="comment">#prefetch 提前取出多少批batch</span></span><br><span class="line">ds_train = tf.data.Dataset.list_files(<span class="string">&quot;./data/train/*.jpg&quot;</span>) \</span><br><span class="line">           .<span class="built_in">map</span>(load_image, num_parallel_calls=tf.data.experimental.AUTOTUNE) \</span><br><span class="line">           .shuffle(buffer_size = <span class="number">1000</span>).batch(BATCH_SIZE) \</span><br><span class="line">           .prefetch(tf.data.experimental.AUTOTUNE)  </span><br><span class="line"></span><br><span class="line">ds_test = tf.data.Dataset.list_files(<span class="string">&quot;./data/test/*.jpg&quot;</span>) \</span><br><span class="line">           .<span class="built_in">map</span>(load_image, num_parallel_calls=tf.data.experimental.AUTOTUNE) \</span><br><span class="line">           .batch(BATCH_SIZE) \</span><br><span class="line">           .prefetch(tf.data.experimental.AUTOTUNE)  </span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line">%config InlineBackend.figure_format = <span class="string">&#x27;svg&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看训练样本</span></span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>,<span class="number">8</span>))  <span class="comment">#8*8 inch</span></span><br><span class="line"><span class="keyword">for</span> i,(img,label) <span class="keyword">in</span> <span class="built_in">enumerate</span>(ds_train.unbatch().take(<span class="number">9</span>)):  <span class="comment">#enumerate 组合成索引、数据迭代</span></span><br><span class="line">    ax=plt.subplot(<span class="number">3</span>,<span class="number">3</span>,i+<span class="number">1</span>)</span><br><span class="line">    ax.imshow(img.numpy())</span><br><span class="line">    ax.set_title(<span class="string">&quot;label = %d&quot;</span>%label)</span><br><span class="line">    ax.set_xticks([])</span><br><span class="line">    ax.set_yticks([]) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.7/output_7_0.svg" alt="" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> x,y <span class="keyword">in</span> ds_train.take(<span class="number">1</span>):</span><br><span class="line">    <span class="built_in">print</span>(x.shape,y.shape)</span><br></pre></td></tr></table></figure>
<pre><code>(125, 227, 227, 3) (125,)
</code></pre>
<h2 id="2-定义模型"><a class="markdownIt-Anchor" href="#2-定义模型"></a> 2、定义模型</h2>
<p>AlexNet相较于以前的网络主要引入了Relu激活函数、DropOut层和lrn局部响应</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># LRN层</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LRN</span>(layers.Layer):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(LRN, self).__init__()</span><br><span class="line">        self.depth_radius=<span class="number">2</span></span><br><span class="line">        self.bias=<span class="number">1</span></span><br><span class="line">        self.alpha=<span class="number">1e-4</span></span><br><span class="line">        self.beta=<span class="number">0.75</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">call</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="keyword">return</span> tf.nn.lrn(x,depth_radius=self.depth_radius,</span><br><span class="line">                         bias=self.bias,alpha=self.alpha,</span><br><span class="line">                         beta=self.beta)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tf.keras.backend.clear_session() <span class="comment">#清空会话</span></span><br><span class="line"></span><br><span class="line">model = models.Sequential()</span><br><span class="line">model.add(layers.Conv2D(<span class="number">96</span>,kernel_size=(<span class="number">11</span>,<span class="number">11</span>),activation=<span class="string">&#x27;relu&#x27;</span>,strides=(<span class="number">4</span>,<span class="number">4</span>),input_shape=(<span class="number">227</span>,<span class="number">227</span>,<span class="number">3</span>)))</span><br><span class="line">model.add(layers.MaxPool2D(pool_size=(<span class="number">3</span>, <span class="number">3</span>),strides=(<span class="number">2</span>,<span class="number">2</span>)))</span><br><span class="line">model.add(LRN())</span><br><span class="line">model.add(layers.Conv2D(<span class="number">256</span>,kernel_size=(<span class="number">5</span>,<span class="number">5</span>),activation=<span class="string">&#x27;relu&#x27;</span>,strides=(<span class="number">1</span>,<span class="number">1</span>),padding=<span class="string">&#x27;same&#x27;</span>))</span><br><span class="line">model.add(layers.MaxPool2D(pool_size=(<span class="number">3</span>, <span class="number">3</span>),strides=(<span class="number">2</span>,<span class="number">2</span>)))</span><br><span class="line">model.add(LRN())</span><br><span class="line">model.add(layers.Conv2D(<span class="number">384</span>,kernel_size=(<span class="number">3</span>,<span class="number">3</span>),activation=<span class="string">&#x27;relu&#x27;</span>,strides=(<span class="number">1</span>,<span class="number">1</span>),padding=<span class="string">&#x27;same&#x27;</span>))</span><br><span class="line">model.add(layers.Conv2D(<span class="number">384</span>,kernel_size=(<span class="number">3</span>,<span class="number">3</span>),activation=<span class="string">&#x27;relu&#x27;</span>,strides=(<span class="number">1</span>,<span class="number">1</span>),padding=<span class="string">&#x27;same&#x27;</span>))</span><br><span class="line">model.add(layers.Conv2D(<span class="number">256</span>,kernel_size=(<span class="number">3</span>,<span class="number">3</span>),activation=<span class="string">&#x27;relu&#x27;</span>,strides=(<span class="number">1</span>,<span class="number">1</span>),padding=<span class="string">&#x27;same&#x27;</span>))</span><br><span class="line">model.add(layers.MaxPool2D(pool_size=(<span class="number">3</span>, <span class="number">3</span>),strides=(<span class="number">2</span>,<span class="number">2</span>)))</span><br><span class="line">model.add(layers.Flatten()) <span class="comment"># 不要忘记有一层降为一维</span></span><br><span class="line">model.add(layers.Dense(<span class="number">4096</span>,activation=<span class="string">&#x27;relu&#x27;</span>))</span><br><span class="line">model.add(layers.Dropout(<span class="number">0.25</span>))</span><br><span class="line">model.add(layers.Dense(<span class="number">4096</span>,activation=<span class="string">&#x27;relu&#x27;</span>))</span><br><span class="line">model.add(layers.Dropout(<span class="number">0.25</span>))</span><br><span class="line">model.add(layers.Dense(<span class="number">2</span>,activation=<span class="string">&#x27;softmax&#x27;</span>))  <span class="comment">#真实的AlexNet会分成1000类，此处分2类 sofmax来计算概率</span></span><br><span class="line"></span><br><span class="line">model.summary()</span><br></pre></td></tr></table></figure>
<pre><code>Model: &quot;sequential&quot;
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv2d (Conv2D)              (None, 55, 55, 96)        34944     
_________________________________________________________________
max_pooling2d (MaxPooling2D) (None, 27, 27, 96)        0         
_________________________________________________________________
lrn (LRN)                    (None, 27, 27, 96)        0         
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 27, 27, 256)       614656    
_________________________________________________________________
max_pooling2d_1 (MaxPooling2 (None, 13, 13, 256)       0         
_________________________________________________________________
lrn_1 (LRN)                  (None, 13, 13, 256)       0         
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 13, 13, 384)       885120    
_________________________________________________________________
conv2d_3 (Conv2D)            (None, 13, 13, 384)       1327488   
_________________________________________________________________
conv2d_4 (Conv2D)            (None, 13, 13, 256)       884992    
_________________________________________________________________
max_pooling2d_2 (MaxPooling2 (None, 6, 6, 256)         0         
_________________________________________________________________
flatten (Flatten)            (None, 9216)              0         
_________________________________________________________________
dense (Dense)                (None, 4096)              37752832  
_________________________________________________________________
dropout (Dropout)            (None, 4096)              0         
_________________________________________________________________
dense_1 (Dense)              (None, 4096)              16781312  
_________________________________________________________________
dropout_1 (Dropout)          (None, 4096)              0         
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 8194      
=================================================================
Total params: 58,289,538
Trainable params: 58,289,538
Non-trainable params: 0
_________________________________________________________________
</code></pre>
<h2 id="3-训练模型"><a class="markdownIt-Anchor" href="#3-训练模型"></a> 3、训练模型</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">model.<span class="built_in">compile</span>(optimizer=tf.keras.optimizers.Adam(learning_rate=<span class="number">0.00001</span>),</span><br><span class="line">        loss=<span class="string">&#x27;sparse_categorical_crossentropy&#x27;</span>,</span><br><span class="line">        metrics=[<span class="string">&quot;accuracy&quot;</span>])</span><br><span class="line"></span><br><span class="line">checkpoint_save_path=<span class="string">&#x27;./checkpoint/AlexNet/AlexNet-&#123;epoch:02d&#125;.ckpt&#x27;</span></span><br><span class="line"><span class="comment">#tf生成ckpt文件时会同步生成索引表，那么通过判断是否有索引表，就知道有没有保存过参数。</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(checkpoint_save_path+<span class="string">&#x27;.index&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------------load the model--------------&#x27;</span>)</span><br><span class="line">    model.load_weights(checkpoint_save_path)</span><br><span class="line">cp_callback=tf.keras.callbacks.ModelCheckpoint(filepath=checkpoint_save_path,</span><br><span class="line">                            save_weights_only=<span class="literal">True</span>,</span><br><span class="line">                            save_best_only=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">history = model.fit(ds_train,epochs= <span class="number">20</span>,validation_data=ds_test,</span><br><span class="line">                    callbacks = [cp_callback],workers = <span class="number">4</span>)</span><br></pre></td></tr></table></figure>
<pre><code>Epoch 1/20
184/184 [==============================] - 40s 219ms/step - loss: 0.6630 - accuracy: 0.5944 - val_loss: 0.6141 - val_accuracy: 0.6615
Epoch 2/20
184/184 [==============================] - 40s 220ms/step - loss: 0.5970 - accuracy: 0.6754 - val_loss: 0.5586 - val_accuracy: 0.7040
Epoch 3/20
184/184 [==============================] - 40s 219ms/step - loss: 0.5426 - accuracy: 0.7244 - val_loss: 0.5088 - val_accuracy: 0.7505
Epoch 4/20
184/184 [==============================] - 40s 219ms/step - loss: 0.4946 - accuracy: 0.7598 - val_loss: 0.4840 - val_accuracy: 0.7735
Epoch 5/20
184/184 [==============================] - 40s 220ms/step - loss: 0.4545 - accuracy: 0.7852 - val_loss: 0.4469 - val_accuracy: 0.8055
Epoch 6/20
184/184 [==============================] - 40s 220ms/step - loss: 0.4207 - accuracy: 0.8064 - val_loss: 0.4180 - val_accuracy: 0.8100
Epoch 7/20
184/184 [==============================] - 40s 219ms/step - loss: 0.3991 - accuracy: 0.8193 - val_loss: 0.4016 - val_accuracy: 0.8250
Epoch 8/20
184/184 [==============================] - 41s 220ms/step - loss: 0.3788 - accuracy: 0.8309 - val_loss: 0.3908 - val_accuracy: 0.8315
Epoch 9/20
184/184 [==============================] - 40s 219ms/step - loss: 0.3587 - accuracy: 0.8427 - val_loss: 0.3733 - val_accuracy: 0.8375
Epoch 10/20
184/184 [==============================] - 38s 207ms/step - loss: 0.3387 - accuracy: 0.8539 - val_loss: 0.3860 - val_accuracy: 0.8345
Epoch 11/20
184/184 [==============================] - 40s 220ms/step - loss: 0.3273 - accuracy: 0.8576 - val_loss: 0.3498 - val_accuracy: 0.8475
Epoch 12/20
184/184 [==============================] - 38s 207ms/step - loss: 0.3064 - accuracy: 0.8676 - val_loss: 0.3671 - val_accuracy: 0.8380
Epoch 13/20
184/184 [==============================] - 38s 208ms/step - loss: 0.2931 - accuracy: 0.8762 - val_loss: 0.3501 - val_accuracy: 0.8495
Epoch 14/20
184/184 [==============================] - 40s 220ms/step - loss: 0.2737 - accuracy: 0.8864 - val_loss: 0.3361 - val_accuracy: 0.8540
Epoch 15/20
184/184 [==============================] - 40s 219ms/step - loss: 0.2694 - accuracy: 0.8890 - val_loss: 0.3311 - val_accuracy: 0.8585
Epoch 16/20
184/184 [==============================] - 38s 208ms/step - loss: 0.2557 - accuracy: 0.8938 - val_loss: 0.3388 - val_accuracy: 0.8565
Epoch 17/20
184/184 [==============================] - 40s 219ms/step - loss: 0.2362 - accuracy: 0.9030 - val_loss: 0.3160 - val_accuracy: 0.8680
Epoch 18/20
184/184 [==============================] - 38s 207ms/step - loss: 0.2184 - accuracy: 0.9106 - val_loss: 0.3692 - val_accuracy: 0.8515
Epoch 19/20
184/184 [==============================] - 38s 207ms/step - loss: 0.2085 - accuracy: 0.9160 - val_loss: 0.3198 - val_accuracy: 0.8710
Epoch 20/20
184/184 [==============================] - 41s 222ms/step - loss: 0.1909 - accuracy: 0.9239 - val_loss: 0.3019 - val_accuracy: 0.8705
</code></pre>
<h2 id="4-评估模型"><a class="markdownIt-Anchor" href="#4-评估模型"></a> 4、评估模型</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line">%config InlineBackend.figure_format = <span class="string">&#x27;svg&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">plot_metric</span>(<span class="params">history, metric</span>):</span><br><span class="line">    train_metrics = history.history[metric]</span><br><span class="line">    val_metrics = history.history[<span class="string">&#x27;val_&#x27;</span>+metric]</span><br><span class="line">    epochs = <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(train_metrics) + <span class="number">1</span>)</span><br><span class="line">    plt.plot(epochs, train_metrics, <span class="string">&#x27;bo--&#x27;</span>)</span><br><span class="line">    plt.plot(epochs, val_metrics, <span class="string">&#x27;ro-&#x27;</span>)</span><br><span class="line">    plt.title(<span class="string">&#x27;Training and validation &#x27;</span>+ metric)</span><br><span class="line">    plt.xlabel(<span class="string">&quot;Epochs&quot;</span>)</span><br><span class="line">    plt.ylabel(metric)</span><br><span class="line">    plt.legend([<span class="string">&quot;train_&quot;</span>+metric, <span class="string">&#x27;val_&#x27;</span>+metric])</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plot_metric(history,<span class="string">&quot;loss&quot;</span>) <span class="comment">#结果看可以再练练</span></span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.7/output_16_0.svg" alt="" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plot_metric(history,<span class="string">&quot;accuracy&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.7/output_17_0.svg" alt="" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#可以使用evaluate对数据进行评估</span></span><br><span class="line">val_loss,val_accuracy = model.evaluate(ds_test,workers=<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(val_loss,val_accuracy)</span><br></pre></td></tr></table></figure>
<pre><code>16/16 [==============================] - 2s 144ms/step - loss: 0.3019 - accuracy: 0.8705
0.3018629252910614 0.8705000281333923
</code></pre>
<h2 id="5-使用模型"><a class="markdownIt-Anchor" href="#5-使用模型"></a> 5、使用模型</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">perpareImage</span>(<span class="params">img,sizes=(<span class="params">-<span class="number">1</span>,<span class="number">227</span>,<span class="number">227</span>,<span class="number">3</span></span>)</span>):</span><br><span class="line">  img = tf.reshape(img,shape=sizes)</span><br><span class="line">  <span class="keyword">return</span> img</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i,(img,label) <span class="keyword">in</span> <span class="built_in">enumerate</span>(ds_test.unbatch().take(<span class="number">1</span>)):</span><br><span class="line">  img=tf.reshape(img,shape=(-<span class="number">1</span>,<span class="number">227</span>,<span class="number">227</span>,<span class="number">3</span>))</span><br><span class="line">  p=model.predict(img)</span><br><span class="line">  <span class="built_in">print</span>(p)</span><br><span class="line">  p=tf.argmax(p,<span class="number">1</span>)</span><br><span class="line">  <span class="built_in">print</span>(p)</span><br><span class="line">  <span class="built_in">print</span>(p.shape)</span><br></pre></td></tr></table></figure>
<pre><code>[[0.91607434 0.08392565]]
tf.Tensor([0], shape=(1,), dtype=int64)
(1,)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line">%config InlineBackend.figure_format = <span class="string">&#x27;svg&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看训练样本</span></span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>,<span class="number">8</span>))  <span class="comment">#8*8 inch</span></span><br><span class="line"><span class="keyword">for</span> i,(img,label) <span class="keyword">in</span> <span class="built_in">enumerate</span>(ds_test.unbatch().take(<span class="number">9</span>)):  <span class="comment">#enumerate 组合成索引、数据迭代</span></span><br><span class="line">    ax=plt.subplot(<span class="number">3</span>,<span class="number">3</span>,i+<span class="number">1</span>)</span><br><span class="line">    ax.imshow(img.numpy())</span><br><span class="line">    predict = model.predict(perpareImage(img))</span><br><span class="line">    ax.set_title(<span class="string">&quot;predict=%d,label=%d&quot;</span>%(tf.argmax(predict,<span class="number">1</span>),label))</span><br><span class="line">    ax.set_xticks([])</span><br><span class="line">    ax.set_yticks([]) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.7/output_22_0.svg" alt="" /></p>
<h2 id="6-保存模型"><a class="markdownIt-Anchor" href="#6-保存模型"></a> 6、保存模型</h2>
<p>tensorflow原生保存</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 保存模型结构与模型参数到文件,该方式保存的模型具有跨平台性便于部署</span></span><br><span class="line"></span><br><span class="line">model.save(<span class="string">&#x27;./model/tf_AlexNet_Model&#x27;</span>, save_format=<span class="string">&quot;tf&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;export saved model.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">model_loaded = tf.keras.models.load_model(<span class="string">&#x27;./model/tf_AlexNet_Model&#x27;</span>)</span><br><span class="line">model_loaded.evaluate(ds_test)</span><br></pre></td></tr></table></figure>
<pre><code>WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Model.state_updates (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.
Instructions for updating:
This property should not be used in TensorFlow 2.0, as updates are applied automatically.
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Layer.updates (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.
Instructions for updating:
This property should not be used in TensorFlow 2.0, as updates are applied automatically.
INFO:tensorflow:Assets written to: ./model/tf_AlexNet_Model/assets
export saved model.
16/16 [==============================] - 2s 147ms/step - loss: 0.3019 - accuracy: 0.5155





[0.301862895488739, 0.515500009059906]
</code></pre>
<h2 id="repo"><a class="markdownIt-Anchor" href="#repo"></a> repo</h2>
<p><a href="https://github.com/qxdn/DogsVsCats">DogsVsCats</a></p>
<h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2>
<p>踩的坑有点点多，比如搭建网络时候忘记摊平，预测的时候因为形状不对卡了半天，CPU训练的时候loss和准确度不变，差点以为失败了，不过最后看来还算成功吧。赞美Google Colab。</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>tensorflow</tag>
        <tag>机器学习</tag>
        <tag>AlexNet</tag>
      </tags>
  </entry>
  <entry>
    <title>升级到WSL2</title>
    <url>/2020/10/24/upgradeWSL2/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>因为一些个人原因，需要将原先的WSL1升级到WSL2，参考<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10">微软文档</a>，记录踩坑</p>
<h2 id="一-检查版本"><a class="markdownIt-Anchor" href="#一-检查版本"></a> 一、检查版本</h2>
<p>对于x64系统目前的要求是<code>1903</code>或者更高,<code>Build 18362</code>或者更高。使用<code>win+R</code>输入<code>winver</code>来检查自己的版本<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.6/version.png" alt="version" /></p>
<h2 id="二-启动虚拟机功能"><a class="markdownIt-Anchor" href="#二-启动虚拟机功能"></a> 二、启动虚拟机功能</h2>
<p>管理员模式启动powershell输入</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.6/enableVMFeature.png" alt="启动虚拟机功能" /><br />
<strong>然后重启电脑</strong></p>
<h2 id="三-下载linux内核升级包"><a class="markdownIt-Anchor" href="#三-下载linux内核升级包"></a> 三、下载Linux内核升级包</h2>
<p>下载最新<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">升级包</a><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.6/package.png" alt="package" /></p>
<h2 id="四-设置wsl2作为默认版本"><a class="markdownIt-Anchor" href="#四-设置wsl2作为默认版本"></a> 四、设置WSL2作为默认版本</h2>
<p>管理员powershell中运行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">--set-default-version</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>
<h2 id="五-转换wsl"><a class="markdownIt-Anchor" href="#五-转换wsl"></a> 五、转换WSL</h2>
<p>使用该指令查看wsl状态</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">-l</span> <span class="literal">-v</span></span><br></pre></td></tr></table></figure>
<p>我的输出</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">  NAME      STATE           VERSION</span><br><span class="line">* Ubuntu    Stopped         <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>转换WSL</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">--set-version</span> Ubuntu <span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>输出</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">正在进行转换，这可能需要几分钟时间...</span><br><span class="line">有关与 WSL <span class="number">2</span> 的主要区别的信息，请访问 https://aka.ms/wsl2</span><br><span class="line">请启用虚拟机平台 Windows 功能并确保在 BIOS 中启用虚拟化。</span><br><span class="line">有关信息，请访问 https://aka.ms/wsl2<span class="literal">-install</span></span><br></pre></td></tr></table></figure>
<p>这里在我搜索了<a href="https://github.com/microsoft/WSL/issues/5363">issue</a>后发现主要还是Hyper-V、虚拟平台等问题，可以试一试管理员模式运行以下指令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">DISM /Online /<span class="built_in">Enable-Feature</span> /All /FeatureName:Microsoft<span class="literal">-Hyper-V</span></span><br><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:Microsoft<span class="literal">-Windows-Subsystem-Linux</span> /all /norestart</span><br><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart</span><br><span class="line">bcdedit /<span class="built_in">set</span> hypervisorlaunchtype auto</span><br></pre></td></tr></table></figure>
<p>最主要的应该是</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">DISM /Online /<span class="built_in">Enable-Feature</span> /All /FeatureName:Microsoft<span class="literal">-Hyper-V</span></span><br><span class="line">bcdedit /<span class="built_in">set</span> hypervisorlaunchtype auto</span><br></pre></td></tr></table></figure>
<p>重新转换<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.6/converted.png" alt="转换完成" /></p>
<h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2>
<p>VMware老版本与Hyper-V冲突，得找个时间去更新到最新版本兼容</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Linux</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业设计（一）环境搭建</title>
    <url>/2021/01/19/installpytorch/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>体验过CPU和GPU速度之后，就不会再想使用CPU版本的机器学习框架进行训练。</p>
<h2 id="安装cuda"><a class="markdownIt-Anchor" href="#安装cuda"></a> 安装CUDA</h2>
<p>第一步就是要完成cuda的安装，进入<code>NIVIDA控制面板</code>-&gt;<code>系统信息</code>-&gt;<code>组件</code>，查看<code>3D设置</code>中的<code>NVCUDA64.DLL</code>，这里显示的就是当前显卡驱动所支持的CUDA信息，所要安装的CUDA版本不得大于这里显示的版本。然后前往<a href="https://developer.nvidia.com/zh-cn/cuda-downloads">CUDA官网</a>下载CUDA。建议在下载之前先去其他一些网址看一下支持的CUDA版本，以免到时候重新安装</p>
<ul>
<li><a href="https://tensorflow.google.cn/install/source_windows">tensorflow</a> (换成English可以看最新支持)</li>
<li><a href="https://pytorch.org/get-started/locally/">pytorch</a></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/GPUInfo.png" alt="GPU信息" /></p>
<p>如果发现自己安装的版本没有已经构建好的版本还有两种方法。</p>
<ul>
<li>自行从源码编译，这点不推荐，想起来我之间自己在树莓派上面编译opencv的经历颜文字(ಥ _ ಥ)，强烈不推荐。</li>
<li>卸载重装CUDA</li>
</ul>
<p>重装CUDA比较简单,见下图中的NVIDIA应用除了<code>NVIDIA的图形驱动程序</code>和<code>NVIDIA Physx系统软件</code>都卸载就行。如果下不动的就使用迅雷11，新版迅雷配合网盘简直神一般的体验。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/uninstall.png" alt="GPU信息" /></p>
<p>安装完成后可以在命令行里面使用<code>nvcc -V</code>看看结果。</p>
<h2 id="cudnn安装"><a class="markdownIt-Anchor" href="#cudnn安装"></a> cuDNN安装</h2>
<p>cuDNN安装比较简单，首先进入<a href="https://developer.nvidia.com/rdp/cudnn-archive">官网</a>，选择你安装的CUDA的对应版本即可。下载也需要进行注册，填一个调查问卷，但是因为我实在进不去，就使用迅雷接管下载链接之间下载。将解压后的<code>bin</code>、<code>include</code>、<code>lib</code>三个文件复制进入<code>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.0</code>即可。我安装的版本是<code>8.0.4</code></p>
<h2 id="pytorch安装"><a class="markdownIt-Anchor" href="#pytorch安装"></a> pytorch安装</h2>
<p>听闻pytorch容易调试，且搭建网络比较快，而我此前只是用过tensorflow2.0中的keras进行过搭建，因此本次毕设初步打算使用pytorch作为工具，也可能不用呢(￣y▽,￣)╭ 。使用pytorch推荐的conda安装方法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install pytorch torchvision torchaudio cudatoolkit=11.0 -c pytorch</span><br></pre></td></tr></table></figure>
<p>这里我是使用清华镜像源的，是否要加<code>-c pytorch</code>还是看你的<code>.condarc</code>怎么写的，如果写了<code>custom_channels</code>且里面的<code>pytorch</code>也是用了清华源的可以加，没有的话就去掉<code>-c pytorch</code>，然而我镜像源也下不了（吐了），发现浏览器也下不了，就只能用迅雷接管下载，然后本地安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#本地安装</span></span><br><span class="line">conda install --use-local cudatoolkit-11.0.221-h74a9793_0.conda</span><br><span class="line">conda install --use-local pytorch-1.7.1-py3.8_cuda110_cudnn8_0.tar.bz2</span><br></pre></td></tr></table></figure>
<p>然后进行测试<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/verify.png" alt="verify" /></p>
<h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2>
<p>环境的搭建就到此为止，安装并不难，只是我没想到我尽然会连镜像源都下不动😩。后续视情况可能会使用GPU服务器，但是现在先在本地收集数据集和预先学习。</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>毕业设计</tag>
        <tag>yolo</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业设计（二）darknet编译</title>
    <url>/2021/03/05/builddarknet/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>寒假训练了4个版本的yolo，其中yolov4和yolov4-tiny是基于darknet的。由于都是在<a href="https://colab.research.google.com/notebooks/welcome.ipynb">colab</a>上训练的，不好展示，所以打算在win10上跑一下，因此本文旨在win10编译darknet的踩坑记录。</p>
<h2 id="安装visual-studio"><a class="markdownIt-Anchor" href="#安装visual-studio"></a> 安装Visual Studio</h2>
<p>这个不用多说，安装2017或者2019版就行，需要开启英语语言</p>
<h2 id="安装cuda"><a class="markdownIt-Anchor" href="#安装cuda"></a> 安装CUDA</h2>
<p>参考上一篇安装CUDA就行，需要CUDAv10.0以上，并且安装时要点VS集成</p>
<h2 id="vcpkg安装"><a class="markdownIt-Anchor" href="#vcpkg安装"></a> vcpkg安装</h2>
<p>参考vcpkg的官方下载方式，<code>powershell</code>中执行如下命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/microsoft/vcpkg</span><br><span class="line"><span class="built_in">cd</span> vcpkg</span><br><span class="line">bootstrap<span class="literal">-vcpkg</span>.bat</span><br></pre></td></tr></table></figure>
<p>如果执行<code>bootstrap-vcpkg.bat</code>时，下载<code>vcpkg.exe</code>遇到网络问题，可以直接去<code>release</code>里面下载二进制文件</p>
<h2 id="vcpkg安装依赖"><a class="markdownIt-Anchor" href="#vcpkg安装依赖"></a> vcpkg安装依赖</h2>
<p>根据AlexeyAB的repo说明，<code>powershell</code>执行如下命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vcpkg install darknet[<span class="type">full</span>]:x64<span class="literal">-windows</span></span><br></pre></td></tr></table></figure>
<h3 id="遇到的问题"><a class="markdownIt-Anchor" href="#遇到的问题"></a> 遇到的问题</h3>
<p><strong>事后得知，此处遇到的网络问题可以试一试校园网，校园网似乎对从外网下载文件有较好的效果</strong></p>
<p>安装opencv时，需要从<code>raw.githubusercontent.com</code>下载东西，然而遇到了host问题。首先尝试修改了host，结果遇到了<code>SSL connect error</code>问题，于是在加了几个host发现还是失败了。遂尝试使用VPN代理，按照输出将<code>HTTP_PROXY</code>和<code>HTTPS_PROXY</code>加入到环境变量，依然不行。尝试直接在powershell中使用变量。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env:HTTPS_PROXY</span>=<span class="string">&quot;https://127.0.0.1:7890/&quot;</span></span><br><span class="line"><span class="variable">$env:HTTP_PROXY</span>=<span class="string">&quot;http://127.0.0.1:7890/&quot;</span></span><br></pre></td></tr></table></figure>
<p>此时的staus输出为</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">Failed. Status: <span class="number">4</span>;<span class="string">&quot;A requested feature, protocol or option was not found built-in in this libcurl due to a build-time decision.&quot;</span></span><br><span class="line"></span><br><span class="line">Failed to download file.</span><br><span class="line"><span class="keyword">If</span> you use a proxy, please <span class="built_in">set</span> the HTTPS_PROXY and HTTP_PROXY environment variables to <span class="string">&quot;https://user:password@your-proxy-ip-address:port/&quot;</span>.</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> error with status <span class="number">4</span> (Issue <span class="comment">#15434),</span></span><br><span class="line"><span class="keyword">try</span> setting <span class="string">&quot;http://user:password@your-proxy-ip-address:port/&quot;</span>.</span><br><span class="line"></span><br><span class="line">Otherwise, please submit an issue at https://github.com/Microsoft/vcpkg/issues</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>因此根据要求执行下面代码</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env:HTTPS_PROXY</span>=<span class="string">&quot;http://127.0.0.1:7890/&quot;</span></span><br></pre></td></tr></table></figure>
<p>此时重新执行安装命令，即可完成下载。</p>
<p>安装opencv时遇到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CMake Error at scripts/cmake/vcpkg_execute_build_process.cmake:144 (message):</span><br><span class="line">    Command failed: C:/src/vcpkg/downloads/tools/cmake-3.19.2-windows/cmake-3.19.2-win32-x86/bin/cmake.exe --build . --config Debug --target install -- -v -j9</span><br><span class="line">    Working Directory: C:/src/vcpkg/buildtrees/opencv4/x64-windows-dbg</span><br><span class="line">    See logs for more information:</span><br><span class="line">      C:\src\vcpkg\buildtrees\opencv4\install-x64-windows-dbg-out.log</span><br><span class="line"></span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  scripts/cmake/vcpkg_build_cmake.cmake:96 (vcpkg_execute_build_process)</span><br><span class="line">  scripts/cmake/vcpkg_install_cmake.cmake:27 (vcpkg_build_cmake)</span><br><span class="line">  ports/opencv4/portfile.cmake:385 (vcpkg_install_cmake)</span><br><span class="line">  scripts/ports.cmake:133 (include)</span><br></pre></td></tr></table></figure>
<p>尝试如下指令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vcpkg install darknet[<span class="type">opencv</span>-<span class="type">base</span>,<span class="type">cuda</span>,<span class="type">cudnn</span>]:x64<span class="literal">-windows</span></span><br></pre></td></tr></table></figure>
<h2 id="编译darknet"><a class="markdownIt-Anchor" href="#编译darknet"></a> 编译darknet</h2>
<p>提前安装<a href="https://github.com/ninja-build/ninja">ninja</a>并添加到环境变量</p>
<p>修改<code>Makefile</code></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">GPU=1</span><br><span class="line">CUDNN=1</span><br><span class="line">CUDNN_HALF=1</span><br><span class="line">OPENCV=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#我是gtx1050，根据makefile里面的注释自己的修改</span></span><br><span class="line">ARCH= -gencode arch=compute_61,code=sm_61 -gencode arch=compute_61,code=compute_61 </span><br></pre></td></tr></table></figure>
<p>按照AlexeyAB的repo，执行如下代码，注意CMake的版本，过低将无法编译。注意下面的顺序，如果有问题需要清理一下缓存，不然会一直编译失败</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env:VCPKG_ROOT</span>=<span class="string">&quot;vcpkg的位置&quot;</span></span><br><span class="line">git clone https://github.com/AlexeyAB/darknet</span><br><span class="line"><span class="built_in">cd</span> darknet</span><br><span class="line">powershell <span class="literal">-ExecutionPolicy</span> Bypass <span class="operator">-File</span> .\build.ps1</span><br></pre></td></tr></table></figure>
<p>如果正确执行上述步骤的话，编译是不会出错的</p>
<h2 id="测试darknet"><a class="markdownIt-Anchor" href="#测试darknet"></a> 测试darknet</h2>
<h3 id="原图"><a class="markdownIt-Anchor" href="#原图"></a> 原图</h3>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/origin.jpg" alt="origin" /></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">darknet.exe detector test cfg/coco.data cfg/yolov4.cfg yolov4.weights origin.jpg  <span class="literal">-thresh</span> <span class="number">0.25</span></span><br></pre></td></tr></table></figure>
<h3 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CUDA-version: 11000 (11000), cuDNN: 8.0.4, GPU count: 1  </span><br><span class="line"> OpenCV version: 4.5.1</span><br><span class="line"> 0 : compute_capability = 610, cudnn_half = 0, GPU: GeForce GTX 1050 </span><br><span class="line">net.optimized_memory = 0 </span><br><span class="line">mini_batch = 1, batch = 8, time_steps = 1, train = 0</span><br><span class="line">   layer   filters  size/strd(dil)      input                output</span><br><span class="line">   0 Create CUDA-stream - 0</span><br><span class="line"> Create cudnn-handle 0 </span><br><span class="line">conv     32       3 x 3/ 1    608 x 608 x   3 -&gt;  608 x 608 x  32 0.639 BF</span><br><span class="line">   1 conv     64       3 x 3/ 2    608 x 608 x  32 -&gt;  304 x 304 x  64 3.407 BF</span><br><span class="line">   2 conv     64       1 x 1/ 1    304 x 304 x  64 -&gt;  304 x 304 x  64 0.757 BF</span><br><span class="line">   3 route  1                                      -&gt;  304 x 304 x  64 </span><br><span class="line">   4 conv     64       1 x 1/ 1    304 x 304 x  64 -&gt;  304 x 304 x  64 0.757 BF</span><br><span class="line">   5 conv     32       1 x 1/ 1    304 x 304 x  64 -&gt;  304 x 304 x  32 0.379 BF</span><br><span class="line">   6 conv     64       3 x 3/ 1    304 x 304 x  32 -&gt;  304 x 304 x  64 3.407 BF</span><br><span class="line">   7 Shortcut Layer: 4,  wt = 0, wn = 0, outputs: 304 x 304 x  64 0.006 BF</span><br><span class="line">   8 conv     64       1 x 1/ 1    304 x 304 x  64 -&gt;  304 x 304 x  64 0.757 BF</span><br><span class="line">   9 route  8 2                                    -&gt;  304 x 304 x 128 </span><br><span class="line">  10 conv     64       1 x 1/ 1    304 x 304 x 128 -&gt;  304 x 304 x  64 1.514 BF</span><br><span class="line">  11 conv    128       3 x 3/ 2    304 x 304 x  64 -&gt;  152 x 152 x 128 3.407 BF</span><br><span class="line">  12 conv     64       1 x 1/ 1    152 x 152 x 128 -&gt;  152 x 152 x  64 0.379 BF</span><br><span class="line">  13 route  11                                     -&gt;  152 x 152 x 128</span><br><span class="line">  14 conv     64       1 x 1/ 1    152 x 152 x 128 -&gt;  152 x 152 x  64 0.379 BF</span><br><span class="line">  15 conv     64       1 x 1/ 1    152 x 152 x  64 -&gt;  152 x 152 x  64 0.189 BF</span><br><span class="line">  16 conv     64       3 x 3/ 1    152 x 152 x  64 -&gt;  152 x 152 x  64 1.703 BF</span><br><span class="line">  17 Shortcut Layer: 14,  wt = 0, wn = 0, outputs: 152 x 152 x  64 0.001 BF</span><br><span class="line">  18 conv     64       1 x 1/ 1    152 x 152 x  64 -&gt;  152 x 152 x  64 0.189 BF</span><br><span class="line">  19 conv     64       3 x 3/ 1    152 x 152 x  64 -&gt;  152 x 152 x  64 1.703 BF</span><br><span class="line">  20 Shortcut Layer: 17,  wt = 0, wn = 0, outputs: 152 x 152 x  64 0.001 BF</span><br><span class="line">  21 conv     64       1 x 1/ 1    152 x 152 x  64 -&gt;  152 x 152 x  64 0.189 BF</span><br><span class="line">  22 route  21 12                                  -&gt;  152 x 152 x 128 </span><br><span class="line">  23 conv    128       1 x 1/ 1    152 x 152 x 128 -&gt;  152 x 152 x 128 0.757 BF</span><br><span class="line">  24 conv    256       3 x 3/ 2    152 x 152 x 128 -&gt;   76 x  76 x 256 3.407 BF</span><br><span class="line">  25 conv    128       1 x 1/ 1     76 x  76 x 256 -&gt;   76 x  76 x 128 0.379 BF</span><br><span class="line">  26 route  24                                     -&gt;   76 x  76 x 256</span><br><span class="line">  27 conv    128       1 x 1/ 1     76 x  76 x 256 -&gt;   76 x  76 x 128 0.379 BF</span><br><span class="line">  28 conv    128       1 x 1/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 0.189 BF</span><br><span class="line">  29 conv    128       3 x 3/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 1.703 BF</span><br><span class="line">  30 Shortcut Layer: 27,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF</span><br><span class="line">  31 conv    128       1 x 1/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 0.189 BF</span><br><span class="line">  32 conv    128       3 x 3/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 1.703 BF</span><br><span class="line">  33 Shortcut Layer: 30,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF</span><br><span class="line">  34 conv    128       1 x 1/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 0.189 BF</span><br><span class="line">  35 conv    128       3 x 3/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 1.703 BF</span><br><span class="line">  36 Shortcut Layer: 33,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF</span><br><span class="line">  37 conv    128       1 x 1/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 0.189 BF</span><br><span class="line">  38 conv    128       3 x 3/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 1.703 BF</span><br><span class="line">  39 Shortcut Layer: 36,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF</span><br><span class="line">  40 conv    128       1 x 1/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 0.189 BF</span><br><span class="line">  41 conv    128       3 x 3/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 1.703 BF</span><br><span class="line">  42 Shortcut Layer: 39,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF</span><br><span class="line">  43 conv    128       1 x 1/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 0.189 BF</span><br><span class="line">  44 conv    128       3 x 3/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 1.703 BF</span><br><span class="line">  45 Shortcut Layer: 42,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF</span><br><span class="line">  46 conv    128       1 x 1/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 0.189 BF</span><br><span class="line">  47 conv    128       3 x 3/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 1.703 BF</span><br><span class="line">  48 Shortcut Layer: 45,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF</span><br><span class="line">  49 conv    128       1 x 1/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 0.189 BF</span><br><span class="line">  50 conv    128       3 x 3/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 1.703 BF</span><br><span class="line">  51 Shortcut Layer: 48,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF</span><br><span class="line">  52 conv    128       1 x 1/ 1     76 x  76 x 128 -&gt;   76 x  76 x 128 0.189 BF</span><br><span class="line">  53 route  52 25                                  -&gt;   76 x  76 x 256 </span><br><span class="line">  54 conv    256       1 x 1/ 1     76 x  76 x 256 -&gt;   76 x  76 x 256 0.757 BF</span><br><span class="line">  55 conv    512       3 x 3/ 2     76 x  76 x 256 -&gt;   38 x  38 x 512 3.407 BF</span><br><span class="line">  56 conv    256       1 x 1/ 1     38 x  38 x 512 -&gt;   38 x  38 x 256 0.379 BF</span><br><span class="line">  57 route  55                                     -&gt;   38 x  38 x 512</span><br><span class="line">  58 conv    256       1 x 1/ 1     38 x  38 x 512 -&gt;   38 x  38 x 256 0.379 BF</span><br><span class="line">  59 conv    256       1 x 1/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 0.189 BF</span><br><span class="line">  60 conv    256       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 1.703 BF</span><br><span class="line">  61 Shortcut Layer: 58,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF</span><br><span class="line">  62 conv    256       1 x 1/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 0.189 BF</span><br><span class="line">  63 conv    256       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 1.703 BF</span><br><span class="line">  64 Shortcut Layer: 61,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF</span><br><span class="line">  65 conv    256       1 x 1/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 0.189 BF</span><br><span class="line">  66 conv    256       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 1.703 BF</span><br><span class="line">  67 Shortcut Layer: 64,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF</span><br><span class="line">  68 conv    256       1 x 1/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 0.189 BF</span><br><span class="line">  69 conv    256       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 1.703 BF</span><br><span class="line">  70 Shortcut Layer: 67,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF</span><br><span class="line">  71 conv    256       1 x 1/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 0.189 BF</span><br><span class="line">  72 conv    256       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 1.703 BF</span><br><span class="line">  73 Shortcut Layer: 70,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF</span><br><span class="line">  74 conv    256       1 x 1/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 0.189 BF</span><br><span class="line">  75 conv    256       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 1.703 BF</span><br><span class="line">  76 Shortcut Layer: 73,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF</span><br><span class="line">  77 conv    256       1 x 1/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 0.189 BF</span><br><span class="line">  78 conv    256       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 1.703 BF</span><br><span class="line">  79 Shortcut Layer: 76,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF</span><br><span class="line">  80 conv    256       1 x 1/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 0.189 BF</span><br><span class="line">  81 conv    256       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 1.703 BF</span><br><span class="line">  82 Shortcut Layer: 79,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF</span><br><span class="line">  83 conv    256       1 x 1/ 1     38 x  38 x 256 -&gt;   38 x  38 x 256 0.189 BF</span><br><span class="line">  84 route  83 56                                  -&gt;   38 x  38 x 512 </span><br><span class="line">  85 conv    512       1 x 1/ 1     38 x  38 x 512 -&gt;   38 x  38 x 512 0.757 BF</span><br><span class="line">  86 conv   1024       3 x 3/ 2     38 x  38 x 512 -&gt;   19 x  19 x1024 3.407 BF</span><br><span class="line">  87 conv    512       1 x 1/ 1     19 x  19 x1024 -&gt;   19 x  19 x 512 0.379 BF</span><br><span class="line">  88 route  86                                     -&gt;   19 x  19 x1024</span><br><span class="line">  89 conv    512       1 x 1/ 1     19 x  19 x1024 -&gt;   19 x  19 x 512 0.379 BF</span><br><span class="line">  90 conv    512       1 x 1/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 0.189 BF</span><br><span class="line">  91 conv    512       3 x 3/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 1.703 BF</span><br><span class="line">  92 Shortcut Layer: 89,  wt = 0, wn = 0, outputs:  19 x  19 x 512 0.000 BF</span><br><span class="line">  93 conv    512       1 x 1/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 0.189 BF</span><br><span class="line">  94 conv    512       3 x 3/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 1.703 BF</span><br><span class="line">  95 Shortcut Layer: 92,  wt = 0, wn = 0, outputs:  19 x  19 x 512 0.000 BF</span><br><span class="line">  96 conv    512       1 x 1/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 0.189 BF</span><br><span class="line">  97 conv    512       3 x 3/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 1.703 BF</span><br><span class="line">  98 Shortcut Layer: 95,  wt = 0, wn = 0, outputs:  19 x  19 x 512 0.000 BF</span><br><span class="line">  99 conv    512       1 x 1/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 0.189 BF</span><br><span class="line"> 100 conv    512       3 x 3/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 1.703 BF</span><br><span class="line"> 101 Shortcut Layer: 98,  wt = 0, wn = 0, outputs:  19 x  19 x 512 0.000 BF</span><br><span class="line"> 102 conv    512       1 x 1/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 0.189 BF</span><br><span class="line"> 103 route  102 87                                 -&gt;   19 x  19 x1024</span><br><span class="line"> 104 conv   1024       1 x 1/ 1     19 x  19 x1024 -&gt;   19 x  19 x1024 0.757 BF</span><br><span class="line"> 105 conv    512       1 x 1/ 1     19 x  19 x1024 -&gt;   19 x  19 x 512 0.379 BF</span><br><span class="line"> 106 conv   1024       3 x 3/ 1     19 x  19 x 512 -&gt;   19 x  19 x1024 3.407 BF</span><br><span class="line"> 107 conv    512       1 x 1/ 1     19 x  19 x1024 -&gt;   19 x  19 x 512 0.379 BF</span><br><span class="line"> 108 max                5x 5/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 0.005 BF</span><br><span class="line"> 109 route  107                                            -&gt;   19 x  19 x 512</span><br><span class="line"> 110 max                9x 9/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 0.015 BF</span><br><span class="line"> 111 route  107                                            -&gt;   19 x  19 x 512</span><br><span class="line"> 112 max               13x13/ 1     19 x  19 x 512 -&gt;   19 x  19 x 512 0.031 BF</span><br><span class="line"> 113 route  112 110 108 107                        -&gt;   19 x  19 x2048</span><br><span class="line"> 114 conv    512       1 x 1/ 1     19 x  19 x2048 -&gt;   19 x  19 x 512 0.757 BF</span><br><span class="line"> 115 conv   1024       3 x 3/ 1     19 x  19 x 512 -&gt;   19 x  19 x1024 3.407 BF</span><br><span class="line"> 116 conv    512       1 x 1/ 1     19 x  19 x1024 -&gt;   19 x  19 x 512 0.379 BF</span><br><span class="line"> 117 conv    256       1 x 1/ 1     19 x  19 x 512 -&gt;   19 x  19 x 256 0.095 BF</span><br><span class="line"> 118 upsample                 2x    19 x  19 x 256 -&gt;   38 x  38 x 256</span><br><span class="line"> 119 route  85                                     -&gt;   38 x  38 x 512</span><br><span class="line"> 120 conv    256       1 x 1/ 1     38 x  38 x 512 -&gt;   38 x  38 x 256 0.379 BF</span><br><span class="line"> 121 route  120 118                                -&gt;   38 x  38 x 512 </span><br><span class="line"> 122 conv    256       1 x 1/ 1     38 x  38 x 512 -&gt;   38 x  38 x 256 0.379 BF</span><br><span class="line"> 123 conv    512       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 512 3.407 BF</span><br><span class="line"> 124 conv    256       1 x 1/ 1     38 x  38 x 512 -&gt;   38 x  38 x 256 0.379 BF</span><br><span class="line"> 125 conv    512       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 512 3.407 BF</span><br><span class="line"> 126 conv    256       1 x 1/ 1     38 x  38 x 512 -&gt;   38 x  38 x 256 0.379 BF</span><br><span class="line"> 127 conv    128       1 x 1/ 1     38 x  38 x 256 -&gt;   38 x  38 x 128 0.095 BF</span><br><span class="line"> 128 upsample                 2x    38 x  38 x 128 -&gt;   76 x  76 x 128</span><br><span class="line"> 129 route  54                                     -&gt;   76 x  76 x 256</span><br><span class="line"> 130 conv    128       1 x 1/ 1     76 x  76 x 256 -&gt;   76 x  76 x 128 0.379 BF</span><br><span class="line"> 131 route  130 128                                -&gt;   76 x  76 x 256</span><br><span class="line"> 132 conv    128       1 x 1/ 1     76 x  76 x 256 -&gt;   76 x  76 x 128 0.379 BF</span><br><span class="line"> 133 conv    256       3 x 3/ 1     76 x  76 x 128 -&gt;   76 x  76 x 256 3.407 BF</span><br><span class="line"> 134 conv    128       1 x 1/ 1     76 x  76 x 256 -&gt;   76 x  76 x 128 0.379 BF</span><br><span class="line"> 135 conv    256       3 x 3/ 1     76 x  76 x 128 -&gt;   76 x  76 x 256 3.407 BF</span><br><span class="line"> 136 conv    128       1 x 1/ 1     76 x  76 x 256 -&gt;   76 x  76 x 128 0.379 BF</span><br><span class="line"> 137 conv    256       3 x 3/ 1     76 x  76 x 128 -&gt;   76 x  76 x 256 3.407 BF</span><br><span class="line"> 138 conv    255       1 x 1/ 1     76 x  76 x 256 -&gt;   76 x  76 x 255 0.754 BF</span><br><span class="line"> 139 yolo</span><br><span class="line">[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.20</span><br><span class="line">nms_kind: greedynms (1), beta = 0.600000</span><br><span class="line"> 140 route  136                                            -&gt;   76 x  76 x 128</span><br><span class="line"> 141 conv    256       3 x 3/ 2     76 x  76 x 128 -&gt;   38 x  38 x 256 0.852 BF</span><br><span class="line"> 142 route  141 126                                -&gt;   38 x  38 x 512 </span><br><span class="line"> 143 conv    256       1 x 1/ 1     38 x  38 x 512 -&gt;   38 x  38 x 256 0.379 BF</span><br><span class="line"> 144 conv    512       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 512 3.407 BF</span><br><span class="line"> 145 conv    256       1 x 1/ 1     38 x  38 x 512 -&gt;   38 x  38 x 256 0.379 BF</span><br><span class="line"> 146 conv    512       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 512 3.407 BF</span><br><span class="line"> 147 conv    256       1 x 1/ 1     38 x  38 x 512 -&gt;   38 x  38 x 256 0.379 BF</span><br><span class="line"> 148 conv    512       3 x 3/ 1     38 x  38 x 256 -&gt;   38 x  38 x 512 3.407 BF</span><br><span class="line"> 149 conv    255       1 x 1/ 1     38 x  38 x 512 -&gt;   38 x  38 x 255 0.377 BF</span><br><span class="line"> 150 yolo</span><br><span class="line">[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.10</span><br><span class="line">nms_kind: greedynms (1), beta = 0.600000</span><br><span class="line"> 151 route  147                                            -&gt;   38 x  38 x 256</span><br><span class="line"> 152 conv    512       3 x 3/ 2     38 x  38 x 256 -&gt;   19 x  19 x 512 0.852 BF</span><br><span class="line"> 153 route  152 116                                -&gt;   19 x  19 x1024</span><br><span class="line"> 154 conv    512       1 x 1/ 1     19 x  19 x1024 -&gt;   19 x  19 x 512 0.379 BF</span><br><span class="line"> 155 conv   1024       3 x 3/ 1     19 x  19 x 512 -&gt;   19 x  19 x1024 3.407 BF</span><br><span class="line"> 156 conv    512       1 x 1/ 1     19 x  19 x1024 -&gt;   19 x  19 x 512 0.379 BF</span><br><span class="line"> 157 conv   1024       3 x 3/ 1     19 x  19 x 512 -&gt;   19 x  19 x1024 3.407 BF</span><br><span class="line"> 158 conv    512       1 x 1/ 1     19 x  19 x1024 -&gt;   19 x  19 x 512 0.379 BF</span><br><span class="line"> 159 conv   1024       3 x 3/ 1     19 x  19 x 512 -&gt;   19 x  19 x1024 3.407 BF</span><br><span class="line"> 160 conv    255       1 x 1/ 1     19 x  19 x1024 -&gt;   19 x  19 x 255 0.189 BF</span><br><span class="line"> 161 yolo</span><br><span class="line">[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.05</span><br><span class="line">nms_kind: greedynms (1), beta = 0.600000</span><br><span class="line">Total BFLOPS 128.459</span><br><span class="line">avg_outputs = 1068395</span><br><span class="line"> Allocate additional workspace_size = 52.43 MB</span><br><span class="line">Loading weights from yolov4.weights...</span><br><span class="line"> seen 64, trained: 32032 K-images (500 Kilo-batches_64)</span><br><span class="line">Done! Loaded 162 layers from weights-file </span><br><span class="line"> Detection layer: 139 - type = 28 </span><br><span class="line"> Detection layer: 150 - type = 28 </span><br><span class="line"> Detection layer: 161 - type = 28</span><br><span class="line">origin.jpg: Predicted in 184.923000 milli-seconds.</span><br><span class="line">person: 98%</span><br><span class="line">car: 94%</span><br><span class="line">truck: 31%</span><br><span class="line">car: 88%</span><br><span class="line">car: 99%</span><br><span class="line">person: 99%</span><br><span class="line">person: 37%</span><br><span class="line">car: 99%</span><br><span class="line">bus: 57%</span><br><span class="line">truck: 60%</span><br><span class="line">car: 99%</span><br></pre></td></tr></table></figure>
<h3 id="结果"><a class="markdownIt-Anchor" href="#结果"></a> 结果</h3>
<p>可以看到预测结果，同时darknet里面也输出了GPU的信息<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/predictions.jpg" alt="predictions" /></p>
<h2 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h2>
<p>win10版本的darknet gpu版本安装完成。道路坎坷，记录下踩过的坑</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>毕业设计</tag>
        <tag>yolo</tag>
        <tag>darknet</tag>
      </tags>
  </entry>
  <entry>
    <title>win10家庭版下安装docker</title>
    <url>/2021/03/18/installDocker/</url>
    <content><![CDATA[<p>因为装软件、装环境老是折腾，就开始思考各个生产环境之间隔离或者直接使用他人配好的环境。因而想到了人们常说的docker。因此打算安装来体验一下</p>
<span id="more"></span>
<h1 id="系统要求"><a class="markdownIt-Anchor" href="#系统要求"></a> 系统要求</h1>
<p>根据官方文档，<code>Docker Desktop on Windows</code>需要win10专业版、企业版或者教育版(Build 17134 or later)。而我的电脑为win10家庭版，因此选择另一套方案。</p>
<p>win10家庭版的系统要求如下</p>
<ul>
<li>win10 v1903版本或者更高</li>
<li>开启WSL2
<ul>
<li>64位处理器且有SLAT指令</li>
<li>4G内存</li>
<li>BIOS开启虚拟化</li>
</ul>
</li>
<li>下载并升级<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10#step-4---download-the-linux-kernel-update-package">linux内核包</a></li>
</ul>
<h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1>
<ol>
<li>下载<a href="https://desktop.docker.com/win/stable/Docker%20Desktop%20Installer.exe">Docker Desktop Installer</a>并双击运行</li>
<li>确保WSL2那个特性打开<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.5/dockerInstallerConfig.png" alt="enable WSL2" /></li>
<li>跟着安装帮助即可</li>
</ol>
<h2 id="错误"><a class="markdownIt-Anchor" href="#错误"></a> 错误</h2>
<p>我就知道安装没有这么容易，果然碰到了问题。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.5/error.png" alt="error" /><br />
通过<code>everything</code>我找到了<code>install-log.txt</code>。然而里面的关键信息就这么点。明明已经用管理员运行了，但是还是未授权。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Exception type: System.Exception, Exception message: Component CommunityInstaller.AutoStartAction failed: 尝试执行未经授权的操作。, StackTrace:</span><br><span class="line">   在 CommunityInstaller.InstallWorkflow.&lt;DoHandleD4WPackageAsync&gt;d__29.MoveNext()</span><br><span class="line">--- 引发异常的上一位置中堆栈跟踪的末尾 ---</span><br><span class="line">   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()</span><br><span class="line">   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)</span><br><span class="line">   在 CommunityInstaller.InstallWorkflow.&lt;DoProcessAsync&gt;d__23.MoveNext()</span><br></pre></td></tr></table></figure>
<p>就在我一筹莫展的时候，我看到了一个服务器部署win10服务未授权解决的文章，说是360阻断了。于是我尝试将我的联想电脑管家关闭，果然安装成功了。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.5/docker.png" alt="docker" /></p>
<h1 id="参考档案"><a class="markdownIt-Anchor" href="#参考档案"></a> 参考档案</h1>
<p><a href="https://docs.docker.com/docker-for-windows/install/">docker for win10 pro</a></p>
<p><a href="https://docs.docker.com/docker-for-windows/install-windows-home/">docker for win10 home</a></p>
<p><a href="https://qianxu.run/2020/10/23/upgradeWSL2/">WSL2安装</a></p>
<p><a href="https://blog.csdn.net/qq736150416/article/details/80137675">灵感</a></p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>MinGW编译C++无法输出string</title>
    <url>/2021/03/19/mingw64problem/</url>
    <content><![CDATA[<p>在调试程序的时候遇到了一个奇葩的问题，C++无法使用string。最后发现居然是MinGW64的问题</p>
<span id="more"></span>
<h1 id="起因"><a class="markdownIt-Anchor" href="#起因"></a> 起因</h1>
<p>在帮助别人调试<a href="https://github.com/hediet/vscode-debug-visualizer">vscode-debug-visualizer</a>这个插件的时候，遇到了无法出结果的问题。经过一系列定位后发现，居然是使用了string就无法运行，而编译不会出错。</p>
<h1 id="测试程序"><a class="markdownIt-Anchor" href="#测试程序"></a> 测试程序</h1>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// visualize `myGraphJson`!</span></span><br><span class="line">    string myGraphJson = <span class="string">&quot;&#123;\&quot;kind\&quot;:&#123;\&quot;graph\&quot;:true&#125;,&quot;</span></span><br><span class="line">        <span class="string">&quot;\&quot;nodes\&quot;:[&#123;\&quot;id\&quot;:\&quot;1\&quot;&#125;,&#123;\&quot;id\&quot;:\&quot;2\&quot;&#125;],&quot;</span></span><br><span class="line">        <span class="string">&quot;\&quot;edges\&quot;:[&#123;\&quot;from\&quot;:\&quot;1\&quot;,\&quot;to\&quot;:\&quot;2\&quot;&#125;]&#125;&quot;</span>;</span><br><span class="line">    cout &lt;&lt; myGraphJson;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="错误现象"><a class="markdownIt-Anchor" href="#错误现象"></a> 错误现象</h1>
<p>使用编译指令如下</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">g++ <span class="literal">-g</span> main.c <span class="literal">-o</span> main.exe</span><br></pre></td></tr></table></figure>
<p>结果正常，运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.\main.exe</span><br></pre></td></tr></table></figure>
<p>输出为空</p>
<p>使用gdb进行debug。错误如下</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ERROR: Unable to <span class="built_in">start</span> debugging. Unexpected GDB output from command <span class="string">&quot;-exec-run&quot;</span>. During startup program exited with code <span class="number">0</span>xc0000139.</span><br></pre></td></tr></table></figure>
<h1 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h1>
<p>在<a href="https://stackoverflow.com/questions/18668003/the-procedure-entry-point-gxx-personality-v0-could-not-be-located">stackoverflow</a>上找到解决方案。</p>
<p>从<code>MinGW</code>的安装目录里面找到<code>bin</code>文件夹。将里面的<code>libstdc++-6.dll</code>拷贝到工作目录。目录结构如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+ .vscode</span><br><span class="line">    launch.json</span><br><span class="line">    tasks.json</span><br><span class="line">libstdc++-6.dll</span><br><span class="line">main.cpp</span><br></pre></td></tr></table></figure>
<p>再次进行编译、运行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">g++ <span class="literal">-g</span> main.c <span class="literal">-o</span> main.exe</span><br><span class="line">.\main.exe</span><br></pre></td></tr></table></figure>
<p>输出</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;kind&quot;</span>:&#123;<span class="string">&quot;graph&quot;</span>:true&#125;,<span class="string">&quot;nodes&quot;</span>:[&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1&quot;</span>&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;2&quot;</span>&#125;],<span class="string">&quot;edges&quot;</span>:[&#123;<span class="string">&quot;from&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;to&quot;</span>:<span class="string">&quot;2&quot;</span>&#125;]&#125;</span><br></pre></td></tr></table></figure>
<p>gdb的debug结果正常</p>
<h1 id="吐槽"><a class="markdownIt-Anchor" href="#吐槽"></a> 吐槽</h1>
<p>这个问题在7年前就被提出了，居然现在还有。MinGW真是坑啊，用了环境变量也没用。</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>安装tensorflow-gpu版本</title>
    <url>/2021/03/26/install-tensorflow-gpu/</url>
    <content><![CDATA[<p>对于个人而言，还是比较习惯使用tensorflow的keras</p>
<span id="more"></span>
<h1 id="安装cuda和cudnn"><a class="markdownIt-Anchor" href="#安装cuda和cudnn"></a> 安装cuda和cudnn</h1>
<p>安装方法可以见<a href="https://qianxu.run/2021/01/18/installpytorch/">pytorch的安装</a>，对于tensorflow已有的gpu支持可以见<a href="https://tensorflow.google.cn/install/source_windows#gpu">此</a>。不提前装cuda和cudnn的方法见<a href="#%E4%BD%BF%E7%94%A8conda%E5%AE%89%E8%A3%85cuda%E5%92%8Ccudnn">使用conda安装cuda和cudnn</a></p>
<h1 id="安装tensorflow-gpu"><a class="markdownIt-Anchor" href="#安装tensorflow-gpu"></a> 安装tensorflow-gpu</h1>
<p>由于我刚好符合<code>tensorflow-gpu 2.4.0</code>，而<code>conda</code>还没有这个包，因此使用<code>pip</code>进行安装</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install tensorflow-gpu==<span class="number">2.4</span><span class="number">.0</span> -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
<p>镜像源可能下载速度还是不行，可以直接本地安装</p>
<h1 id="验证gpu"><a class="markdownIt-Anchor" href="#验证gpu"></a> 验证gpu</h1>
<p>运行代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(tf.__version__)</span><br><span class="line"><span class="built_in">print</span>(tf.config.list_physical_devices())</span><br></pre></td></tr></table></figure>
<p>输出结果如下</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">35.277510</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">49</span>] Successfully opened dynamic library cudart64_110.dll2.<span class="number">4.0</span></span><br><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.259583</span>: I tensorflow/compiler/jit/xla_cpu_device.cc:<span class="number">41</span>] Not creating XLA devices, tf_xla_enable_xla_devices not <span class="built_in">set</span></span><br><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.261539</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">49</span>] Successfully opened dynamic library nvcuda.dll      </span><br><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.307535</span>: I tensorflow/core/common_runtime/gpu/gpu_device.cc:<span class="number">1720</span>] Found device <span class="number">0</span> with properties: </span><br><span class="line">pciBusID: <span class="number">0000</span>:<span class="number">01</span>:<span class="number">00.0</span> name: GeForce GTX <span class="number">1050</span> computeCapability: <span class="number">6.1</span></span><br><span class="line">coreClock: <span class="number">1.493</span>GHz coreCount: <span class="number">5</span> deviceMemorySize: <span class="number">2.00</span>GiB deviceMemoryBandwidth: <span class="number">104.43</span>GiB/s</span><br><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.308404</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">49</span>] Successfully opened dynamic library cudart64_110.dll2021<span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.322068</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">49</span>] Successfully opened dynamic library cublas64_11.dll </span><br><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.322414</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">49</span>] Successfully opened dynamic library cublasLt64_11.dll</span><br><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.329903</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">49</span>] Successfully opened dynamic library cufft64_10.dll  </span><br><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.332538</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">49</span>] Successfully opened dynamic library curand64_10.dll </span><br><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.347776</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">49</span>] Successfully opened dynamic library cusolver64_10.dll</span><br><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.357722</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">49</span>] Successfully opened dynamic library cusparse64_11.dll</span><br><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.362238</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">49</span>] Successfully opened dynamic library cudnn64_8.dll   </span><br><span class="line"><span class="number">2021</span><span class="literal">-03-26</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">39.362701</span>: I tensorflow/core/common_runtime/gpu/gpu_device.cc:<span class="number">1862</span>] Adding visible gpu devices: <span class="number">0</span></span><br><span class="line">[<span class="type">PhysicalDevice</span>(<span class="type">name</span>=<span class="string">&#x27;/physical_device:CPU:0&#x27;</span>, <span class="type">device_type</span>=<span class="string">&#x27;CPU&#x27;</span>), <span class="type">PhysicalDevice</span>(<span class="type">name</span>=<span class="string">&#x27;/physical_device:GPU:0&#x27;</span>, <span class="type">device_type</span>=<span class="string">&#x27;GPU&#x27;</span>)]</span><br></pre></td></tr></table></figure>
<h1 id="使用conda安装cuda和cudnn"><a class="markdownIt-Anchor" href="#使用conda安装cuda和cudnn"></a> 使用conda安装cuda和cudnn</h1>
<p>事实上使用conda的时候不提前装cuda和cudnn也是可以的。<br />
执行以下代码即可。注意对比tensorflow的gpu支持版本，见<a href="https://tensorflow.google.cn/install/source_windows#gpu">此</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">conda install cudatoolkit=<span class="number">10.1</span> cudnn=<span class="number">7.6</span><span class="number">.5</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>tmux vs screen</title>
    <url>/2021/03/28/tmux-vs-screen/</url>
    <content><![CDATA[<p>本文将对tmux与screen命令的使用进行比较，并简单的进行对比。</p>
<p>封面图片来源《妄想破绽》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>你是否有过在SSH连接远程终端的时候，需要同时后台运行多个程序，抑或是需要开启多个终端进行观察。那么你需要一个终端复用程序，比如<code>tmux</code>或者<code>screen</code>。<code>tmux</code>和<code>screen</code>命令差不多，都是终端复用程序，你还可以在SSH断开后重新连接端口继续执行命令。</p>
<h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1>
<p>如果你的Ubuntu没有<code>tmux</code>或者<code>screen</code>，那么你可以使用如下命令进行安装</p>
<p><code>tmux</code>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install tmux</span><br></pre></td></tr></table></figure>
<p><code>screen</code>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install screen</span><br></pre></td></tr></table></figure>
<h1 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h1>
<h2 id="tmux"><a class="markdownIt-Anchor" href="#tmux"></a> tmux</h2>
<h3 id="简单创建"><a class="markdownIt-Anchor" href="#简单创建"></a> 简单创建</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tmux</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.2/simple-tmux.png" alt="效果图" /></p>
<p>[0]0:zsh* : 意味着现在是session name为0，session number为0，环境为zsh，*意味着当前窗口</p>
<p>“DESKTOP-7A4A8RD” : hostname</p>
<p>18:59 28-Mar-21 : 当前时间</p>
<h3 id="创建一个有名字的session"><a class="markdownIt-Anchor" href="#创建一个有名字的session"></a> 创建一个有名字的session</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tmux new -s &lt;session-name&gt;</span><br></pre></td></tr></table></figure>
<p>此时可以看到原本[0]里面的0变成了设置的session-name</p>
<h3 id="竖直分离窗口"><a class="markdownIt-Anchor" href="#竖直分离窗口"></a> 竖直分离窗口</h3>
<p>在<code>tmux</code>窗口中按下<code>ctrl+b</code>然后再按下<code>%</code><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.2/tmux-vertically.png" alt="效果图" /></p>
<h3 id="水平分离窗口"><a class="markdownIt-Anchor" href="#水平分离窗口"></a> 水平分离窗口</h3>
<p>在<code>tmux</code>窗口中按下<code>ctrl+b</code>然后再按下<code>&quot;</code><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.2/tmux-horizontally.png" alt="效果图" /></p>
<h3 id="展示会话编号"><a class="markdownIt-Anchor" href="#展示会话编号"></a> 展示会话编号</h3>
<p>在<code>tmux</code>窗口中按下<code>ctrl+b</code>然后再按下<code>q</code><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.2/tmux-number.png" alt="效果图" /></p>
<h3 id="切换窗口"><a class="markdownIt-Anchor" href="#切换窗口"></a> 切换窗口</h3>
<p>在<code>tmux</code>窗口中按下<code>ctrl+b</code>然后再按下<code>o</code></p>
<h3 id="关闭窗口"><a class="markdownIt-Anchor" href="#关闭窗口"></a> 关闭窗口</h3>
<p>在<code>tmux</code>窗口中按下<code>ctrl+b</code>然后再按下<code>x</code>或者<code>ctrl+d</code></p>
<h3 id="列出已有tmux"><a class="markdownIt-Anchor" href="#列出已有tmux"></a> 列出已有tmux</h3>
<p>在<code>tmux</code>窗口中按下<code>ctrl+b</code>然后再按下<code>s</code><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.2/tmux-list.png" alt="效果图" /></p>
<h3 id="分离会话"><a class="markdownIt-Anchor" href="#分离会话"></a> 分离会话</h3>
<p>在<code>tmux</code>窗口中按下<code>ctrl+b</code>然后再按下<code>d</code>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tmux detach</span><br></pre></td></tr></table></figure>
<h3 id="重连会话"><a class="markdownIt-Anchor" href="#重连会话"></a> 重连会话</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tmux attach -t &lt;session-name&gt;</span><br></pre></td></tr></table></figure>
<h3 id="杀死会话"><a class="markdownIt-Anchor" href="#杀死会话"></a> 杀死会话</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tmux kill-session -t &lt;session-name&gt;</span><br></pre></td></tr></table></figure>
<h2 id="screen"><a class="markdownIt-Anchor" href="#screen"></a> screen</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen [-AmRvx -<span class="built_in">ls</span> -wipe][-d &lt;作业名称&gt;][-h &lt;行数&gt;][-r &lt;作业名称&gt;][-s &lt;shell&gt;][-S &lt;作业名称&gt;]</span><br></pre></td></tr></table></figure>
<p>wsl中使用<code>screen</code>提示权限不足可以参考本文末尾的<a href="#wsl%E4%B8%AD%E6%8F%90%E7%A4%BAscreen%E9%9C%80%E8%A6%81root%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3">wsl中提示screen需要root权限解决</a></p>
<h3 id="创建简单窗口"><a class="markdownIt-Anchor" href="#创建简单窗口"></a> 创建简单窗口</h3>
<p>在<code>screen</code>窗口中按下<code>ctrl+a</code>然后再按下<code>c</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.2/simple-screen.png" alt="效果图" /></p>
<h3 id="创建终端并运行命令"><a class="markdownIt-Anchor" href="#创建终端并运行命令"></a> 创建终端并运行命令</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen vi main.c</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.2/screen-simple-command.png" alt="效果图" /></p>
<h3 id="离开screen终端"><a class="markdownIt-Anchor" href="#离开screen终端"></a> 离开screen终端</h3>
<p>在<code>screen</code>窗口中按下<code>ctrl+a</code>然后再按下<code>d</code></p>
<h3 id="显示已经创建的screen"><a class="markdownIt-Anchor" href="#显示已经创建的screen"></a> 显示已经创建的screen</h3>
<p>在<code>screen</code>窗口中按下<code>ctrl+a</code>然后再按下<code>&quot;</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -<span class="built_in">ls</span></span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.2/screen-list.png" alt="效果图" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.2/screen-list2.png" alt="效果图" /></p>
<h3 id="重新连接会话"><a class="markdownIt-Anchor" href="#重新连接会话"></a> 重新连接会话</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -r &lt;<span class="built_in">id</span>&gt;</span><br></pre></td></tr></table></figure>
<h3 id="水平分割"><a class="markdownIt-Anchor" href="#水平分割"></a> 水平分割</h3>
<p>在<code>screen</code>窗口中按下<code>ctrl+a</code>然后再按下<code>|</code>，只会分割而不会创建新的session。使用<code>ctrl+a</code>然后按下<code>tab</code>切换窗口，<code>ctrl+a</code>然后按下<code>c</code>新建session。下同<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.2/screen-horizontally.png" alt="效果图" /></p>
<h3 id="screen竖直分割"><a class="markdownIt-Anchor" href="#screen竖直分割"></a> screen竖直分割</h3>
<p>在<code>screen</code>窗口中按下<code>ctrl+a</code>然后再按下<code>S</code>。注意大写<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.2/screen-vertically.png" alt="效果图" /></p>
<h3 id="分割中切换窗口"><a class="markdownIt-Anchor" href="#分割中切换窗口"></a> 分割中切换窗口</h3>
<p>使用<code>ctrl+a</code>然后按下<code>tab</code>切换窗口</p>
<h3 id="杀死session"><a class="markdownIt-Anchor" href="#杀死session"></a> 杀死session</h3>
<p>使用<code>ctrl+d</code></p>
<h1 id="对比"><a class="markdownIt-Anchor" href="#对比"></a> 对比</h1>
<p><code>screen</code>和<code>tmux</code>都是终端复用，大体的功能上都差不多，<code>tmux</code>是BSD协议，<code>screen</code>是GNU协议。从个人感觉上<code>tmux</code>对个人更友好，在分割窗口 时候自动创建新会话，同时有状态条显示，还可以自动命名窗口，这是<code>screen</code>没有的。<code>screen</code>可以和其他用户分享会话，而<code>tmux</code>不行。</p>
<h1 id="wsl中提示screen需要root权限解决"><a class="markdownIt-Anchor" href="#wsl中提示screen需要root权限解决"></a> wsl中提示screen需要root权限解决</h1>
<p>参考<a href="https://superuser.com/questions/1195962/cannot-make-directory-var-run-screen-permission-denied">superuser</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.screen &amp;&amp; <span class="built_in">chmod</span> 700 ~/.screen</span><br></pre></td></tr></table></figure>
<p>可以把下面这一句放进<code>~/.bashrc</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> SCREENDIR=<span class="variable">$HOME</span>/.screen</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p><a href="https://linuxhint.com/tmux_vs_screen/">Tmux vs. Screen tool comparison</a><br />
<a href="https://www.howtogeek.com/671422/how-to-use-tmux-on-linux-and-why-its-better-than-screen/">How to Use tmux on Linux (and Why It’s Better Than Screen)</a><br />
<a href="https://blog.csdn.net/yuanxinfei920/article/details/78712990">使用tmux分屏（既可以左右分屏，也可以上下分屏）</a><br />
<a href="http://www.ruanyifeng.com/blog/2019/10/tmux.html">Tmux 使用教程</a><br />
<a href="https://www.runoob.com/linux/linux-comm-screen.html">Linux screen命令</a><br />
<a href="https://superuser.com/questions/1195962/cannot-make-directory-var-run-screen-permission-denied">Cannot make directory ‘/var/run/screen’: Permission denied</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Network in Network 学习笔记</title>
    <url>/2021/03/29/NIN-Note/</url>
    <content><![CDATA[<p>因为在YOLO里面看到了使用Global Average Pooling替换全连接层，同时也在其他网络里面发现也都使用了Global Average Pooling替换全连接层。因此，打算来读一下这篇提出了Global Average Pooling的Network in Network。</p>
<p>封面来源《9nine》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>  <a href="https://arxiv.org/abs/1312.4400">Network in Network</a>（下面简称NIN）认为CNN中的卷积核是基础数据补丁的广义线性模型（GLM），同时他认为GLM的抽象层次比较低。用更有效的非线性函数逼近器代替GLM，可以提高局部模型的抽象能力。当潜在概念的样本线性可分离时，GLM可以达到很好的抽象程度，即概念的变体都存在于GLM定义的分离平面的一侧。因此，传统的CNN隐式地假设潜在概念是线性可分的。然而，同一概念的数据往往存在于非线性流形上，因此捕获这些概念的表示通常是输入的高度非线性的函数。在NIN中使用了一种通用的非线性函数逼近器的“微型网络”结果来替代GLM。在NIN一文中就是选择了多层感知器MLP作为非线性函数逼近器。<br />
  在NIN一文中提出了两个创新点：Mlpconv和Global Average Pooling</p>
<h1 id="mlpconv"><a class="markdownIt-Anchor" href="#mlpconv"></a> Mlpconv</h1>
<p>  在没有关于潜在先验分布的情况下，使用通用函数逼近器来提取局部补丁的特征是可行的，因为它能够逼近潜在概念的更抽象的表示。径向基网络（Radial basis network）和多层感知器（multilayer perceptron）是两个知名的通用函数逼近器。NIN一文中选择使用多层感知是基于以下两个原因。这种新型的层就叫做mlpconv。</p>
<ol>
<li>多层感知器和卷积神经网络一样，都是通过反向传播进行训练</li>
<li>多层感知器自身也是一个深度模型，符合特征再利用的原则</li>
</ol>
<h2 id="传统卷积"><a class="markdownIt-Anchor" href="#传统卷积"></a> 传统卷积</h2>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.1/linear-conv.png" alt="" /><br />
GLM中的卷积结构如上图所示，以激活函数为Relu为例子，其计算如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msubsup><mi>ω</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi>x</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{i,j,k} = max(\omega_k^Tx_{i,j},0)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.177439em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="mlp卷积"><a class="markdownIt-Anchor" href="#mlp卷积"></a> mlp卷积</h2>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.1/mlpconv-layer.png" alt="" /><br />
mlp中的卷积格式如上所示，以Relu激活函数为例子，其计算公式如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><msub><mi>k</mi><mn>1</mn></msub></mrow><mn>1</mn></msubsup><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msup><msubsup><mi>ω</mi><msub><mi>k</mi><mn>1</mn></msub><mn>1</mn></msubsup><mi>T</mi></msup><msub><mi>x</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>+</mo><msub><mi>b</mi><msub><mi>k</mi><mn>1</mn></msub></msub><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><msub><mi>k</mi><mi>n</mi></msub></mrow><mi>n</mi></msubsup><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msup><msubsup><mi>ω</mi><msub><mi>k</mi><mi>n</mi></msub><mi>n</mi></msubsup><mi>T</mi></msup><msubsup><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo>+</mo><msub><mi>b</mi><msub><mi>k</mi><mi>n</mi></msub></msub><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{matrix}
f_{i,j,k_1}^1 = max({\omega_{k_1}^1}^Tx_{i,j}+b_{k_1},0)\\ 
\vdots \\
f_{i,j,k_n}^n = max({\omega_{k_n}^n}^Tf_{i,j}^{n-1}+b_{k_n},0)
\end{matrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.639393999999999em;vertical-align:-2.0696969999999997em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5696969999999997em;"><span style="top:-5.211857999999999em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3832079999999999em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0453389999999998em;"><span style="top:-3.267008em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span><span style="top:-3.2926419999999994em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.0370190000000004em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3832079999999999em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.895623em;"><span style="top:-3.117292em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.4231360000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0696969999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>  这种跨通道参数池化层与1×1的卷积核等效，实际上就是1×1的卷积实现。这使得NIN的结构容易理解。</p>
<h2 id="关于11卷积"><a class="markdownIt-Anchor" href="#关于11卷积"></a> 关于1×1卷积</h2>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.1/conv.gif" alt="conv" /><br />
  卷积核的计算如上图所示，输出通道与卷积核的个数是相等的。对于输入单通道的单个1×1卷积核，此时就相当于feature map乘以一个系数，而当输入为多个通道的时候，相当于把多个feature map线性加权求和再通过一个激活函数，其功能与全连接相似，权重共享，参数更少。</p>
<h1 id="global-average-pooling"><a class="markdownIt-Anchor" href="#global-average-pooling"></a> Global Average Pooling</h1>
<p>  传统的卷积神经网络在做分类任务的时候，会对最后一个卷积层得到的特征图向量化并送入全连接层，再经过一个softmax逻辑回归。但是全连接层容易过拟合，阻碍网络泛化性，直到Hinton等人提出dropout，提升了其泛化能力，预防过拟合。<br />
  NIN中提出了另一种策略，也就是全局平均池化来替代全连接。在最后一个mlpconv层生成的每张特征图直接求平均，得到结果向量输入到softmax。全局平均池化相比全连接层的优点在于通过增强特征图与类比间的对应关系使卷积结构保留的更好，使特征图分类是可信的得到很好的解释；另一个优点是全局平均池化层中没有参数需要优化，因此避免了过拟合；此外，全局平均池化汇聚了空间信息，所以对输入的空间转换更有鲁棒性。</p>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<ol>
<li>改变卷积结构，使用1×1卷积，相当于一个微型的全连接层，提高卷积层抽象能力。</li>
<li>使用全局平均池化替代全连接避免过拟合，对输入的空间转换更有鲁棒性。</li>
</ol>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p>[1] Lin M ,  Chen Q ,  Yan S . Network In Network[J]. Computer Science, 2013.</p>
]]></content>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLOv4学习笔记</title>
    <url>/2021/04/07/YOLOv4-Note/</url>
    <content><![CDATA[<p>因为一直没有懂yolov4，因此这次重新阅读YOLOv4并且留下一点点笔记。其实基本是简要翻译(逃)，结果没简要到哪里去建议直接看<a href="#%E6%80%BB%E7%BB%93">总结</a><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.0/Comparison-of-YOLOv4.png" alt="YOLOv4和其他最先进的检测器对比" /><br />
封面来源《9nine》</p>
<span id="more"></span>
<h1 id="主要工作"><a class="markdownIt-Anchor" href="#主要工作"></a> 主要工作</h1>
<p>  作者在这方面指出了，大多数基于CNN的检测器大量部署于推荐系统。提高实时对象检测器的准确度不仅可以用于推荐系统生成提示，还可以用于独立的过程管理和减少人工输入。传统图形处理单元(GPU)上的实时目标检测器操作允许以经济实惠的价格大规模使用。最准确的现代神经网络不能实时进行操作，且需要大量的GPU进行小批次的训练。<br />
  作者希望能够使得YOLOv4易于训练，同时可以使用传统的GPU来获得实时的高质量且令人信服的检测效果。<br />
  其工作总结如下：</p>
<ol>
<li>开发了一个高效且强大的物体检测模型。使得任何人都可以使用1080 Ti或者2080 Ti GPU来训练一个超快且准确的物体检测器。</li>
<li>在训练检测器的时候，验证了最先进的物体检测中的Bag of Freebies和Bag of Specials方法(关于这两个词，可以见<a href="#bag-of-freebies">Bag of freebies</a>和<a href="#bag-of-specials">Bag of speicals</a>)</li>
<li>修改了最先进的方法，使其更高效，更适合单个GPU训练，包含了CBN,PAN,SAM等</li>
</ol>
<h1 id="相关工作"><a class="markdownIt-Anchor" href="#相关工作"></a> 相关工作</h1>
<h2 id="物体检测方法"><a class="markdownIt-Anchor" href="#物体检测方法"></a> 物体检测方法</h2>
<p>  在此处，作者对现代的一些检测方法进行了简单的介绍。现代的检测器通常由两部分组成。一个在ImageNet上经过预训练的骨架(backbone)和一个用于预测类和物体边界框的头(head)。对于那些运行在GPU平台上的检测器，其backbone可能是VGG、ResNet、ResNeXt或者DenseNet。对于那些运行在CPU平台上的检测器，其backbone可能是SqueezeNet，MobileNet或者ShuffleNet。对于head部分，其通常可以被分类为两种，即one-stage的物体检测器和two-stage的物体检测器。最具代表性的two-stage物体检测器是R-CNN系列，包含fast R-CNN，faster R-CNN,R-FCN和Libra R-CNN。也可以使得two-stage物体检测器变成一个anchor-free(无锚框)的物体检测器，比如RepPoints。对于one-stage检测器，最具代表性的就是YOLO,SSD和RetinaNet。最近几年也有anchor-free的one-stage检测器，比如CenterNet，CornerNet,FCOS等。近年来的物体检测发展中，经常在head和backbone之间插入一些层，这些层被称为检测器的颈部(neck)。通常neck由几个bottom-up路径和几个top-down路径组成。使用这种配置的网络包含Feature Pyramid Network(FPN),Path Aggregation Network(PAN)BiFPN和NAS-FPN。除了上述模型，一些研究者还专注于直接搭建一个新的backbone(DetNet,DetNAS)或者一个全新的物体检测模型(SpineNet，HitDetector)。</p>
<h2 id="普通目标检测器的组成部分"><a class="markdownIt-Anchor" href="#普通目标检测器的组成部分"></a> 普通目标检测器的组成部分</h2>
<ul>
<li><strong>Input:</strong> Image,Patches,Image Pyramid</li>
<li><strong>Backbone:</strong> VGG16,ResNet,SpineNet,EfficientNet-B0/B7,CSPResNeXt50,CSPDarknet53</li>
<li><strong>Neck:</strong>
<ul>
<li><strong>Additional block:</strong> SPP,ASPP,RFB,SAM</li>
<li>**Path-aggregation block:**FPN,BiFPN,ASFF,SFAM</li>
</ul>
</li>
<li><strong>Heads:</strong>
<ul>
<li><strong>Dense Prediction(one-stage):</strong>
<ul>
<li>RPN,SSD,YOLO,RetinaNet(anchor based)</li>
<li>CornerNet,CenterNet,MatrixNet,FCOS(anchor free)</li>
</ul>
</li>
<li><strong>Sparse Prediction(two-stage):</strong>
<ul>
<li>Faster R-CNN,R-FCN,Mask R-CNN(anchor based)</li>
<li>RepPoints(anchor free)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="bag-of-freebies"><a class="markdownIt-Anchor" href="#bag-of-freebies"></a> Bag-of-freebies</h2>
<p>  通常，一个常规的物体检测器是离线训练的。因此研究者经常利用这一优势，使用更好的训练方法，在不增加推理成本的情况下获得更好的准确率。我们将这种只改变了训练策略或者只增加了训练成本的方法称为”Bag of freebies“。物体检测常用的且符合以上定义的方法是数据增强。数据增强的目的是增加输入图像的多样性，从而使得模型在不同的环境下有着高鲁棒性。比如，photometric distoitions和geometric distortions是用来数据增强方法的两个常用的手段。在处理photometric distortion中，我们会调整图像的亮度，对比度，色调，饱和度以及噪声。对于geometric distortion，我们会随机增加尺度变化，裁剪，翻转以及旋转。<br />
  上述提到的数据增强都是像素级别的调整，他保留了调整区域的所有原始像素的信息。一些学者在数据增强方面专注于模拟物体被遮挡。他们在图像分类和物体检测上有好的效果。比如，random erase和CutOut可以随机选择矩形区域融合或者零填充。对于hide-and-seek和grid mask，它们随机或者均匀的选择多个矩形区域，并以零替换。如果将相似的概念用来特征图中，则有DropOut, DropConnect和DropBlock方法。此外，一些研究者还提出使用多张图片进行数据增强。比如，MixUp使用两张图片相乘并以不同的系数进行重叠，并调整标签。对于CutMix，它将裁剪的图片覆盖到其他图片的矩形区域，然后根据混合区域的大小调整标签。除了以上方法，style transfer GAN也可以用于数据增强。这种用法可以有效地减少CNN所学习的纹理偏差。<br />
  与上述提到的各种方法不同，其他一些bag of freebies用于解决数据集中的语义分布可能存在偏差的问题，处理语义分布存在偏差问题，一个非常重要的问题就是不同类别直接的数据不平衡，这个问题在two-stage物体检测器中通过困难负样本挖掘或者在线困难样本挖掘解决。但是样本挖掘不适合于one-stage检测器，因为这类检测器属于dense prediction architecture结构。因此Lin等人提出focal loss来解决不同类别数据不均衡问题，另外一个非常重要的问题就是one-hot编码很难描述不同类别之间的关联度关系。label smoothing提出在训练时将硬标签转换为软标签，使得模型更具有鲁棒性。为了获得更好的软标签，Islam等人提出了知识蒸馏的概念来设计标签细化网络。<br />
  最后一个bag of freebies是设计边界框回归的目标函数。传统物体检测器通常使用MSE对边框的中心坐标、高、宽<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>x</mi><mrow><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{x_{center},y_{center},w,h\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mclose">}</span></span></span></span>或者左上角和右下角两个坐标点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>x</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">_</mi><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">_</mi><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">_</mi><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{x_{top\_left},y_{top\_left},x_{bottom\_left},y_{bottom\_right}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.117em;vertical-align:-0.367em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">p</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">p</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">m</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">m</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>。使用anchor-based方法，其调整为预测偏差offset<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>x</mi><mrow><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>h</mi><mrow><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{x_{center\_offset},y_{center\_offset},w_{offset},h_{offset}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.117em;vertical-align:-0.367em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>x</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">_</mi><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">_</mi><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{x_{top\_left\_offset},y_{top\_right\_offset},x_{bottom\_left\_offset},y_{bottom\_right\_offset}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.117em;vertical-align:-0.367em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">p</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">t</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">p</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">m</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">t</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">m</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>但是，直接估计bbox的每个点坐标值是将这些点作为独立的变量，没有考虑将目标物体当成一个整体进行预测。为了更好的解决这个问题，一些学者提出了IoU函数，将BBox区域和ground true的BBox区域作为整体。IoU loss需要计算BBox四个坐标点以及ground truth的IoU。因为IoU具有尺度不变性，它可以解决传统算法比如计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{x,y,w,h\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mclose">}</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">l_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">l_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的损失函数时存在的问题，这个损失函数会随着尺度的变化而发生变化。一些学者继续提升IoU loss函数，比如，GIoU loss包含了目标物体的形状和坐标，他们提出找到同时包含预测区域BBox和ground true BBox的最小区域，然后用这个BBox替代IoU loss原来的分母。DIoU loss额外考虑了目标物体的中心距离，CIoU另一方面同时将覆盖区域，中心点距离和纵横比考虑在内。CIoU在BBox回归问题上可以获得最好的收敛速度和准确率。DIoU loss额外考虑了物体中心距离。另一方面，CIoU同时将覆盖区域，中心点距离和纵横比考虑在内。CIoU在BBox回归问题上可以获得最好的收敛速度和准确率。</p>
<h2 id="bag-of-specials"><a class="markdownIt-Anchor" href="#bag-of-specials"></a> Bag-of-specials</h2>
<p>  对于那些稍微增加了推理成本，但是可以极大地提升目标检测的准确率的插件模块和后处理方法，我们称之为“bag of specials”。一般来说，这些插件模块用来提高一个模型中特定的属性，比如增加感受野，引入注意力机制或者提高特征整合的能力等，后处理方式是用来抑制模型预测结果的一种方法。<br />
常用的提升感受野的方法是SPP，ASPP和RFB。SPP模型来源于空间金字塔匹配(SPM)，SPM原本的方法是将特征图划分成d×d个相等的块，其中d可以是{1,2,3,…}，因此可以形成空间金字塔，然后提取bag-of-word的特征。SPP将SPM应用在CNN中，然后使用max-pooling代替bag-of-word运算。因为SPP输出的是一维特征向量，所以其不能运用在全卷积网络(FCN)中。因此，在YOLOv3中，Redmon和Farhadi改进了SPP模块，将max-pooling的输出和内核为k×k连接，k为{1,5,9,13}，strike为1。<br />
  ASPP模块和改进SPP模块的区别主要在于原始的k×k的内核大小，max-pooling的最大步长为1到3×3内核，膨胀比为k，拓展卷积运算步长为1。RFB模块使用一些×k的内核，膨胀比为k，步长为1的拓展卷积，它比ASPP获得了更全面的空间覆盖率。（这段一直没懂）<br />
物体检测上常用的attention模型主要分成channel-wise attention模块和point-wise attention模块，两个模块的代表性模型是Squeeze-and-Excitation(SE)和Spatial Attention Module(SAM)。SE模块虽然在ImageNet上仅仅增加了2%的计算量和1%的top-1准确率，但是在GPU上提高了10%的推理时间，因此SE更适合在移动设备运行。而对于SAM，在ImageNet分类任务中，它只需要0.1%的额外计算就能提升ResNet50-SE 0.5%的top-1的准确率，它在GPU上没有有效地影响推理速度。<br />
  关于特征融合，早期实验使用skip connection或者hyper-column来将低层物理特征和高层语义特征融合。因为多尺度预测方法比如FPN变的流行，因此许多将不同将特征金字塔融合的轻量级模型被提出。这些模型包含了SFAM，ASFF和BiFPN。SFAM的主要思想是在多尺度连接特征图上使用channel-wise级别的调整。对于ASFF，它使用softmax作为point-wise级别的调整，然后将不同尺度的特征图加在一起。在BiFPN中，提出使用多输入权重残差连接去执行scale-wise级别的调整，然后将不同尺度的特征图加在一起。<br />
  在最近的一些研究中，一些研究者将注意力放在了寻找优秀的激活函数。一个好的激活函数可以将梯度更有效的进行传播，同时不会增加额外的计算量。在2010年，Nair和Hinton提出了ReLU来解决梯度消失问题，这个问题在传统的tanh和sigmod激活函数中经常会遇到。随后，LReLu,PReLU,ReLU6,Scaled Exponential Linear Unit(SELU),Swish,hard-Swish和Mish等激活函数被提出，他们用于解决梯度消失问题。LReLU和PReLU主要用来解决当输出小于零的时候，ReLU的梯度为零的问题。ReLU6和hard-Swish主要为量化网络而设计。对于神经网络的自归一化，提出SELU激活函数去实现这个目的。需要注意的是Swish和Mish都是连续可导的激活函数。<br />
  基于深度学习的物体检测中常用的后处理方法是NMS，可以过滤掉效果不好的BBox，保留效果较好的BBox。NMS尝试改进的方法和优化目标方程的方法类似。NMS提出的最初的方法并没有将上下文信息考虑在内，因此Girshick等人在R-CNN中添加了分类置信度作为参考，然后根据置信度得分的顺序，由高到低执行greedy NMS，DIoU NMS的开发者将重心坐标的距离信息添加到Bbox的筛选处理中了。值得一提的是，上面提到的后处理方法中都不直接引用捕获的图像特征，后续的anchor-free方法开发中不再需要后处理。</p>
<h1 id="yolov4-网络结构-bof-bos选择"><a class="markdownIt-Anchor" href="#yolov4-网络结构-bof-bos选择"></a> YOLOv4 网络结构、BoF、BoS选择</h1>
<p>  经过大量的实验验证，作者使用CSPDarknet53作为骨架，利用SPP提高其感受野，PANet作为Neck，YOLOv3作为head。对于训练激活函数，因为PReLU和SELU难以训练，并且ReLU6是专门为量化网络设计的，我们因此不考虑这这三个激活函数。正则化方面，选择了DropBlock，因为它比其他正则化方法效果好。因为只关注在一块GPU上训练，因此不考虑CGBN、SyncBN。<br />
  此外，作者还提出了以下额外的改进</p>
<ul>
<li>新的数据增强方法：Mosaic和Self-Adversarial Training(SAT)</li>
<li>使用遗传算法选择最优超参数</li>
<li>改进现有算法，使其更适合YOLOv4高效训练和检测：改进了SAM、PAN和Cross mini-Batch Normalization(CmBN)</li>
</ul>
<h2 id="mosaic"><a class="markdownIt-Anchor" href="#mosaic"></a> Mosaic</h2>
<p>  Mosaic是一种新型的数据增广的算法，它混合了四张训练图片。因此有四种不同的上下文进行融合，然而CutMix仅仅将两张图片进行融合。此外，batch normalization在每个网络层中计算四张不同图片的激活统计。这极大减少了一个大的mini-batch尺寸的需求。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.0/mosaic.png" alt="mosaic" /></p>
<h2 id="sat"><a class="markdownIt-Anchor" href="#sat"></a> SAT</h2>
<p>  自适应对抗训练(SAT)也表示了一个新的数据增广的技巧，它在前后两阶段上进行操作。在第一阶段，神经网络代替原始的图片而非网络的权重。用这种方式，神经网络自己进行对抗训练，代替原始的图片去创建图片中此处没有期望物体的描述。在第二阶段，神经网络使用常规的方法进行训练，在修改之后的图片上进检测物体。</p>
<h2 id="cmbn"><a class="markdownIt-Anchor" href="#cmbn"></a> CmBN</h2>
<p>  CmBN（Cross mini-Batch Normalization）代表CBN改进的版本。它只收集了一个批次中的mini-batches之间的统计数据。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.0/CmBN.png" alt="CmBN" /></p>
<h2 id="sampan"><a class="markdownIt-Anchor" href="#sampan"></a> SAM,PAN</h2>
<p>  我们将SAM的spatial-wise注意力变成了point-wise注意力机制，然后将PAN中的shortcut连接变成了concatenation连接，正如下图所表示的那样。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.0/SAM.png" alt="SAM" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.3.0/PAN.png" alt="PAN" /></p>
<h1 id="yolov4细节"><a class="markdownIt-Anchor" href="#yolov4细节"></a> YOLOv4细节</h1>
<table>
<thead>
<tr>
<th style="text-align:center">网络结构</th>
<th style="text-align:center">采用模块</th>
<th style="text-align:center">BoF</th>
<th style="text-align:center">BoS</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Backbone</td>
<td style="text-align:center">CSPDarknet53</td>
<td style="text-align:center">CutMix,Mosaic data augmentation,DropBlock regularization,Class label smoothing</td>
<td style="text-align:center">Mish activation,Cross-stage partial connections(CSP),Multi-input weight residual connections(MiWRC)</td>
</tr>
<tr>
<td style="text-align:center">Neck</td>
<td style="text-align:center">SPP,PAN</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">Head</td>
<td style="text-align:center">YOLOv3</td>
<td style="text-align:center">CIoU-loss,CmBN,DropBlock regulariztion,Mosaic data augementation,Self-Adversarial Training,Eliminate grid sensitivity,Using multiple anchors for a single ground truth, Cosine annealing scheduler, Optimal hyperparameters, Random training shapes</td>
<td style="text-align:center">Mish activation, SPP-block, SAM-block, PAN path-aggregation block, DIoU-NMS</td>
</tr>
</tbody>
</table>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>  YOLOv4这一论文，先是讲述了一些现代目标检测算法的发展，讲述了backbone、Neck、Head的组成和作用，讲述了目标检测器的组成部分，见<a href="#%E6%99%AE%E9%80%9A%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E5%99%A8%E7%9A%84%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86">普通目标检测器的组成部分</a>。<br />
  随后讲解了Bag of freebies，其基本只改变训练策略。而Bag of specials基本为模块和后处理方法，提升了检测准确度。BoF,BoS的总结可以见下。这里部分可以看作是目标检测领域的发展了，也可以了解到各种方法的优缺点和原理。在之后的内容中作者对各种结构进行了实验并挑选网络结构，还自行提出了一定的创新，如Mosaic数据增强,自适应对抗训练(SAT)，利用遗传算法选择最优超参数，改进了CmBN、SAM和PAN。最终的YOLOv4使用的内容可以见<a href="#YOLOv4%E7%BB%86%E8%8A%82">YOLOv4细节</a>。<br />
  YOLOv4这篇内容讲了许多技术内容，如果能弄懂这些名词的话也相当于是弄懂了物体检测的入门知识了。<br />
  最后放一张YOLOv4结构图，出处<a href="https://www.pianshen.com/article/10371541073/">Windows版YOLOv4目标检测：原理与源码解析</a><br />
<img src="/images/YOLOv4-Note/YOLOv4.jpg" alt="structure" /></p>
<h2 id="bag-of-freebies-2"><a class="markdownIt-Anchor" href="#bag-of-freebies-2"></a> bag of freebies</h2>
<ul>
<li><strong>bag of freebies</strong>
<ul>
<li><strong>数据增强</strong>
<ul>
<li><strong>像素级别</strong>
<ul>
<li>photometric distortions</li>
<li>geometric distortions</li>
</ul>
</li>
<li><strong>物体遮挡</strong>
<ul>
<li>random erase</li>
<li>CutOut</li>
<li>hide and seek</li>
<li>grid mask</li>
<li>DropOut</li>
<li>DropConnect</li>
<li>DropBlock</li>
</ul>
</li>
<li><strong>图片融合</strong>
<ul>
<li>MixUP</li>
<li>CutMix</li>
<li>style transfer GAN</li>
</ul>
</li>
</ul>
</li>
<li><strong>样本不均衡</strong>
<ul>
<li><strong>two-stage</strong>
<ul>
<li>hard negative example mining</li>
<li>online hard example mining</li>
</ul>
</li>
<li><strong>one-stage</strong>
<ul>
<li>focal loss</li>
</ul>
</li>
</ul>
</li>
<li><strong>类别关联度难以描述</strong>
<ul>
<li>label smoothing</li>
</ul>
</li>
<li><strong>边界框回归目标函数</strong>
<ul>
<li>MSE</li>
<li>GIoU</li>
<li>DIoU</li>
<li>CIoU</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="bag-of-specials-2"><a class="markdownIt-Anchor" href="#bag-of-specials-2"></a> Bag of specials</h2>
<ul>
<li><strong>bag of specials</strong>
<ul>
<li><strong>plugins modules</strong>
<ul>
<li><strong>提高感受野</strong>
<ul>
<li>SPP</li>
<li>ASPP</li>
<li>RFB</li>
</ul>
</li>
<li><strong>attention模块</strong>
<ul>
<li><strong>channel-wise</strong>
<ul>
<li>Squeeze-and-Excitation(SE)</li>
</ul>
</li>
<li><strong>point-wise</strong>
<ul>
<li>Spatial Attention Module(SAM)</li>
</ul>
</li>
</ul>
</li>
<li><strong>特征融合</strong>
<ul>
<li>skip connection</li>
<li>hyper-column</li>
<li>FPN</li>
<li>SFAM</li>
<li>ASFF</li>
<li>BiFPN</li>
</ul>
</li>
<li><strong>激活函数</strong>
<ul>
<li>tanh</li>
<li>sigmod</li>
<li>ReLU</li>
<li>LReLU</li>
<li>PReLU</li>
<li>ReLU6</li>
<li>SELU</li>
<li>Swish</li>
<li>hard-Swish</li>
<li>Mish</li>
</ul>
</li>
</ul>
</li>
<li><strong>后处理方法</strong>
<ul>
<li>NMS</li>
<li>greedy NMS</li>
<li>DIoU NMS</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="吐槽"><a class="markdownIt-Anchor" href="#吐槽"></a> 吐槽</h2>
<p>  后面的实验结果就不再翻译了。先吐糟一下自己，本来是想写写概要的结果变成了简要翻译，而且也没有简要到哪里去，尴尬。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p><a href="https://arxiv.org/abs/2004.10934">[1]Bochkovskiy A, Wang C Y, Liao H Y M. Yolov4: Optimal speed and accuracy of object detection[J]. arXiv preprint arXiv:2004.10934, 2020.</a><br />
<a href="https://blog.csdn.net/qq_38316300/article/details/105759305">YOLOv4原文翻译 - v4它终于来了！</a><br />
<a href="https://www.pianshen.com/article/10371541073/">Windows版YOLOv4目标检测：原理与源码解析</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业设计（三）BDD100K数据集转yolo格式</title>
    <url>/2021/04/09/bdd100k2yolo/</url>
    <content><![CDATA[<p>将bdd100k数据集转换为yolo格式<br />
封面图《見上げてごらん、夜空の星》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>因为原先从COCO中提取的数据集的检测效果一直不好，在观察了几个数据集后发现，COCO数据集的图片中我需要的目标都比较小，且我需要的一些类样本不均衡，比如truck类就特别少，尽管YOLOv4的论文中说可以使用focal loss来解决样本不均衡，但是最简单的还是换一个数据集，因此打算新做一个数据集。</p>
<h1 id="bdd100k数据集"><a class="markdownIt-Anchor" href="#bdd100k数据集"></a> BDD100K数据集</h1>
<p>官网：<a href="https://bdd-data.berkeley.edu/">https://bdd-data.berkeley.edu/</a><br />
论文：<a href="https://arxiv.org/abs/1805.04687">https://arxiv.org/abs/1805.04687</a><br />
github：<a href="https://github.com/bdd100k/bdd100k">https://github.com/bdd100k/bdd100k</a><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/bdd100k.gif" alt="bdd100k" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/compare.jpg" alt="compare" /></p>
<p>BDD100K是伯克利大小AI实验室发布的一个自动驾驶领域的数据集。具体内容可以看论文，在此我只关心我需要的内容，各个类别的数据量。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/categories.png" alt="类别数量" /><br />
BDD100K中车辆行人的数量都很多，truck有4296个，Bus有16505个。而COCO中我想要2000个truck最后只返回了我1400左右，因此在COCO提取训练集训练测试结果的时候发现truck和bus分不清，且truck的AP50很低。</p>
<h1 id="数据集转换"><a class="markdownIt-Anchor" href="#数据集转换"></a> 数据集转换</h1>
<p>由于BDD100K的数据集格式和darknet需要的yolo格式不一样，因此需要将label进行转换，顺便对label进行一下提取，去掉几个我不需要的类。<br />
BDD100K的标签文件格式遵循<a href="https://doc.scalabel.ai/format.html">Scalabel Format</a>，此外还有一些BDD100K自己的格式，不过与我的需求没有关系。因此先来看一下scalabel格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- name: string</span><br><span class="line">- url: string</span><br><span class="line">- videoName: string (optional)</span><br><span class="line">- attributes: a dictionary of frame attributes</span><br><span class="line">- intrinsics</span><br><span class="line">    - focal: [x, y]</span><br><span class="line">    - center: [x, y]</span><br><span class="line">    - nearClip:</span><br><span class="line">- extrinsics</span><br><span class="line">    - location</span><br><span class="line">    - rotation</span><br><span class="line">- timestamp: int64 (epoch time ms)</span><br><span class="line">- frameIndex: int (optional, frame index in this video)</span><br><span class="line">- labels [ ]:</span><br><span class="line">    - id: string</span><br><span class="line">    - category: string (classification)</span><br><span class="line">    - manualShape: boolean</span><br><span class="line">    - manualAttributes: boolean</span><br><span class="line">    - score: float</span><br><span class="line">    - attributes: a dictionary of label attributes</span><br><span class="line">    - box2d:</span><br><span class="line">        - x1: float</span><br><span class="line">        - y1: float</span><br><span class="line">        - x2: float</span><br><span class="line">        - y2: float</span><br><span class="line">    - box3d:</span><br><span class="line">        - alpha:</span><br><span class="line">        - orientation:</span><br><span class="line">        - location: ()</span><br><span class="line">        - dimension: (3D point, height, width, length)</span><br><span class="line">    - poly2d: an array of objects, with the structure</span><br><span class="line">        - vertices: [][]float (list of 2-tuples [x, y])</span><br><span class="line">        - types: string</span><br><span class="line">        - closed: boolean</span><br></pre></td></tr></table></figure>
<p>再看一看实际文件，还是符合的<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/bdd100k_labels.png" alt="compare" /></p>
<h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1>
<p>参考了github的一个现有<a href="https://github.com/km23630/bdd100k_to_yolo_converter">转换脚本</a>进行了一定的修改，添加了命令行支持和类别提取。代码如下。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">TRAIN_LABEL_NAME = <span class="string">&#x27;bdd100k_labels_images_train.json&#x27;</span></span><br><span class="line">VAL_LABEL_NAME = <span class="string">&#x27;bdd100k_labels_images_val.json&#x27;</span></span><br><span class="line"></span><br><span class="line">classes = [</span><br><span class="line">    <span class="string">&quot;person&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bike&quot;</span>,</span><br><span class="line">    <span class="string">&quot;car&quot;</span>,</span><br><span class="line">    <span class="string">&quot;motor&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bus&quot;</span>,</span><br><span class="line">    <span class="string">&quot;truck&quot;</span>,</span><br><span class="line">    <span class="string">&quot;rider&quot;</span>,</span><br><span class="line">    <span class="string">&quot;train&quot;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">counter = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> classes:</span><br><span class="line">    counter[c] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_args</span>():</span><br><span class="line">    <span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-i&#x27;</span>, <span class="string">&#x27;--images&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;images path&quot;</span>,</span><br><span class="line">                        <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="string">&#x27;./images/100k&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-l&#x27;</span>, <span class="string">&#x27;--labels&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;labels path&quot;</span>,</span><br><span class="line">                        <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="string">&quot;./labels&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--type&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;type of dataset&quot;</span>,</span><br><span class="line">                        choices=[<span class="string">&#x27;train&#x27;</span>, <span class="string">&#x27;val&#x27;</span>], default=<span class="string">&#x27;train&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> parser.parse_args()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convertBdd100k2yolo</span>(<span class="params">imageFileName, label</span>):</span><br><span class="line">    img = cv2.imread(imageFileName)</span><br><span class="line">    width, height = img.shape[<span class="number">1</span>], img.shape[<span class="number">0</span>]</span><br><span class="line">    dw = <span class="number">1.0</span>/width</span><br><span class="line">    dh = <span class="number">1.0</span>/height</span><br><span class="line"></span><br><span class="line">    catName = label[<span class="string">&#x27;category&#x27;</span>]</span><br><span class="line">    classIndex = classes.index(catName)</span><br><span class="line">    roi = label[<span class="string">&#x27;box2d&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    w = roi[<span class="string">&#x27;x2&#x27;</span>]-roi[<span class="string">&#x27;x1&#x27;</span>]</span><br><span class="line">    h = roi[<span class="string">&#x27;y2&#x27;</span>]-roi[<span class="string">&#x27;y1&#x27;</span>]</span><br><span class="line">    x_center = roi[<span class="string">&#x27;x1&#x27;</span>] + w/<span class="number">2</span></span><br><span class="line">    y_center = roi[<span class="string">&#x27;y1&#x27;</span>] + h/<span class="number">2</span></span><br><span class="line"></span><br><span class="line">    x_center, y_center, w, h = x_center*dw, y_center*dh, w*dw, h*dh</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(classIndex, x_center, y_center, w, h)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    args = get_args()</span><br><span class="line">    <span class="comment"># 转为文件位置</span></span><br><span class="line">    <span class="keyword">if</span> args.<span class="built_in">type</span> == <span class="string">&#x27;train&#x27;</span>:</span><br><span class="line">        imageRootPath = os.path.join(args.images, <span class="string">&#x27;train&#x27;</span>)</span><br><span class="line">        labelFilePath = os.path.join(args.labels, TRAIN_LABEL_NAME)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        imageRootPath = os.path.join(args.images, <span class="string">&#x27;val&#x27;</span>)</span><br><span class="line">        labelFilePath = os.path.join(args.labels, VAL_LABEL_NAME)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(labelFilePath) <span class="keyword">as</span> file:</span><br><span class="line">        lines = json.load(file)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;loaded labels&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> tqdm(lines):</span><br><span class="line">        <span class="comment"># 图像名</span></span><br><span class="line">        name = line[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">        labels = line[<span class="string">&#x27;labels&#x27;</span>]</span><br><span class="line">        imagePath = os.path.join(imageRootPath, name)</span><br><span class="line">        labelPath = imagePath.replace(<span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;txt&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(os.path.realpath(imagePath)):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(labelPath, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            <span class="comment"># 遍历label</span></span><br><span class="line">            <span class="keyword">for</span> label <span class="keyword">in</span> labels:</span><br><span class="line">                cat = label[<span class="string">&#x27;category&#x27;</span>]</span><br><span class="line">                <span class="keyword">if</span> cat <span class="keyword">in</span> classes:</span><br><span class="line">                    counter[cat] += <span class="number">1</span></span><br><span class="line">                    file.write(convertBdd100k2yolo(imagePath,label))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(counter)</span><br></pre></td></tr></table></figure>
<p>效果如下，训练集因为中途缩放了一下vscode窗口，所以进度条就这样了。除去一个20%量的test，类别数量还是和论文里面的差不多的。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/bdd100k_train_convert.png" alt="train" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/bdd100k_val_convert.png" alt="val" /></p>
<h1 id="删除无标签图片"><a class="markdownIt-Anchor" href="#删除无标签图片"></a> 删除无标签图片</h1>
<p>经过训练发现存在一些无标签图片，因此需要进行删除，代码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_args</span>():</span><br><span class="line">    <span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-i&#x27;</span>, <span class="string">&#x27;--images&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;images path&quot;</span>,</span><br><span class="line">                        <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="string">&#x27;./images/100k&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--type&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;type of dataset&quot;</span>,</span><br><span class="line">                        choices=[<span class="string">&#x27;train&#x27;</span>, <span class="string">&#x27;val&#x27;</span>], default=<span class="string">&#x27;train&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> parser.parse_args()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getFileList</span>(<span class="params"><span class="built_in">dir</span>, extract</span>):</span><br><span class="line">    fileList = []</span><br><span class="line">    filenames = os.listdir(<span class="built_in">dir</span>)</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">        ext = os.path.splitext(filename)[-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> ext == extract:</span><br><span class="line">            fileList.append(filename)</span><br><span class="line">    <span class="keyword">return</span> fileList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    args = get_args()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> args.<span class="built_in">type</span> == <span class="string">&#x27;train&#x27;</span>:</span><br><span class="line">        imageRootPath = os.path.join(args.images, <span class="string">&#x27;train&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        imageRootPath = os.path.join(args.images, <span class="string">&#x27;val&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    imageName = getFileList(imageRootPath, <span class="string">&#x27;.jpg&#x27;</span>)</span><br><span class="line">    labelName = getFileList(imageRootPath, <span class="string">&#x27;.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    labelName = [label.replace(<span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;.jpg&quot;</span>) <span class="keyword">for</span> label <span class="keyword">in</span> labelName]</span><br><span class="line">    lackImages = <span class="built_in">set</span>(imageName) - <span class="built_in">set</span>(labelName)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> lackImages:</span><br><span class="line">        os.remove(os.path.join(imageRootPath,file))</span><br><span class="line">        <span class="comment">#print(os.path.join(imageRootPath,file))</span></span><br></pre></td></tr></table></figure>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>标签转换完成，接下来生成train.txt和val.txt就和之前的coco2yolo一样了。随后的效果就得训练后才能知道了。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p>[1]Yu F, Chen H, Wang X, et al. Bdd100k: A diverse driving dataset for heterogeneous multitask learning[C]//Proceedings of the IEEE/CVF conference on computer vision and pattern recognition. 2020: 2636-2645.<br />
[2]<a href="https://blog.csdn.net/jocelyn870/article/details/81207448">BDD100K：一个大规模、多样化的驾驶视频数据集</a><br />
[3]<a href="https://github.com/km23630/bdd100k_to_yolo_converter">bdd100k_to_yolo_converter</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>毕业设计</tag>
        <tag>yolo</tag>
      </tags>
  </entry>
  <entry>
    <title>win10锁屏页面获取</title>
    <url>/2021/05/03/win10-lock/</url>
    <content><![CDATA[<p>因为觉得win10锁屏页面比较好看，有时候能够根据日期变换，因此写个脚本获取锁屏页面<br />
封面《冬天的谎言 -Snow World End-》</p>
<span id="more"></span>
<h1 id="win10原生锁屏"><a class="markdownIt-Anchor" href="#win10原生锁屏"></a> win10原生锁屏</h1>
<p>根据查阅资料，win10的锁屏图片保存在<code>C:\Users\你的用户名\AppData\Local\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets</code>，根据win10社区所说<code>cw5n1h2txyewy</code>是随机生成的，不过我发现的都是这个，也许其他版本的win10不太一样吧。这里面的文件需要添加<code>.jpg</code>后缀才是我们需要的图片。</p>
<h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="comment"># win10 screen lock version</span></span><br><span class="line"></span><br><span class="line">src = os.path.expanduser(</span><br><span class="line">    <span class="string">&quot;~\AppData\Local\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets&quot;</span>)</span><br><span class="line"></span><br><span class="line">dst = os.path.expanduser(<span class="string">&quot;~\Pictures\Saved Pictures\lock&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-d&#x27;</span>, <span class="string">&#x27;--dst&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;dst path&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=dst)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    dst = args.dst</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dst):</span><br><span class="line">        os.mkdir(dst)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># remove duplicate filename</span></span><br><span class="line">    srcFilenames = <span class="built_in">set</span>(os.listdir(src))</span><br><span class="line">    dstFilenames = os.listdir(dst)</span><br><span class="line">    dstFilenames = [filename.replace(<span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;&#x27;</span>) <span class="keyword">for</span> filename <span class="keyword">in</span> dstFilenames]</span><br><span class="line">    dstFilenames = <span class="built_in">set</span>(dstFilenames)</span><br><span class="line">    lackFilenames = srcFilenames - dstFilenames</span><br><span class="line"></span><br><span class="line">    <span class="comment"># copy file</span></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> lackFilenames:</span><br><span class="line">        srcFile = os.path.join(src, filename)</span><br><span class="line">        dstFile = os.path.join(dst, filename)+<span class="string">&#x27;.jpg&#x27;</span></span><br><span class="line">        shutil.copyfile(srcFile, dstFile)</span><br></pre></td></tr></table></figure>
<h1 id="lenovo锁屏"><a class="markdownIt-Anchor" href="#lenovo锁屏"></a> Lenovo锁屏</h1>
<p>联想电脑助手会接管win10的原生锁屏，通过everything观察文件变化可以查到联想锁屏的位置在<code>C:\ProgramData\Lenovo\devicecenter\LockScreen\cache</code>，且以jpg格式存好了，可惜的是大部分图片原本就有联想的二维码或者水印。</p>
<h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="comment"># lenovo screen lock version</span></span><br><span class="line"></span><br><span class="line">src = <span class="string">&quot;C:\ProgramData\Lenovo\devicecenter\LockScreen\cache&quot;</span></span><br><span class="line"></span><br><span class="line">dst = os.path.expanduser(<span class="string">&quot;~\Pictures\Saved Pictures\lock&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_filelist</span>(<span class="params"><span class="built_in">dir</span>, extract</span>):</span><br><span class="line">    filelist = []</span><br><span class="line">    filenames = os.listdir(<span class="built_in">dir</span>)</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">        ext = os.path.splitext(filename)[-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> ext == extract:</span><br><span class="line">            filelist.append(filename)</span><br><span class="line">    <span class="keyword">return</span> filelist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-d&#x27;</span>, <span class="string">&#x27;--dst&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;dst path&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=dst)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-s&#x27;</span>, <span class="string">&#x27;--src&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;src path&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=src)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    dst = args.dst</span><br><span class="line">    src = args.src</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(src):</span><br><span class="line">        exit(<span class="string">&quot;src path not found&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dst):</span><br><span class="line">        os.mkdir(dst)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ignore zip</span></span><br><span class="line">    srcFilenames = <span class="built_in">set</span>(get_filelist(src, <span class="string">&#x27;.jpg&#x27;</span>))</span><br><span class="line">    dstFilenames = <span class="built_in">set</span>(os.listdir(dst))</span><br><span class="line">    <span class="comment"># remove duplicate filename</span></span><br><span class="line">    lackFilenames = srcFilenames - dstFilenames</span><br><span class="line"></span><br><span class="line">    <span class="comment"># copy file</span></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> lackFilenames:</span><br><span class="line">        srcFile = os.path.join(src, filename)</span><br><span class="line">        dstFile = os.path.join(dst, filename)</span><br><span class="line">        shutil.copyfile(srcFile, dstFile)</span><br></pre></td></tr></table></figure>
<h1 id="开机自启动"><a class="markdownIt-Anchor" href="#开机自启动"></a> 开机自启动</h1>
<p>开机自启动只需要将脚本放在<code>C:\Users\你的用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>文件夹，经过个人电脑测试，powershell可以直接运行python脚本，如果不行，可以写bat脚本进行处理。</p>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>目前现在暂时使用lenovo的程序，后面考虑爬取图片更换。目前代码仓库在<a href="https://github.com/qxdn/win10-lock-fetch">repo</a></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>MobileNets论文笔记</title>
    <url>/2021/05/20/mobilenets-note/</url>
    <content><![CDATA[<p>因为听说了MobileNets中的深度可分离卷积的大名，因此拜读了一下论文<br />
封面《公主连结Re:dive》，作者<a href="https://www.pixiv.net/users/6657532">QuAn_</a></p>
<span id="more"></span>
<h1 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h1>
<p>  在许多嵌入式设备上，受限于有限的计算资源，往往无法跑一些效果较好的大模型。在MobileNet以前，许多论文都是集中于减少模型体积，而不是速度。<br />
  MobileNets是基于深度可分离卷积(depthwise separable convolutions)，这在Inception Model、Falattened networks中都有提到。降低模型体积的方法有剪枝、压缩、哈希、霍夫曼编码和蒸馏等等。</p>
<h1 id="创新点"><a class="markdownIt-Anchor" href="#创新点"></a> 创新点</h1>
<p>  MobileNet提出了一种深度可分离卷积结构，将标准卷积分为了深度卷积(depthwise convolution)和逐点卷积(pointwise convolution)两步。传统标准卷积往往在进行计算的时候会同时改变通道数和特征图的大小。而深度可分离卷积的第一步深度卷积则是不改变输出的通道数，只改变特征图的大小，第二步逐点卷积则是以1*1大小的卷积核对特征图做处理，只改变输出的通道数不改变特征图的大小。</p>
<h1 id="计算量对比"><a class="markdownIt-Anchor" href="#计算量对比"></a> 计算量对比</h1>
<p>  假定卷积的输入为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">D_F*D_F*M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>的特征图，输出为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">D_F*D_F*N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>的特征图。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">D_F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为特征图的长宽，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>为特征图的通道数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>为输出的通道数。<br />
  传统卷积需要一个大小为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>∗</mo><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">M*D_K*D_K*N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>的卷积核，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">D_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为其内核大小，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>为输入通道数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>为输出通道数。则其计算量如下。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><mi>M</mi><mo>∗</mo><mi>N</mi><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">D_K*D_K*M*N*D_F*D_F
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>  对于深度可分离卷积来说需要一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>∗</mo><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">M*D_K*D_K*1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的深度卷积核核一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>∗</mo><mn>1</mn><mo>∗</mo><mn>1</mn><mo>∗</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">M*1*1*N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>的逐点卷积核。其计算量如下，式子左边为深度卷积的计算量，右边为逐点卷积的计算量。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><mi>M</mi><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub><mo>+</mo><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><mi>M</mi><mo>∗</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">D_K*D_K*M*D_F*D_F+D_F*D_F*M*N
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></span></p>
<p>  经过对比可以得知其压缩量如下。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><mi>M</mi><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub><mo>+</mo><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><mi>M</mi><mo>∗</mo><mi>N</mi></mrow><mrow><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>K</mi></msub><mo>∗</mo><mi>M</mi><mo>∗</mo><mi>N</mi><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub><mo>∗</mo><msub><mi>D</mi><mi>F</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mo>+</mo><mfrac><mn>1</mn><msubsup><mi>D</mi><mi>K</mi><mn>2</mn></msubsup></mfrac></mrow><annotation encoding="application/x-tex">\frac{D_K*D_K*M*D_F*D_F+D_F*D_F*M*N}{D_K*D_K*M*N*D_F*D_F} = \frac{1}{N}+\frac{1}{D_K^2}  
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.3009709999999997em;vertical-align:-0.9795309999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.4064690000000004em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29353099999999993em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9795309999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>  由于神经网络中经常使用3*3的卷积核，因此可以减少大约8到9倍的计算量。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.8/DW_CONV.png" alt="标准卷积核深度可分离卷积结构对比" /></p>
<h1 id="实验结果"><a class="markdownIt-Anchor" href="#实验结果"></a> 实验结果</h1>
<p>这一部分有大量的对比实验详细可以看<a href="https://arxiv.org/abs/1704.04861">原文</a>。使用全卷积和深度可分离卷积的MobileNet对比如下图，准确率下降了1%，计算量下降到了原来的11%，参数量下降到了4.2%。<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.8/compare.png" alt="全卷积和深度可分离卷积MobileNet对比" /></p>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>  深度可分离卷积只是一种轻量级的网络结果，不是模型压缩方法。但是其降低计算量的效果的理论支持合理有据，虽然个人觉得准确率部分可能有点点夸张，需要后续自行实验验证一下。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p>[1]Howard A G, Zhu M, Chen B, et al. Mobilenets: Efficient convolutional neural networks for mobile vision applications[J]. arXiv preprint arXiv:1704.04861, 2017.</p>
]]></content>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>python装饰器</title>
    <url>/2021/05/26/python-decorator/</url>
    <content><![CDATA[<p>由于前几天了解到了python的装饰器，感觉有点点类似于AOP思想，因此记录一下学习笔记。<br />
封面《金色ラブリッチェ》</p>
<span id="more"></span>
<h1 id="闭包closure"><a class="markdownIt-Anchor" href="#闭包closure"></a> 闭包(closure)</h1>
<p>在讲python装饰器前，需要先介绍一下闭包</p>
<blockquote>
<p>In programming languages, a closure, also lexical closure or function closure, is a technique for implementing lexically scoped name binding in a language with first-class functions. Operationally, a closure is a record storing a function together with an environment. The environment is a mapping associating each free variable of the function (variables that are used locally, but defined in an enclosing scope) with the value or reference to which the name was bound when the closure was created.</p>
</blockquote>
<p>直接展示例子</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>():</span><br><span class="line">    x=<span class="number">1</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">g</span>(<span class="params">y</span>):</span><br><span class="line">        <span class="keyword">return</span> x + y</span><br><span class="line">    <span class="comment"># 返回闭包</span></span><br><span class="line">    <span class="keyword">return</span> g  </span><br><span class="line"></span><br><span class="line">closure = f()</span><br><span class="line"><span class="comment"># 输出3</span></span><br><span class="line"><span class="built_in">print</span>(closure(<span class="number">2</span>))</span><br></pre></td></tr></table></figure>
<p>本来在<code>f()</code>执行完后，x就会被内存回收，但是内部函数使用了x，因此x内存不会被回收。<br />
闭包的好处在于函数内的参数不会被内存回收，可以隐藏一些内容，同时避免了命名冲突。缺点在于内存无法自动回收，容易溢出。</p>
<h1 id="装饰器decorator"><a class="markdownIt-Anchor" href="#装饰器decorator"></a> 装饰器(decorator)</h1>
<p>先来看看一个简单的装饰器例子</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 外部</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">timer</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="comment">#内部</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wapper</span>(<span class="params">*args,**kwargs</span>):</span><br><span class="line">        start = time.time()</span><br><span class="line">        ans = func(*args,**kwargs)</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="built_in">print</span>(end - start)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    <span class="keyword">return</span> wapper</span><br><span class="line"><span class="meta">@timer</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">loop</span>(<span class="params">nums</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nums):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;over&quot;</span>)</span><br><span class="line">loop(<span class="number">55555555</span>)</span><br><span class="line"><span class="built_in">print</span>(loop.__name__)</span><br></pre></td></tr></table></figure>
<p>其输出结果如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">over</span><br><span class="line">1.4170827865600586</span><br><span class="line">wapper</span><br></pre></td></tr></table></figure>
<p>其调用方式拆分为如下几步</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">wapper = timer(loop)</span><br><span class="line">wapper(<span class="number">55555555</span>)</span><br></pre></td></tr></table></figure>
<p>可以看到我们使用了一个装饰器来增强了loop方法，为其添加了计算耗时的功能。外部函数传进去的是函数，内部函数传进的是参数。args和kwargs可以看<a href="https://stackoverflow.com/questions/36901/what-does-double-star-asterisk-and-star-asterisk-do-for-parameters">这</a>。简单来说就是args是以元组传参，kwargs是以键值对来传参。<br />
另外这种实现装饰器的方法很简单，但是也有缺陷，就是__name__属性发生了变化。这对一些使用__name__的库来说有缺陷。可以使用自带functools库来完成。</p>
<h2 id="修复__name__"><a class="markdownIt-Anchor" href="#修复__name__"></a> 修复__name__</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">timer</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">    @functools.wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wapper</span>(<span class="params">*args,**kwargs</span>):</span><br><span class="line">        start = time.time()</span><br><span class="line">        ans = func(*args,**kwargs)</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="built_in">print</span>(end - start)</span><br><span class="line">        <span class="keyword">return</span> ans  </span><br><span class="line">    <span class="keyword">return</span> wapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@timer</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">loop</span>(<span class="params">nums</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nums):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;over&quot;</span>)</span><br><span class="line">loop(<span class="number">55555555</span>)</span><br><span class="line"><span class="built_in">print</span>(loop.__name__)</span><br></pre></td></tr></table></figure>
<p>其输出结果如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">over</span><br><span class="line">1.1916275024414062</span><br><span class="line">loop</span><br></pre></td></tr></table></figure>
<p>functools.warps(func)将原函数的__module__,__name__,__doc__,__dict__等拷贝func中。<br />
可以看到使用functools后__name__信息变成了原函数的名字</p>
<h2 id="带参数的装饰器"><a class="markdownIt-Anchor" href="#带参数的装饰器"></a> 带参数的装饰器</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">timer_with_parm</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">timer</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">        @functools.wraps(<span class="params">func</span>)</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">wapper</span>(<span class="params">*args,**kwargs</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;this is:&quot;</span>+name)</span><br><span class="line">            start = time.time()</span><br><span class="line">            ans = func(*args,**kwargs)</span><br><span class="line">            end = time.time()</span><br><span class="line">            <span class="built_in">print</span>(end - start)</span><br><span class="line">            <span class="keyword">return</span> ans</span><br><span class="line">        <span class="keyword">return</span> wapper</span><br><span class="line">    <span class="keyword">return</span> timer</span><br><span class="line"><span class="meta">@timer_with_parm(<span class="params"><span class="string">&quot;timer1&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">loop</span>(<span class="params">nums</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nums):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;over&quot;</span>)</span><br><span class="line">loop(<span class="number">55555555</span>)</span><br><span class="line"><span class="built_in">print</span>(loop.__name__)</span><br></pre></td></tr></table></figure>
<p>其输出结果如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">this is:timer1</span><br><span class="line">over</span><br><span class="line">1.2349653244018555</span><br><span class="line">loop</span><br></pre></td></tr></table></figure>
<p>其调用方式拆分为如下几步</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">timer = timer_with_parm(<span class="string">&quot;timer1&quot;</span>)</span><br><span class="line">wapper = timer(loop)</span><br><span class="line">wapper(<span class="number">55555555</span>)</span><br></pre></td></tr></table></figure>
<p>可以看到decorator中的参数已经被传入了，且通过wapper函数输出了。</p>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>python的装饰器实现了AOP模型，简化了代码</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p>[1]<a href="https://en.wikipedia.org/wiki/Closure_(computer_programming)">闭包wiki</a><br />
[2]<a href="https://stackoverflow.com/questions/36901/what-does-double-star-asterisk-and-star-asterisk-do-for-parameters">args和kwargs</a><br />
[3]<a href="https://www.jianshu.com/p/ee82b941772a">理解Python装饰器(Decorator)</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx笔记</title>
    <url>/2021/06/10/nginx-starter/</url>
    <content><![CDATA[<p>早就听说了nginx的大名，同时最近的好多处问题都说最好用nginx反向代理解决，因此学习一下。<br />
封面图《見上げてごらん、夜空の星》</p>
<span id="more"></span>
<h1 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h1>
<p>nginx（engine X）是一个高性能web服务器，也是一个反向代理服务器。对于用户来说只知道反向代理服务器，而不知道其背后的服务器集群，因此可以解决跨域问题。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.6/Reverse_proxy.jpg" alt="Reverse proxy" /></p>
<h1 id="常用命令"><a class="markdownIt-Anchor" href="#常用命令"></a> 常用命令</h1>
<h2 id="启动"><a class="markdownIt-Anchor" href="#启动"></a> 启动</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#需要注意的是nginx对路径有要求，尽量使用绝对路径，Linux中注意要sudo</span></span><br><span class="line">[nginx place] -c [nginx conf]</span><br></pre></td></tr></table></figure>
<p>对于windows系统需要下面指令，另外windows系统需要</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">start nginx</span><br></pre></td></tr></table></figure>
<h2 id="查询进程"><a class="markdownIt-Anchor" href="#查询进程"></a> 查询进程</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#windows</span></span><br><span class="line">tasklist /fi <span class="string">&quot;imagename eq nginx.exe&quot;</span></span><br><span class="line"><span class="comment">#Linux</span></span><br><span class="line">ps -ax | grep nginx</span><br></pre></td></tr></table></figure>
<h2 id="其他命令"><a class="markdownIt-Anchor" href="#其他命令"></a> 其他命令</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#格式 nginx -s signal</span></span><br><span class="line">nginx -s stop <span class="comment">#快速关闭nginx</span></span><br><span class="line">nginx -s quit <span class="comment">#缓慢关闭nginx</span></span><br><span class="line">nginx -s reload <span class="comment">#重启nginx</span></span><br><span class="line">nginx -s reopen <span class="comment">#重新打开log</span></span><br><span class="line">nginx -t <span class="comment">#测试配置文件是否正确</span></span><br><span class="line">nginx -T <span class="comment">#与-t效果一致，但是输出到标准流</span></span><br><span class="line">nginx -v <span class="comment">#输出nginx版本</span></span><br><span class="line">nginx -V <span class="comment">#输出nginx版本、编译器和配置参数</span></span><br></pre></td></tr></table></figure>
<h1 id="配置文件解析"><a class="markdownIt-Anchor" href="#配置文件解析"></a> 配置文件解析</h1>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#运行用户</span></span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"><span class="comment">#启动进程数</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#全局error log</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#PID文件 nginx的pid</span></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#工作模式及连接数上限</span></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#http服务器</span></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="comment">#全局块</span></span><br><span class="line">    <span class="comment">#设定mime类型</span></span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置日志格式</span></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#sendfile 指令指定 Nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，</span></span><br><span class="line">    <span class="comment">#必须设为 on，如果用来进行下载等应用磁盘 IO 重负载应用，可设置为 off，以平衡磁盘与网络 I/O 处理速度，降低系统的 uptime.</span></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#连接超时时间</span></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip压缩</span></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#http服务器</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="comment">#监听端口</span></span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="comment">#定义使用localhost访问</span></span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># / url下的</span></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="comment"># 路径</span></span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">            <span class="comment">#默认首页</span></span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       8000;</span></span><br><span class="line">    <span class="comment">#    listen       somename:8080;</span></span><br><span class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="实战"><a class="markdownIt-Anchor" href="#实战"></a> 实战</h1>
<p>本次使用nginx来代理hexo服务器<br />
首先启动hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server --drafts</span><br></pre></td></tr></table></figure>
<p>启动nginx，完整配置文件见后文</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\14642\nginx-1.20.1\nginx.exe  -c D:\LearnCode\qxdn.github.io\nginx.conf</span><br></pre></td></tr></table></figure>
<p>此时打开浏览器访问localhost既可以发现80端口变成了博客，反向代理成功。</p>
<h2 id="nginx完整配置文件"><a class="markdownIt-Anchor" href="#nginx完整配置文件"></a> nginx完整配置文件</h2>
<p>注意里面的proxy</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">worker_processes</span>  auto;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       C:/Users/<span class="number">14642</span>/nginx-<span class="number">1</span>.<span class="number">20</span>.<span class="number">1</span>/conf/mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line">        </span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="comment"># 代理</span></span><br><span class="line">            <span class="attribute">proxy_pass</span>   http://127.0.0.1:4000;</span><br><span class="line">            <span class="comment"># 转发</span></span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>本次实验初步完成nginx代理博客，后续将进一步完成docker化，前后端分离和子域名利用。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p>[1]<a href="http://nginx.org/en/docs/beginners_guide.html">nginx doc</a><br />
[2]<a href="https://mp.weixin.qq.com/s?__biz=MzA5OTAyNzQ2OA==&amp;mid=2649719878&amp;idx=1&amp;sn=78a5a3b37a5a9bfb2eda34e31a801174&amp;scene=58&amp;subscene=0">一篇文章上手nginx</a></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Linux</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建部署live2d api</title>
    <url>/2021/06/14/live2d-api/</url>
    <content><![CDATA[<p>搭建部署live2d api<br />
封面《春音アリス*グラム》</p>
<span id="more"></span>
<h1 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h1>
<p>想要根据<a href="https://github.com/fghrsh/live2d_api">live2d api</a>搭建自己的api。我想要使用docker方便部署，但是不会php和nginx环境搭建，还对docker比较陌生。因此写下这篇文章。因为这三件都不是很熟悉，轻喷。</p>
<h1 id="docker配置"><a class="markdownIt-Anchor" href="#docker配置"></a> docker配置</h1>
<p>首先将live2d api仓库克隆下来</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/fghrsh/live2d_api.git</span><br><span class="line">cd live2d_api</span><br></pre></td></tr></table></figure>
<h2 id="docke-compose编写"><a class="markdownIt-Anchor" href="#docke-compose编写"></a> docke-compose编写</h2>
<p>创建<code>docker-compose.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.7&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">php:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">php:8-fpm</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./:/var/www/html</span></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">./nginx.conf:/etc/nginx/nginx.conf</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">./:/usr/share/nginx/html</span></span><br></pre></td></tr></table></figure>
<h2 id="nginx配置"><a class="markdownIt-Anchor" href="#nginx配置"></a> nginx配置</h2>
<p>创建<code>nginx.conf</code>文件，注意中间的跨域请求配置，同时server name这些请根据自己的需求配置</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"><span class="attribute">worker_processes</span>  auto;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#跨域</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;*&#x27;</span>; </span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, OPTIONS, PUT, DELETE&#x27;</span>;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;Content-Type&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123; </span><br><span class="line">            <span class="attribute">index</span> index.php;</span><br><span class="line">            <span class="attribute">autoindex</span> <span class="literal">off</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#转发</span></span><br><span class="line">        <span class="section">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">            <span class="comment">#fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">            <span class="attribute">root</span> /var/www/html;</span><br><span class="line">            <span class="attribute">fastcgi_pass</span> php:<span class="number">9000</span>;</span><br><span class="line">            <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">            <span class="attribute">fastcgi_param</span> SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            <span class="attribute">fastcgi_param</span> PATH_INFO <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">            <span class="attribute">fastcgi_param</span> PATH_TRANSLATED <span class="variable">$document_root</span><span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">            <span class="attribute">include</span>  fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="部署"><a class="markdownIt-Anchor" href="#部署"></a> 部署</h1>
<p>使用docker部署比较简单</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br><span class="line">#或者可以用下面的</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<h1 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h1>
<p>部署后使用浏览器打开<code>http://localhost/get/?id=1-23</code>结果如下<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.5/get.png" alt="get api" /><br />
测试使用stevenjoezhang的<a href="https://github.com/stevenjoezhang/live2d-widget">live2d-widget</a>，将其中的<code>apiPath</code>替换为<code>http://localhost/</code>，打开demo.html，结果如下，可以看到请求的url为localhost，api测试成功。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.5/apitest.png" alt="api test" /></p>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>本次完成了对live2d api的docker化。但是只在本地服务器上进行了测试，后续将对远程服务器进行测试。</p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>nginx</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>HK416手办开箱</title>
    <url>/2021/06/15/HK416-GK/</url>
    <content><![CDATA[<p>毕业时买的HK416 星之茧手办做为自己礼物的开箱记录</p>
<span id="more"></span>
<h1 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h1>
<p>在逛淘宝的时候偶然看到了HK416 星之茧的手办，商店图如下所示。不得不说太戳我xp系统了，虽然我不玩少女前线，但是这个实在是太好看了，于是就买下来当我的毕业礼物。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.4/shop.jpg" alt="商店图" /></p>
<h1 id="包装箱"><a class="markdownIt-Anchor" href="#包装箱"></a> 包装箱</h1>
<p>箱子图如下所示，外面的416很可爱。下面四张分别为包装箱的正面、反面、侧面和内侧的图片。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.4/box.jpg" alt="包装箱正面" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.4/box2.jpg" alt="包装箱反面" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.4/box3.jpg" alt="包装箱侧面" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.4/box4.jpg" alt="包装箱里侧" /></p>
<h1 id="配件"><a class="markdownIt-Anchor" href="#配件"></a> 配件</h1>
<p>配件一共两份，一个是说明书，还有一个是编号卡、兑换码<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.4/part1.jpg" alt="说明书" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.4/part2.jpg" alt="编号卡等" /></p>
<h1 id="正体"><a class="markdownIt-Anchor" href="#正体"></a> 正体</h1>
<p>本次开箱的本体如下，请原谅一下我的拍照技术。实际上还是特别好看的，枪盒可以装一把hk416模型，此外为了和同一系列之前两款合并还有一个增高盘。实际上到手的时候增高盘和416的底盘是用胶水粘死的。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.4/HK416.jpg" alt="HK416" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.4/gun_box.jpg" alt="枪盒" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.4/bottom.jpg" alt="增高盘" /></p>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>作为一个毕业送给自己的小礼物，价钱我觉得还是非常值的，实在是太好看了。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业设计（四）基于深度学习算法YOLO的行人车辆检测——开题报告</title>
    <url>/2021/06/26/YOLO-openreport/</url>
    <content><![CDATA[<h1 id="目的及意义含国内外的研究现状分析"><a class="markdownIt-Anchor" href="#目的及意义含国内外的研究现状分析"></a> 目的及意义（含国内外的研究现状分析）</h1>
<h2 id="研究目的"><a class="markdownIt-Anchor" href="#研究目的"></a> 研究目的</h2>
<p>  本次毕业设计拟对COCO数据集进行提取，并结合其他自制数据集补充，得到行人车辆的图片和标签，搭建You Only Look Once(YOLO)网络模型，训练得到针对车辆和行人的目标检测模型。</p>
<h2 id="研究意义"><a class="markdownIt-Anchor" href="#研究意义"></a> 研究意义</h2>
<p>  目标检测是计算机视觉中的一个重要分支，常用的方法有R-CNN<sup><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></sup>、Fast R-CNN<sup><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></sup>、Faster R-CNN<sup><sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></sup>、YOLO<sup><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></sup>、SSD<sup><sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></sup>等。在这些算法之中，YOLO以其较高的准确率、实时性和较小的模型而较为出名。YOLOv4 tiny<sup><sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></sup>的模型大小可以到达到23 MB，而且Intersection over Union（IoU）在50%以上的average precision（AP）可以达到40.2%，基于YOLO模型训练出来的车辆与行人检测模型，可以部署在一些嵌入式设备中，从而运用在自动驾驶领域。</p>
<h2 id="国内外研究现状"><a class="markdownIt-Anchor" href="#国内外研究现状"></a> 国内外研究现状</h2>
<p>  自2012年Hinton设计的AlexNet获得ImageNet竞赛冠军以来，人们便开始更多的关注卷积神经网络CNN，之后也启发了VGG、GoogLeNet等知名的卷积神经网络，而YOLOv1就是基于GoogLeNet的backbone进行改进。在YOLOv1提出以前，常用的基于深度学习的目标检测算法为R-CNN系列，其方法可以认为先使用Region Proposal Network（RPN）网络生成一系列样本的候选框，然后使用CNN网络对候选框进行识别并分类。这种方法的精确度取决于其候选框的提取，而且耗时大，Faster R-CNN网络在GPU上检测PASCAL VOC的速度达到5 frame per second(FPS)，而mean average precision(mAP)达到73.2%<sup><sup class="footnote-ref"><a href="#fn3" id="fnref3:1">[3:1]</a></sup></sup>。这种方法因为需要两步进行检测，所以被称为two-stage方法。<br />
  Joseph Redmon提出的YOLOv1模型基于GoogLeNet进行改善，开创性的将候选框和各个类的识别结果合在一起输出，并针对loss函数进行了重新设计。这种将two-stage方法中的两步合为一步的方法也被称为one-stage方法。这种开创性的设计使得YOLOv1在GPU上检测PASCAL VOC的速度达到45 FPS，加速版本YOLO还可以达到150 FPS，并且mAP达到63.4。相较于Faster R-CNN，虽然mAP变小了，但是模型的fps得了极大的提升，可以运用于实时系统<sup><sup class="footnote-ref"><a href="#fn4" id="fnref4:1">[4:1]</a></sup></sup>。<br />
  为了提升模型的精确度，YOLOv2在所有卷积层中使用了Batch Normalization（BN）层，减少了训练时模型对初始化权重的敏感程度，避免模型过拟合。为了减少网络对不同分辨率输入的敏感程度，YOLOv2对网络进行了多个分辨率尺度的训练。受到了Faster R-CNN的启发，YOLOv2使用预制的Anchor Box去预测Bounding Box并去掉了全连接层，加快了计算，预制的Anchor Box通过对数据集中的物体框使用K-mean聚类算法获得。为了提高小目标的检测效果，作者提出了passthrough层，获取更细的特征<sup><sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup></sup>。<br />
  YOLOv1和YOLOv2对小目标的检测效果一直不好，为了提升YOLO网络对小目标的检测性能，YOLOv3借鉴特征金字塔<sup><sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup></sup>，一共有三个尺寸的特征图用于检测目标，小尺寸的特征图检测大物体，大尺寸的特征图检测小物体。为了提升网络性能，参考了ResNet结构,引入了残差块<sup><sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup></sup>。<br />
  YOLOv4使用了近年来深度学习方面的许多技巧，包含了mish激活函数、CIoU loss函数、mosaic数据增强等。通过使用这些技巧，YOLOv4在COCO数据集上的mAP达到了65.7%,而速度达到了62 FPS<sup><sup class="footnote-ref"><a href="#fn10" id="fnref10">[10]</a></sup></sup>。</p>
<h1 id="研究设计的基本内容-目标-拟采用的技术方案及措施"><a class="markdownIt-Anchor" href="#研究设计的基本内容-目标-拟采用的技术方案及措施"></a> 研究（设计）的基本内容、目标、拟采用的技术方案及措施</h1>
<h2 id="研究的基本内容"><a class="markdownIt-Anchor" href="#研究的基本内容"></a> 研究的基本内容</h2>
<p>（1）深入了解学习深度学习的理论基础知识<br />
（2）学习YOLO网络的评价指标和网络中的backbone、neck、head、bounding box、anchor、mosaic数据增强、loss函数设计等技术方面的细节<br />
（3）针对现有数据集的检测结果对YOLO网络进行调整优化，目前在这方面已经有研究参考<sup><sup class="footnote-ref"><a href="#fn11" id="fnref11">[11]</a></sup></sup><sup><sup class="footnote-ref"><a href="#fn12" id="fnref12">[12]</a></sup></sup><sup><sup class="footnote-ref"><a href="#fn13" id="fnref13">[13]</a></sup></sup><sup><sup class="footnote-ref"><a href="#fn14" id="fnref14">[14]</a></sup></sup>。</p>
<h2 id="研究目标"><a class="markdownIt-Anchor" href="#研究目标"></a> 研究目标</h2>
<p>（1）收集车辆和行人相关数据集<br />
（2）复现YOLO网络<br />
（3）根据现有数据集的特点，使用K-means聚类方法获得合适的anchor以提升网络检测性能<br />
（4）搭建YOLO网络并进行训练，实现对行人和车辆的检测</p>
<h2 id="本文拟采用的技术方案及措施"><a class="markdownIt-Anchor" href="#本文拟采用的技术方案及措施"></a> 本文拟采用的技术方案及措施</h2>
<p>（1）文献研究法<br />
利用图书馆、网络等途径，广泛收集相关的文献资料，加以阅读和分析，以了解目标检测的发展历史，了解目标检测算法的各类技巧的原理，以便深刻了解YOLO网络使用和改进的技巧。<br />
（2）数据集收集<br />
对于深度学习来说，数据集中样本的数量对模型的性能有较大影响。因此数据集的选择就比较重要。COCO数据集是微软团队推出的一个数据集，相较于以前常用的PASCAL VOC,COCO的类别以及每张图的实例和标签都要多<sup><sup class="footnote-ref"><a href="#fn15" id="fnref15">[15]</a></sup></sup>。因此现在许多研究使用COCO来训练模型<sup><sup class="footnote-ref"><a href="#fn9" id="fnref9:1">[9:1]</a></sup></sup><sup><sup class="footnote-ref"><a href="#fn10" id="fnref10:1">[10:1]</a></sup></sup>。因此本次设计将从COCO数据集中提取行人以及各个车辆的图片、标注，同时从其他数据集和网络图片标注等方式填充更多数据作为本次设计的数据集。<br />
（3）YOLO网络<br />
YOLO是一个目标检测算法，YOLO网络将目标检测问题转换为回归问题，直接利用卷积神经网络预测目标的Bounding Box和各个类别的置信概率，使得算法的计算速度非常快，且YOLO结构简单、模型小可以部署在一些嵌入设备上面。本次毕业设计拟使用收集到的行人车辆数据对YOLO模型进行训练，并根据检测效果调整网络的超参数以做到更好的检测效果。</p>
<h2 id="技术路线图"><a class="markdownIt-Anchor" href="#技术路线图"></a> 技术路线图</h2>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/roadmap.png" alt="图1 技术路线图" /></p>
<h1 id="进度安排"><a class="markdownIt-Anchor" href="#进度安排"></a> 进度安排</h1>
<p>2021.3.1-2021.3.31 学习深度学习相关知识，设计并开发算法雏形<br />
2021.4.1-2021.4.30 针对现有算法进行测试，并且尝试对网络参数进行修改和微调<br />
2021.5.1-2021.5.20 撰写并修改毕业论文<br />
2021.5.21-2021.5.31 准备答辩</p>
<h1 id="阅读的参考文献不少于15篇其中近五年外文文献不少于3篇"><a class="markdownIt-Anchor" href="#阅读的参考文献不少于15篇其中近五年外文文献不少于3篇"></a> 阅读的参考文献不少于15篇（其中近五年外文文献不少于3篇）</h1>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>Girshick R, Donahue J, Darrell T, et al. Rich feature hierarchies for accurate object detection and semantic segmentation[C] CVPR. 2014: 580-587. <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p>Girshick R. Fast r-cnn[C] IEEE international conference on computer vision. 2015: 1440-1448. <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p>Ren S , He K , Girshick R , et al. Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks[J]. IEEE Transactions on Pattern Analysis &amp; Machine Intelligence, 2017, 39(6):1137-1149. <a href="#fnref3" class="footnote-backref">↩︎</a> <a href="#fnref3:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p>Redmon J , Divvala S , Girshick R , et al. You Only Look Once: Unified, Real-Time Object Detection[C]CVPR. IEEE, 2015:779-788. <a href="#fnref4" class="footnote-backref">↩︎</a> <a href="#fnref4:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p>Liu W, Anguelov D, Erhan D, et al. Ssd: Single shot multibox detector[C] Springer, Cham, 2016: 21-37. <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p>Wang C Y, Bochkovskiy A, Liao H Y M. Scaled-YOLOv4: Scaling Cross Stage Partial Network[J]. arXiv preprint arXiv:2011.08036, 2020. <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p>Redmon J , Farhadi A . YOLO9000: Better, Faster, Stronger[J]. 2017:6517-6525. <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn8" class="footnote-item"><p>Lin T Y , Dollár, Piotr, Girshick R , et al. Feature Pyramid Networks for Object Detection[C]CVPR.2017:2117-2125. <a href="#fnref8" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn9" class="footnote-item"><p>Redmon J , Farhadi A . YOLOv3: An Incremental Improvement[J]. arXiv preprint arXiv:1804.02767, 2018. <a href="#fnref9" class="footnote-backref">↩︎</a> <a href="#fnref9:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn10" class="footnote-item"><p>Bochkovskiy A , Wang C Y , Liao H Y M . YOLOv4: Optimal Speed and Accuracy of Object Detection [J]. arXiv preprint arXiv:2004.10934, 2020. <a href="#fnref10" class="footnote-backref">↩︎</a> <a href="#fnref10:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn11" class="footnote-item"><p>胡臣辰,陈贤富.基于YOLO改进残差网络结构的车辆检测方法[J].信息技术与网络安全,2020,39(09):56-60. <a href="#fnref11" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn12" class="footnote-item"><p>鞠默然,罗海波,王仲博,何淼,常铮,惠斌.改进的YOLO V3算法及其在小目标检测中的应用[J].光学学报,2019,39(07):253-260. <a href="#fnref12" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn13" class="footnote-item"><p>付云霞.基于YOLO算法的行人检测[J].科学技术创新,2020(29):110-111. <a href="#fnref13" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn14" class="footnote-item"><p>顾恭,徐旭东.改进YOLOv3的车辆实时检测与信息识别技术[J].计算机工程与应用,2020,56(22):173-184. <a href="#fnref14" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn15" class="footnote-item"><p>Lin T Y , Maire M , Belongie S , et al. Microsoft COCO: Common Objects in Context[C] European Conference on Computer Vision. Springer International Publishing, 2014: 740-755. <a href="#fnref15" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>毕业设计</tag>
        <tag>yolo</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业设计（五）YOLO9000翻译</title>
    <url>/2021/06/28/YOLO9000-translate/</url>
    <content><![CDATA[<p>渣翻，轻喷。下次再也不玩word转markdown了，难受</p>
<span id="more"></span>
<h1 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h1>
<p>让我们来介绍一下YOLO9000，YOLO9000是一个最先进的，能够检测超过9000个物体类别的实时物体检测系统。首先，我们提出许多新颖且取材自先前工作的方法去提升YOLO的检测效果。提升后的模型就是YOLOv2，在标准的检测任务如PASCAL VOC和COCO中效果是最好的。通过使用新颖的多尺度训练方法，YOLOv2模型可以在多种输入尺寸上运行，并且在速度和准确率上做到简单的折中。在速度67 FPS的时候，YOLOv2在VOC 2007数据集上获得了76.8 mAP的效果。在40 FPS的时候，YOLOv2获得了78.6 mAP，性能优于最先进的方法，如Faster R-CNN、ResNet和SSD，同时运行速度还快的明显。最后，我们提出一种方法可以联合训练物体检测和分类。通过使用这个方法，我们可以在COCO检测数据集和ImageNet分类数据集上同时训练YOLO9000。我们的联合训练使得YOLO9000能够预测没有标签数据的目标类。我们在ImageNet检测任务上验证了我们的方法，YOLO9000在COCO数据集上有的44个类中，获得了19.7 mAP的成绩。而在COCO训练集没有的156个类上，YOLO9000获得了16.0 mAP。而且，YOLO9000可以在保持实时的情况下，识别超过9000个不同的类。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-1.png" alt="图 1：YOLO9000。YOLO9000可以实时检测大量的物体类" /></p>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>物体检测算法通常要求快速、准确和有能力识别大量的物体。自从神经网络的引入，检测算法变得越来越快速、准确。然而，大多数检测方法仍然受限于少数物体。<br />
当前的物体检测数据集与其他分类数据集和标注数据集，数据集的量很少。最常见的检测数据集含有数千到数十万张图片，包含几十到数百个标签。分类数据集含有百万张图片，包含数十或者数百或者数千个类别。<br />
我们希望检测数据集的规模能达到分类数据集的规模。但是，为检测数据集打标签比分类或者标注（标注通常是用户免费提供）的数据集要花费更多。因此，我们不太可能在近未来看到检测数据集和分类数据集有相同的规模。<br />
我们提出了一种新的方法利用已有的大量分类数据集，并使用其去拓展当前检测系统的规模。我们的方法使用了一个对象分类的层次视图，这使得我们能够将不同的数据集合起来。<br />
我们还提出了一种联合训练算法，使得我们能够在检测数据和分类数据上训练我们的物体检测器。我们的方法利用已经打好标签的检测图像去学习定位物体的准确度，同时利用分类图像去提升其词汇量和鲁棒性。<br />
通过使用这个方法，我们训练了一个实时的物体检测器YOLO9000，它可以检测超过9000个物体类别。首先，我们基于YOLO检测系统进行提升并获得了一个最先进的实时检测器YOLOv2。然后，我们使用我们的数据集组合方法和联合训练算法在超过9000个类的ImageNet和COCO的物体检测集上训练一个模型。<br />
所有的代码和预训练模型在<a href="http://pjreddie.com/yolo9000/">http://pjreddie.com/yolo9000/</a>。</p>
<h1 id="更好"><a class="markdownIt-Anchor" href="#更好"></a> 更好</h1>
<p>YOLO与最先进的检测系统相比，有大量的缺点。与Fast R-CNN相比，YOLO的误差分析表明YOLO产生了大量的定位错误。此外，与基于区域建议方法相比，YOLO的召回率相对较低。因此，我们主要提升召回率和定位准确率同时保持分类的准确率。<br />
计算机视觉通常倾向于更大，更深的网络。更好的表现通常取决于训练更大的网络或者将多个模型合在一起。但是，我们希望更准确的检测器同时检测依然速度很快。我们简化了网络，使其更容易训练，而不是扩大我们的网络。我们将过去工作中的大量想法和我们自己的新颖的思想结合起来去提升YOLO的表现。结果的概要在表2中。<br />
<strong>Batch Normalization（批次归一化）.</strong><br />
批次归一化使得模型在收敛性方面有显著的提升，同时消除了其他形式的正则化。通过在YOLO的全部卷积层中增加批次归一化，我们获得了超过2%<br />
mAP的提升。批次归一化还有助于正则化模型。通过使用批次归一化，我们可以从模型中去除dropout层，同时不会过拟合。<br />
<strong>High Resolution Classifier（高分辨率分类器）.</strong><br />
所有最先进的检测方法都是使用在ImageNet上预训练好的分类器。从AlexNet开始，大多数分类器对输入大小小于256×256的图像进行操作。原始YOLO在224×224分辨率下训练分类网络，提升分辨率到448来训练检测网络。这意味着网络必须同时切换到学习物体检测并调整到新的输入分辨率。<br />
对于YOLOv2，我们首先在ImageNet上以448×448分辨率训练了10个时期进行微调，这给了网络时间去调整其卷积核，使其能够在更高的分辨率上表现的更好。然后根据检测结果对网络进行微调。这个高分辨率分类网络给了我们大概4%<br />
mAP的提升。<br />
<strong>Convolutional With Anchor Boxes（锚框卷积）.</strong><br />
YOLO直接使用全连接层在卷积特征提取器的顶端预测边框的坐标。Faster R-CNN没有直接预测坐标，而是使用手选的先验框来预测边框。Faster R-CNN中的区域建议网络（RPN）只使用卷积层来预测锚框的偏差值和置信度。因为预测层是卷积的，所以RPN在特征图的每个位置预测这些偏差。预测偏差而不是预测坐标简化了问题，并使得网络更容易学习。<br />
我们使用锚框去预测边框，并去除了全连接层。首先，我们去除了一个池化层使得网络输出的卷积层有了更高的分辨率。我们还将网络的输入从448×448缩小到了416。我们这么做是希望我们的特征图有奇数个位置，这样就有单个中心格。物体，特别是大物体，倾向于占据图像的中心，所以最好用中心的单个格子去预测这些物体而不是使用相邻的四个格子。YOLO的卷积层使用因子32对图像进行降采样，所以通过输入分辨率为416的图像，我们可以得到13×13大小的特征图。<br />
当我们移动锚框的时候，我们还将类预测机制从空间位置和每个锚框的预测类和物体性中解耦。继续YOLO，物体性预测依然预测正确标签与建议框之间的IOU，分类预测器去预测框中物体是什么类别的条件概率。<br />
使用锚框使我们的准确率得到了小小的下降。YOLO只能为每个图像预测98个框，但是使用锚框我们的模型可以预测超过1000个。不使用锚框，我们的中等模型获得69.5 mAP和81%的召回率。使用锚框，我们的模型获得69.2 mAP和88%的召回率。虽然mAP下降了，但召回率的上升意味着我们的模型有更多空间去提升。<br />
<strong>Dimension Clusters（尺寸聚类）.</strong><br />
当我们使用有锚框的YOLO时，我们遇到了两个问题。第一个问题是框的尺寸是手选的。神经网络可以学习适当的调整框，但是如果我们在开始的时候挑选更好的先验框，就可以使网络更容易学习去预测好的检测。<br />
我们在训练集的边框上使用k-means聚类算法去自动寻找最佳先验而不是手动挑选。如果我们使用标准的使用欧几里德距离的k-means算法，更大的框会比小的框产生更多的错误。然而，我们真正想要的基于IOU分数的先验，而IOU分数独立于框的大小。因此，对于我们的距离度量，我们使用：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mrow><mo fence="true">(</mo><mi>b</mi><mi>o</mi><mi>x</mi><mo separator="true">,</mo><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo fence="true">)</mo></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mi>I</mi><mi>O</mi><mi>U</mi><mrow><mo fence="true">(</mo><mi>b</mi><mi>o</mi><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">d\left( box,centroid \right) = 1 - IOU\left( box,\ centroid \right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">b</span><span class="mord mathdefault">o</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">b</span><span class="mord mathdefault">o</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p>我们使用了不同的k值来跑k-means算法，并绘制最近质心的平均IOU，见图2。权衡模型复杂度和高召回率之间，我们选择了k=5。聚类的质心与手工选取的锚框有显著差异。短而宽的框很少，而高瘦的框很多。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-2.png" alt="图 2：VOC和COCO数据上的聚类框尺寸。我们在边框上运行k-means算法去获得我们模型的一个较好的先验。左边的图像展示了不同的k值情况下的平均IOU。我们发现当k=5时，在召回率和模型复杂度之间有一个较好的平衡。右边的图像展示了VOC和COCO数据集上的相关质心。两个数据集的先验都偏向于瘦高框。而COCO的框比VOC的框大一些。" /><br />
在表1中我们对比了我们聚类政策选择的最近质心和手选的锚框的平均IOU。在只有5个先验质心的表现为平均IOU 61.0与9个锚框的表现平均IOU 60.9相似。这表明使用k-means来生成边框开始使得模型有更好的表现，并使任务更易于学习。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-3.png" alt="表 1:VOC 2007上最近先验的平均IOU。VOC2007上对象的平均IOU与使用不同生成方法之前最接近、未修改的IOU。聚类比使用手工挑选的先验有更好的结果。" /><br />
<strong>Direct location prediction（直接位置预测）.</strong><br />
YOLO使用锚框后，我们遇到的第二个问题是：模型不稳定，特别是在早期迭代的时候。大多数不稳定的原因来自预测框的（x，y）位置。在区域建议网络中，网络预测<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">t_{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">t_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，中心坐标（x，y）的计算如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>x</mi></msub><mo>×</mo><msub><mi>ω</mi><mi>a</mi></msub><mo fence="true">)</mo></mrow><mo>−</mo><msub><mi>x</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">x = \left( t_{x} \times \omega_{a} \right) - x_{a}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>y</mi></msub><mo>×</mo><msub><mi>h</mi><mi>a</mi></msub><mo fence="true">)</mo></mrow><mo>−</mo><msub><mi>y</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">y = \left( t_{y} \times h_{a} \right) - y_{a}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>比如，预测<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>x</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t_{x} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时会向右移动一个锚框的宽度，预测<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>x</mi></msub><mo>=</mo><mtext> </mtext><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t_{x} = \  - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>时会向左移动同样的一个锚框宽度。<br />
这个公式并没有任何约束，所以任何一个锚框可以出现在图像的任何一个点，而不用管位置预测框。在随机初始化模型的情况下，模型要花很长时间才能稳定的去预测敏感偏差。<br />
我们没有预测偏移量，而是采用YOLO的方法，预测相对于网格单元位置的位置坐标。这将正确标签的值限制在0和1之间。我们使用逻辑激活函数来限制网络的预测在这个范围内。<br />
网络在输出特征图的每个单元格预测5个边框。网络为每个边框预测5个坐标，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">t_{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">t_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">t_{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">t_{h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">t_{o}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。如果单元格与图像左上角的偏移量为（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">c_{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">c_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>），且边框具有宽度和高度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">p_{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">p_{h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则预测值公式为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>x</mi></msub><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>x</mi></msub><mo fence="true">)</mo></mrow><mo>+</mo><msub><mi>c</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">b_{x} = \sigma\left( t_{x} \right) + c_{x}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>y</mi></msub><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>y</mi></msub><mo fence="true">)</mo></mrow><mo>+</mo><msub><mi>c</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">b_{y} = \sigma\left( t_{y} \right) + c_{y}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>w</mi></msub><mo>=</mo><msub><mi>p</mi><mi>w</mi></msub><msup><mi>e</mi><msub><mi>t</mi><mi>w</mi></msub></msup></mrow><annotation encoding="application/x-tex">b_{w} = p_{w}e^{t_{w}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.037996em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.843556em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>h</mi></msub><mo>=</mo><msub><mi>p</mi><mi>h</mi></msub><msup><mi>e</mi><msub><mi>t</mi><mi>h</mi></msub></msup></mrow><annotation encoding="application/x-tex">b_{h} = p_{h}e^{t_{h}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.037996em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.843556em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><mtext>Object</mtext><mo fence="true">)</mo></mrow><mo>∗</mo><mi>I</mi><mi>O</mi><mi>U</mi><mrow><mo fence="true">(</mo><mi>b</mi><mo separator="true">,</mo><mi>o</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo fence="true">)</mo></mrow><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P_{r}\left( \text{Object} \right)*IOU\left( b,object \right) = \sigma\left( t_{o} \right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord text"><span class="mord">Object</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p>因为我们约束了位置预测，所以参数更容易学习，使得模型更稳定。使用尺寸聚类和直接预测边框的中心位置比使用锚框的版本提升了YOLO大概5%的精确度。<br />
<strong>Fine-Grained Features（细粒度特征）.</strong><br />
这个改进的YOLO在13×13的特征图上进行检测。虽然这对大型物体充足，但更细的特征对小物体有好效果。Faster R-CNN和SSD都在网络中的特征图上运行他们的区域建议网络以获得一系列分辨率。我们使用一种不同的方法，简单添加一个passthrough层从之前几层获得26×26分辨率的特征。<br />
像ResNet的恒等映射一样，passthrough层通过相邻的特征叠加到不同的通道而不是空间位置来连接更高分辨率的特征和低分辨率的特征。这将26×26×512的特征图转换层13×13×2048的特征图，这使得其可以被原先的特征图连接。我们的检测器在这个拓展后的特征图上运行，这样能获得更细的特征。这使得性能有1%的提升。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-4.png" alt="图 3：有尺寸先验与位置预测的边框。我们从聚类质心的偏移量预测框的宽高。我们使用一个sigmoid函数来预测框相对于滤波器应用位置的中心坐标。" /><br />
<strong>Multi-Scale Training（多尺度训练）.</strong><br />
最初的YOLO使用448×448分辨率的输入。随着锚框加入网络，我们将分辨率改到416×416。但是，由于我们的模型只使用卷积层和池化层，所以它可以被动态的调整。我们YOLOv2能够在不同大小的图像上运行，所以我们这样训练模型。<br />
我们每隔几次小迭代就改变网络而不是固定网络的输入图像大小。我们的网络每10个批次就随机选择一个新的图像尺寸。因为我们的模型以32的倍率进行降采样，所以我们以32的倍数变化：{320，352，…，608}。因此，最小的可选输入时320×320，最大的是608×608。我们重设网络到那个尺寸并继续训练。<br />
这种机制迫使网络学会在不同的输入尺寸上进行预测。这意味着同一个网络可以在不同的分辨率下预测检测。网络在更小的尺寸下运行得更快，所以YOLOv2在速度和准确性之间提供了一个简单的折衷。<br />
在低分辨率下，YOLOv2是一种廉价、相当精确的探测器。在288×288的分辨率下，其运行速度超过90 FPS而mAP和Fast R-CNN一样好。这使得其非常适合较小的GPU、高分辨率视频或者多个视频流。<br />
在高分辨率下YOLOv2是最先进的检测器，在VOC2007数据集上有78.6的mAP同时还保持着实时的速度。YOLOv2与其他框架在VOC2007的比较见表3和图4。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-5.png" alt="图 4 VOC 2007上的准确率和速度" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-6.png" alt="表 3 在PASCAL VOC2007上的检测框架。YOLOv2比以前的检测方法更快更准确。它还可以运行在不同的分辨率之间来平衡速度和准确性。每个YOLOv2入口实际上是相同的训练模型，具有相同的权重，只是在不同的大小下进行评估。所有的时间信息都在Geforce GTX Titan X（原始，不是Pascal模型）上。" /><br />
<strong>Further Experiments（进一步实验）.</strong><br />
我们在VOC2012上训练了YOLOv2检测器。表4显示了YOLOv2与其他最先进的检测系统的性能比较。YOLOv2实现73.4 mAP，同时运行速度远远快于竞争的方法。我们还在COCO数据集上训练了我们的模型并和其他的方法进行比较，结果在表5。在VOC评估（IOU=.5）上，YOLOv2得到44.0 mAP，与SSD和Faster R-CNN相当。</p>
<h1 id="更快"><a class="markdownIt-Anchor" href="#更快"></a> 更快</h1>
<p>我们希望检测能准确，但是我们也希望能够快。大多数用于探测的应用，如机器人或自动驾驶，依赖于低延迟预测。为了最大限度地提高性能，为了使YOLOv2快，我们从头开始设计。大多数检测框架都依赖VGG-16作为基本的特征提取器。VGG-16是一个功能强大、准确的分类网络，但它不必要的复杂。VGG-16的卷积层需要306.9亿个浮点运算去处理单个224×224分辨率的图像。<br />
YOLO框架使用基于GoogLeNet架构的定制网络。这个网络比VGG-16快，仅使用85.2亿个运算去前向传播。然而，它的准确度比VGG-16稍差。在ImageNet上，对于单张裁剪图像，224×224分辨率下的top-5准确率，YOLO的自定义模型获得了88.0%，而VGG-16则为90.0%。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-7.png" alt="表 2 YOLO到YOLOv2的路径。大多数列出的设计决策都会导致mAP的显著增加。两个例外是换到带有全卷积网络的锚框和使用新网络。在使用新的网络切割计算时，切换到锚框方法在不改变mAP的情况下提高了召回率33%。" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-8.png" alt="表 4 PASCAL VOC2012测试检测的结果。YLOV2的性能与最先进的探测器（如Faster R-CNN，ResNet和SSD512）一样，且速度快2-10倍。" /><br />
<strong>Darknet-19.</strong><br />
我们提出了一个新分类模型作为YOLOv2的基础。我们的模型建立在先前的网络设计的工作以及该领域的共同知识的基础上。与VGG模型类似，我们主要使用3×3卷积核，并且在每次池化之后将通道数增加一倍。在网络中网络（NIN）的输出后，我们使用全局平均池化预测，把1×1的卷积核置于3×3的卷积核之间，用来压缩特征。我们使用批次归一化稳定模型训练，加速收敛和正则化模型。<br />
我们最终的模型，叫Darknet-19，拥有19个卷积层和5个最大池化层。完整的网络描述见表6。Darknet-19只需要55.8亿次运算去处理一张图像。但在ImageNet上却达到了72.9%的top-1准确率和91.2%的top-5准确率。<br />
<strong>Training for classification（分类训练）.</strong><br />
我们使用Darknet神经网络框架，在标准ImageNet 1000分类数据集上使用随机梯度下降（起始学习速率为0:1）、多项式速率衰减（幂为4）、权重衰减为0:0005和动量为0:9对网络进行160个时期的训练。在训练期间，我们使用标准的数据增强技巧，包括随机裁剪、旋转、色调、饱和度和曝光变化。<br />
如上所述，在我们对224×224的图像进行初始训练之后，我们在更大的尺寸448上对模型进行微调。对于这次微调，我们训练了上述参数但是只使用了10个时期并且以的学习率开始。在这种更高分辨下，我们的网络达到了top-1准确率76.5%，top-5准确率93.3%。<br />
<strong>Training for detection（检测训练）.</strong><br />
我们修改这个网络进行检测，删除了最后一个卷积层，作为替代添加了3个有1024个滤波器的3×3卷积层，然后再加上最后一个1×1的卷积层，输出与我们检测需要的输出一样。对于VOC，我们预测5个框，每个框有5个坐标和20个类别，所以有125个滤波器。我们还在最后的3×3×512层和倒数第二个卷积层之间加了一个passthrough层，以便我们的模型可以使用细粒的特征。<br />
我们训练网络160个时期，以学习率开始，并在第60和90个时期的时候除以10。我们使用0.0005的权重衰减和0.9的动量。我们对YOLO和SSD进行类似的数据增强，随机裁剪，色彩偏移等。我们对COCO和VOC使用相同的训练策略。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-9.png" alt="表 5 COCO test-dev2015上的测试结果" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-10.png" alt="表 6 Darknet-19" /></p>
<h1 id="更强"><a class="markdownIt-Anchor" href="#更强"></a> 更强</h1>
<p>我们提出一种再分类数据和检测数据上联合训练的机制。我们的方法使用标记为检测的图像来学习边框坐标预测和目标之类的特定检测信息以及如何对常见目标进行分类。它使用仅具有类别标签的图像来扩展可检测类别的数量。<br />
在训练期间，我们混合检测数据集和分类数据集的图像。当我们的网络看到了标记为检测的图像时，我们使用完整的YOLOv2 loss函数进行反向传播，当它看见一个分类图像时，我们只是用分类特定的loss函数进行反向传播。<br />
这种方法遇到了一点挑战。检测数据集只有通用目标和通用标签，如“狗”或“船”。分类数据集有更广更深的标签范围。ImageNet有超过一百种品种的狗，包括“诺福克㹴犬”，“约克夏㹴”和“贝林登犬”。如果我们想在两个数据集上训练，我们需要一个连贯的方式来合并这些标签。<br />
大多数分类方法使用一个softmax层去计算所有可能类的最终概率分布。使用softmax假定类别之间时相互排斥的。这给数据集组合带来了问题，比如你不想用这个模型组合ImageNet和COCO，因为“诺福克㹴犬”和“狗”不是互斥的。<br />
我们可以使用一个多标签的模型来组合假定不互助的数据集。这个方法无视我们所知道的数据的全部结构，比如COCO中所有的类是互斥的。<br />
<strong>Hierarchical classification（分层分类）.</strong><br />
ImageNet的标签从WordNet提取，这是一个用于构建概念及其关系的语言数据库。在WordNet中，“诺福克㹴犬”和“约克夏㹴”都是“㹴”的下义词，“㹴”是“猎犬”的一种，“猎犬”是“狗”的一种，“狗”是“犬类动物”的一种等等。绝大多数的分类方法假定标签是一个扁平结构，但是对于联合数据集，结构正是我们所需要的。<br />
WordNet的结构就像一个有向图，而不是树，因为语言是复杂的。比如“狗”既是“犬科动物”的一种，也是“家畜”的一种，这两个在WordNet中都是同义词。我们没有使用完整的图结构，而是通过ImageNet的概念构建一个分层树来简化问题。<br />
为了构建这棵树，我们检测了ImageNet中的视觉名词，并查看它们通过WordNet图到根节点的路径，本例中为“物理物体”。许多同义词在图中只有一条路径，所以我们先将所有这些路径添加到我们的树中。然后我们反复检查我们留下的概念，并在树上添加尽可能少的路径。因此，如果一个概念有两条路径到根节点，一条路径会给树增加三条边，另一条路径只增加一条边，那么我们选择更短的路径。<br />
最终的结果就是WordTree，一个视觉概念分层模型。为了使用WordTree进行分类，我们预测每个节点的条件概率，以得到同义词集合中每个同义词下义词的概率。比如，在“㹴”节点我们预测：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><mi>N</mi><mi>o</mi><mi>r</mi><mi>f</mi><mi>o</mi><mi>l</mi><mi>k</mi><mtext> </mtext><mi>t</mi><mi>e</mi><mi>r</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>r</mi><mtext> </mtext><mi mathvariant="normal">∣</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>r</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P_{r}\left( Norfolk\ terrier\ |terrier \right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace"> </span><span class="mord">∣</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><mi>Y</mi><mi>o</mi><mi>r</mi><mi>k</mi><mi>s</mi><mi>h</mi><mi>i</mi><mi>r</mi><mi>e</mi><mtext> </mtext><mi>t</mi><mi>e</mi><mi>r</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">∣</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>r</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P_{r}\left( Yorkshire\ terrier|terrier \right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mspace"> </span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">∣</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><mi>B</mi><mi>e</mi><mi>d</mi><mi>l</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>o</mi><mi>n</mi><mtext> </mtext><mi>t</mi><mi>e</mi><mi>r</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">∣</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>r</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P_{r}\left( Bedlington\ terrier|terrier \right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">∣</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p>如果我们想要计算一个特定节点的绝对概率，我们只需要简单的随着通道到树的根节点，并乘以条件概率。所以，如果我们想要知道一张图是不是为“诺福克㹴犬”我们计算：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><mtext>Norfolk terrier</mtext><mo fence="true">)</mo></mrow><mo>=</mo><msub><mi>P</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><mi>N</mi><mi>o</mi><mi>r</mi><mi>f</mi><mi>o</mi><mi>l</mi><mi>k</mi><mtext> </mtext><mi>t</mi><mi>e</mi><mi>r</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">∣</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>r</mi><mo fence="true">)</mo></mrow><mo>×</mo><msub><mi>P</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><mi>t</mi><mi>e</mi><mi>r</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">∣</mi><mi>h</mi><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>n</mi><mi>g</mi><mtext> </mtext><mi>d</mi><mi>o</mi><mi>g</mi><mo fence="true">)</mo></mrow><mo>×</mo><mo>…</mo><mo>×</mo><msub><mi>P</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mi>a</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>l</mi><mi mathvariant="normal">∣</mi><msub><mi>P</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><mtext>animal</mtext><mo fence="true">)</mo></mrow><mo>×</mo><msub><mi>P</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><mi>a</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>l</mi><mi mathvariant="normal">∣</mi><mi>p</mi><mi>h</mi><mi>y</mi><mi>s</mi><mi>i</mi><mi>c</mi><mi>a</mi><mi>l</mi><mtext> </mtext><mi>o</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P_{r}\left( \text{Norfolk\ terrier} \right) = P_{r}\left( Norfolk\ terrier|terrier \right) \times P_{r}\left( terrier|hunting\ dog \right) \times \ldots \times P_{r}(mammal|P_{r}\left( \text{animal} \right) \times P_{r}\left( animal|physical\ object \right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord text"><span class="mord">Norfolk terrier</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">∣</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">∣</span><span class="mord mathdefault">h</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace"> </span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord text"><span class="mord">animal</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord">∣</span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace"> </span><span class="mord mathdefault">o</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p>对于分类目的，我们假定图像含有一个目标：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>r</mi></msub><mrow><mo stretchy="false">(</mo><mtext>physical object</mtext></mrow><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P_{r}\left. (\text{physical\ object} \right.) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mopen">(</span><span class="mord text"><span class="mord">physical object</span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。<br />
为了验证这种方法，我们在使用了1000类的ImageNet构建的WordTree上训练Darknet-19。为了构建WordTree1k，我们添加了所有将标签空间从1000扩展到1369的中间节点。在训练过程中，我们将正确标签向树后向传播，以便如果图像被标记为“诺福克㹴犬”，则它也被标记为“狗”和“哺乳动物”等。为了计算条件概率，我们的模型预测一个有1369个值的向量，并且我们计算了相同概念的下义词在所有同义词集上的softmax，见图5。<br />
使用与之前相同的训练参数，我们的分层Darknet-19达到了top-1 71.9%的准确性，top-5 90.4%的准确性。尽管增加了369个额外概念，我们的网络预测了一个树形结构，我们的准确率仅下降了一点点。以这种方式进行分类也有一些好处。以这种方式进行分类也有一些好处。在新的或未知的目标类别上性能会降低。例如，如果网络看到一只狗的照片，但不确定它是什么类型的狗，它仍然会更高置信度地预测“狗”，但是在下义位扩展之间有更低的置信度。<br />
这个公式同样适用于检测，现在，我们使用YOLOv2的物体预测器给我们一个的值，而不是假定每张图都有一个物体。检测器预测一个边框和概率树。我们向下遍历树，我们取最高置信度的路径分割，直到达到一个阈值，然后我们预测物体类。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-11.png" alt="图 5 ImageNet和WordTree预测对比。大多数ImageNet模型使用单个大的softmax函数去预测概率分布。使用WordTree，我们对上下义词执行多个softmax操作。" /><br />
<strong>Dataset combination with WordTree（数据集与词语树结合）.</strong><br />
我们可以使用合理的WordTree将多个数据集以合理的方式组合在一起。我们只需要将数据集中的类别映射到数中的语法集。图6展示了一个使用WordTree组合ImageNet和COCO的例子。WordTree是非常多样化的，因此我们可以将此项技术用于大多数数据集。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-12.png" alt="图 6 使用WordTree层次结构组合数据集。使用WordNet概念图，我们建立了一个视觉概念的层次树。然后我们可以通过将数据集中的类映射到树中的同义词来合并数据集。这是WordTree为了便于说明的简化视图" /><br />
<strong>Joint classification and detection（分类检测联合）.</strong><br />
现在我们可以使用WordTree去组合数据集，我们可以在分类和检测数据集上训练我们的联合模型。我们想要训练一个非常大规模的检测器，所以我们使用COCO检测数据集和完整版本ImageNet的前9000个类创建我们的组合数据集。我们还想评估我们的方法，所以我们添加任意ImageNet挑战中未包含的类。相应的这个数据集的WordTree有9418个类别。ImageNet是一个很大的数据集，所以我们通过对COCO进行过采样来平衡数据集，使得ImageNet只比COCO数据集大于4倍。<br />
使用这个数据集，我们训练了YOLO9000。由于受到输出大小的限制，我们使用YOLOv2的基础结构但是只有3个先验而不是5个。当我们的网络看到一个检测图像时，我们正常的反向传播loss。对于分类loss，我们只在标签更高等级上反向传播函数。例如，如果标签是“dog”，我们会将任何错误分配给树下面的预测，“德国牧羊犬”和“金毛猎犬”，因为我们没有这些信息。<br />
当它看到分类图像的时候，我们只反向传播分类loss。要做到这点，我们只需要找到这个类最高概率的边框，然后计算预测树上的loss。我们还假定预测框和标签框重叠至少0.3个IOU，并基于此假设反向传播对象性loss。<br />
使用这种联合训练，YOLO9000学习使用COCO中的检测数据来查找图像中的目标，并学习使用ImageNet的数据对这些目标进行分类。<br />
我们在ImageNet检测任务上评估YOLO9000。ImageNet的检测任务与COCO共享44个目标类别，这意味着YOLO9000只能看到大多数测试图像的分类数据，而不是检测数据。YOLO9000在从未见过任何标记的检测数据的情况下，整体上获得了19.7 mAP，在不相交的156个目标类别中获得了16.0 mAP。这个mAP高于DPM算法的结果，但是YOLO9000是在只有部分监督的不同的数据集上训练的。它也同时实时检测9000个其他类别。<br />
当我们分析YOLO9000在ImageNet上的表现的时候，我们发现它很好的学习新的动物种类，但是学习如衣服、装备这种类别的时候比较困难。新动物容易学习是因为目标检测可以从COCO的动物类中得到很好的泛化。相反的，COCO中没有任何衣服的边框标签，只有人的。所以YOLO9000很难对“墨镜”、“泳裤”等类建模。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/YOLO9000-translate-13.png" alt="表 7 在ImageNet上YOLO9000预测最好和最差的类。156个弱监督类中AP值最高和最低的类。YOLO9000学习各种动物模型的效果很好，但在服装或装备等新发类上学习却很吃力。" /></p>
<h1 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h1>
<p>我们介绍了YOLOv2和YOLO9000，两个实时系统。YOLOv2是各种检测数据集上最先进的，比其他检测系统快。此外，它可以运行在各种图像大小，提供速度和准确性之间的平滑折衷。<br />
YOLO9000是一个通过联合优化检测、分类数据集检测超过9000个类的实时检测框架。我们使用WordTree将各种来源的数据和我们联合优化技术组合在一起，并同时在ImageNet和COCO上训练。YOLO9000是缩小检测数据集和分类数据集之间大小差距的重要一步。<br />
我们的许多技术都可以泛化到目标检测之外，我们在ImageNet上的WordTree为图像分类提供了更丰富，详细的输出空间。使用分层分类的数据集组合在分类和分割领域很有用。像多尺度训练这样的训练技术可以为各种视觉任务提供益处。<br />
对于未来的工作，我们希望使用类似的技术来进行弱监督的图像分割。我们还计划在训练期间使用更强大的匹配策略为分类数据分配弱标签，以改善检测结果。计算机视觉受到大量标记数据。我们将继续寻找方法，将不同来源和不同结构的数据整合起来，形成更强大的视觉世界模型。</p>
<h1 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> 引用</h1>
<p>[1] S. Bell, C. L. Zitnick, K. Bala, and R. Girshick. Insideoutside net: Detecting objects in context with skip pooling and recurrent neural networks. arXiv preprint arXiv:1512.04143, 2015. 6<br />
[2] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei. Imagenet: A large-scale hierarchical image database. In Computer Vision and Pattern Recognition, 2009. CVPR 2009. IEEE Conference on, pages 248–255. IEEE, 2009. 1<br />
[3] M. Everingham, L. Van Gool, C. K. Williams, J. Winn, and A. Zisserman. The pascal visual object classes (voc) challenge. International journal of computer vision, 88(2):303–338, 2010. 1<br />
[4] P. F. Felzenszwalb, R. B. Girshick, and D. McAllester. Discriminatively trained deformable part models, release 4. <a href="http://people.cs.uchicago.edu/pff/latent-release4/">http://people.cs.uchicago.edu/pff/latent-release4/</a>. 8<br />
[5] R. B. Girshick. Fast R-CNN. CoRR, abs/1504.08083, 2015.4, 5, 6<br />
[6] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning for image recognition. arXiv preprint arXiv:1512.03385, 2015. 2, 4, 5<br />
[7] S. Ioffe and C. Szegedy. Batch normalization: Accelerating deep network training by reducing internal covariate shift. arXiv preprint arXiv:1502.03167,2015. 2, 5<br />
[8] A. Krizhevsky, I. Sutskever, and G. E. Hinton. Imagenet classification with deep convolutional neural networks. In Advances in neural information processing systems, pages 1097–1105, 2012. 2<br />
[9] M. Lin, Q. Chen, and S. Yan. Network in network. arXiv preprint arXiv:1312.4400, 2013. 5<br />
[10] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ramanan, P. Doll´ar, and C. L. Zitnick. Microsoft coco: Common objects in context. In European Conference on Computer Vision, pages 740–755. Springer, 2014. 1, 6<br />
[11] W. Liu, D. Anguelov, D. Erhan, C. Szegedy, and S. E. Reed. SSD: single shot multibox detector. CoRR, abs/1512.02325, 2015. 4, 5, 6<br />
[12] G. A. Miller, R. Beckwith, C. Fellbaum, D. Gross, and K. J. Miller. Introduction to wordnet: An on-line lexical database. International journal of lexicography, 3(4):235–244, 1990.6<br />
[13] J. Redmon. Darknet: Open source neural networks in c. <a href="http://pjreddie.com/darknet/">http://pjreddie.com/darknet/</a>, 2013–2016. 5<br />
[14] J. Redmon, S. Divvala, R. Girshick, and A. Farhadi. You only look once: Unified, real-time object detection. arXiv preprint arXiv:1506.02640, 2015. 4, 5<br />
[15] S. Ren, K. He, R. Girshick, and J. Sun. Faster r-cnn: Towards real-time object detection with region proposal networks. arXiv preprint arXiv:1506.01497,2015. 2, 3, 4, 5, 6<br />
[16] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh, S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein, A. C. Berg, and L. Fei-Fei. ImageNet Large Scale Visual Recognition Challenge. International Journal of Computer Vision (IJCV), 2015. 2<br />
[17] K. Simonyan and A. Zisserman. Very deep convolutional networks for large-scale image recognition. arXiv preprint arXiv:1409.1556, 2014. 2, 5<br />
[18] C. Szegedy, S. Ioffe, and V. Vanhoucke. Inception-v4, inception-resnet and the impact of residual connections on learning. CoRR, abs/1602.07261, 2016. 2<br />
[19] C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed, D. Anguelov, D. Erhan, V. Vanhoucke, and A. Rabinovich. Going deeper with convolutions. CoRR, abs/1409.4842,2014. 5<br />
[20] B. Thomee, D. A. Shamma, G. Friedland, B. Elizalde, K. Ni, D. Poland, D. Borth, and L.-J. Li. Yfcc100m: The new data in multimedia research. Communications of the ACM, 59(2):64–73, 2016. 1</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>毕业设计</tag>
        <tag>yolo</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业设计（六）基于深度学习算法YOLO的行人车辆检测——论文</title>
    <url>/2021/07/02/YOLO-paper/</url>
    <content><![CDATA[<p>特别特别水的论文，数据集和权重晚点放到仓库里面</p>
<span id="more"></span>
<style>
article p{
    text-indent:2em
}
</style>
<h1 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h1>
<p>行人、车辆检测是自动驾驶中的一项重要技术，对于行人、车辆检测往往需要较高的精确度和实时性。YOLOv5是一种通用的目标检测算法,但将其使用到行人、车辆的目标检测时，由于行人、车辆数据集存在着样本不均衡和小目标过多的问题，YOLOv5算法往往难以达到预计效果。</p>
<p>本文提出了一种基于YOLOv5的改进模型。本文的主要工作如下：</p>
<p>(1) 针对数据集样本不均衡问题采用数据增强对输入的图像进行预处理。</p>
<p>(2) 针对YOLOv5对大目标分类效果不理想问题，对YOLOv5的网络骨架进行调整。</p>
<p>(3) 针对数据集中小目标较多的问题，对YOLOv5的特征融合部分进行调整。</p>
<p>研究结果表明，改进后的模型保持实时性(150 FPS)的情况下，均值平均精确度相比原始YOLOv5模型从原来的62%提升到了64.5%，精确率从74.4%上升到了75.8%，召回率从55.4%上升到56.6%。</p>
<p>相较于原先的模型，改进后的YOLOv5模型在小目标检测上优势明显，能在保持YOLOv5检测实时性的同时，提高其小型行人车辆的检测和分辨效果。</p>
<p><strong>关键词：</strong> YOLOv5；目标检测；行人车辆检测</p>
<h1 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h1>
<p>Pedestrian and vehicle detection is an important technology in automatic driving, which often requires high precision and real-time performance. YOLOV5 is a general object detection algorithm, but when it is applied to pedestrian and vehicle target detection, it is often difficult to achieve the expected results due to the problems of unbalanced samples and too many small targets in pedestrian and vehicle datasets.</p>
<p>This paper proposes an improved model based on YOLOV5. Followings are the main work in this paper:</p>
<p>(1) Data augmentation is used to preprocess the input image for the problem of unbalanced dataset samples.</p>
<p>(2) To solve the problem that YOLOV5’s classification effect on large targets is not ideal, the network skeleton of YOLOV5 is adjusted.</p>
<p>(3) Adjust the feature fusion part of YOLOV5 for the problem that there are many small targets in the data set.</p>
<p>The results show that when the improved model maintains real time (150 FPS), the mean average precision is improved from 62% to 64.5% compared with the original YOLOV5 model, the precision rate is increased from 74.4% to 75.8%, and the recall rate is increased from 55.4% to 56.6%.</p>
<p>Compared with the original model, the improved YOLOV5 model has obvious advantages in small target detection, which can improve the detection and resolution effect of small pedestrians and vehicles while maintaining the real-time detection of YOLOV5.</p>
<p><strong>Key words:</strong> yolov5; object detection; Pedestrian and vehicle detection</p>
<h1 id="绪论"><a class="markdownIt-Anchor" href="#绪论"></a> 绪论</h1>
<p>近年来，国内外大量厂商宣布要制造自动驾驶汽车，而自动驾驶中一项关乎生命安全的重要技术就是行人和车辆检测。本章将首先介绍行人、车辆检测的研究背景和意义，随后介绍目标检测的国内外发展现状，本章最后部分将会讲述全文结构。</p>
<h2 id="研究背景与意义"><a class="markdownIt-Anchor" href="#研究背景与意义"></a> 研究背景与意义</h2>
<p>目标检测(Object Detection)是计算机视觉和图像处理的一项分支技术，其主要任务是在一幅数字图像中正确识别出目标物体的位置并判断类别。如图1.1所示，目标检测算法需要框选出图片中的物体，并判断出框选出的物体是人还是棒球棒。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image1.jpg" alt="图 1.1 目标检测算法实例" /></p>
<p>随着我国人民生活水平的日渐提高，越来越多的家庭拥有机动车，随之而来的便是城市内的交通环境越来越复杂。尽管现在的车辆配备了日渐完善的安全设备和防撞技术，近两年的交通事故的死亡人数依然很高<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>。此外，国内外不少公司也开始陆续推出自动驾驶汽车，如果自动驾驶技术广泛运用车辆系统上，将会避免许多本可以避免的交通事故。</p>
<p>在自动驾驶系统中对行人和车辆的检测极为关键，如果检测速度慢或者检测效果差就容易导致人身安全事故。行人车辆检测难点在于行人在图像中像素较小，难以保持高准确率，同时还难以快速对其进行检测<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>。传统的对行人车辆检测方法往往是使用人工提取特征的目标检测算法，这种方法往往计算量较大且精度较低，无法运用在需要高精度和高实时性要求的自动驾驶领域。得益于近年来GPU加速技术和深度学习技术的发展，使得如今基于深度学习的行人车辆检测能够达到高精度和较好的实时性，有效的改善传统方法的效率低下问题，能够更好的避免交通事故的发生。</p>
<h2 id="国内外研究现状"><a class="markdownIt-Anchor" href="#国内外研究现状"></a> 国内外研究现状</h2>
<p>在过去20多年里，目标检测经历了两个时期，一个是2014年前的传统目标检测探索时期，而另一个是2014年后的基于深度学习的目标检测时期<sup class="footnote-ref"><a href="#fn3" id="fnref3:1">[3:1]</a></sup>。</p>
<h3 id="传统目标检测算法"><a class="markdownIt-Anchor" href="#传统目标检测算法"></a> 传统目标检测算法</h3>
<p>在2014年前，目标检测算法使用的都是传统目标检测算法。传统的目标检测算法大多可以分为以下3步。首先通过滑动窗口等方法穷举可能含有目标物体的图像区域；然后使用方向梯度直方图(Histograms of Oriented Gradients，HOG)<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>和尺度不变特征变换(Scale-invariant feature transform，SIFT)<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup>等特征提取算法对图像区域进行特征提取运算，得到目标的特征；最后将提取到的特征送入支持向量机(Support Vector Machine，SVM)<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup>、adaboost<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup>等分类算法中计算得到分类结果<sup class="footnote-ref"><a href="#fn3" id="fnref3:2">[3:2]</a></sup>。</p>
<p>这些传统目标检测方法通常都是需要手工设计特征提取，而且要求调试者有熟练的调试经验，相比于后面出现的基于深度学习的目标检测算法，传统算法特征提取相对复杂，且检测的准确率不如后者。尽管如此，传统目标检测算法中的滑动窗口、困难样本挖掘和边界框回归等思想依然影响了后续的目标检测算法<sup class="footnote-ref"><a href="#fn3" id="fnref3:3">[3:3]</a></sup>。</p>
<h3 id="基于深度学习的目标检测算法"><a class="markdownIt-Anchor" href="#基于深度学习的目标检测算法"></a> 基于深度学习的目标检测算法</h3>
<p>在2012年的ImageNet竞赛上，Hinton等人使用基于卷积神经网络(convolutional neural network，CNN)结构的AlexNet<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup>获得了冠军，其错误率比第二名低了10.8%，分类效果远超第二名。这使得学者们重新对卷积神经网络产生了兴趣，并考虑将卷积神经网络的分类结果运用到目标检测上面。</p>
<p>在2014年Ross Girshick 提出的R-CNN(Regions with CNN features)<sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup>是第一个基于卷积神经网络的目标检测算法。其将传统算法中的人工提取特征部分换成了使用CNN提取，提高了检测精度。由于R-CNN中传统候选框搜索算法穷举候选区域较慢，Girshick等人随后便提出了Fast R-CNN<sup class="footnote-ref"><a href="#fn10" id="fnref10">[10]</a></sup>和Faster R-CNN<sup class="footnote-ref"><a href="#fn11" id="fnref11">[11]</a></sup>。在Faster R-CNN<sup class="footnote-ref"><a href="#fn11" id="fnref11:1">[11:1]</a></sup>中使用候选区域生成网络(Region Proposal Network，RPN)替代了原先的选择性搜索算法，再使用卷积神经网络对生成的候选框中的物体进行分类识别。</p>
<p>这类算法因为将目标检测分为候选框提取和目标分类两个模块，因此也被称为two-stage算法，其代表的网络有R-CNN系列、SPP Net和Pyramid Network等。two-stage方法虽然精度较高，但是检测速度比较慢。以Faster R-CNN为例，虽然其能够在PASCAL VOC 2012上取得70.4%的均值平均精确度，但是其在GPU上推理速度为5 FPS<sup class="footnote-ref"><a href="#fn11" id="fnref11:2">[11:2]</a></sup>。除了two-stage算法，还有一些算法将候选框坐标回归和分类和为一步预测，这种算法也被称为one-stage算法。</p>
<p>在2016年，Redmon提出的YOLO(You Only Look Once)<sup class="footnote-ref"><a href="#fn12" id="fnref12">[12]</a></sup>算法是第一种one-stage算法。其特点是将只是用一个网络完成目标检测，在保证检测精度的同时运算速度非常快，在PASCAL VOC 2012检测任务上YOLO的FPS达到45 FPS，而且均值平均精确度达到63.4%，精度略微低于Faster R-CNN<sup class="footnote-ref"><a href="#fn12" id="fnref12:1">[12:1]</a></sup>。其主要思想是将图像分为多个网格，每个网格预测含有边界框坐标信息、置信度和每个类别的条件概率的向量，将目标检测问题转换为回归问题。在2017年，Redmon提出了YOLOv2<sup class="footnote-ref"><a href="#fn13" id="fnref13">[13]</a></sup>网络，将Faster R-CNN中的先验锚框机制和网中网(Network in Network，NIN)<sup class="footnote-ref"><a href="#fn14" id="fnref14">[14]</a></sup>中的全局平局池化等结构加入YOLOv1网络。使其不再直接预测目标坐标而是预测目标与锚框之间的偏差，降低了训练难度，提高了网络的召回率。在2018年提出的YOLOv3<sup class="footnote-ref"><a href="#fn15" id="fnref15">[15]</a></sup>中加入了特征金字塔和残差块结构，增加了对小目标的检测效果。在YOLOv3发布后，YOLO系列一代到三代的原作者Redmon宣布因为无法忽视自己研究带来的负面影响，决定退出计算机视觉领域。幸运的是，在2020年YOLO社区的参与者Alexey Bochkovskiy接手了YOLO项目并发表了YOLOv4<sup class="footnote-ref"><a href="#fn16" id="fnref16">[16]</a></sup>。在YOLOv4中作者引入了大量训练技巧和结构改进，如CSP结构、CIoU loss、Mish激活函数等等，极大的提升了网络的性能。YOLOv4诞生后不久，Ultralytics公司发布了自己的YOLO版本并命名为YOLOv5。该版本在社区中有一定的争议，在本文中不会对此进行讨论。YOLOv5相较YOLOv4而言还是有少许改进，其新增了马赛克数据增加、Focus模块、自动锚框计算等。YOLOv5保证了模型精度的同时，运算速度更快，模型权重的大小相对于YOLOv4而言更小。</p>
<h3 id="研究现状小结"><a class="markdownIt-Anchor" href="#研究现状小结"></a> 研究现状小结</h3>
<p>根据上述目标检测算法的分析，可以根据使用的方法将目标检测算法大致划分为3类，结果如图1.2所示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image2.png" alt="图 1.2 目标检测算法总结" /></p>
<h2 id="本文研究内容和组织结构"><a class="markdownIt-Anchor" href="#本文研究内容和组织结构"></a> 本文研究内容和组织结构</h2>
<p>如前文所述，传统方法的精度较差，而R-CNN系列算法虽然有较高精度，但是速度无法满足要求。因此本文将使用YOLOv5算法对行人和车辆数据集进行训练，得到行人车辆检测模型。该模型可以对行人(person)、自行车(bike)、机动车(car)、摩托车(motor)、公交车(bus)和卡车(truck)共六个类别进行检测。</p>
<p>同时针对数据集和模型分析，对YOLOv5的模型提出了改进思路，并对改进思路进行实验，以均值平均精确度为指标评价网络的改进结果。具体改进内容如下：</p>
<p>(1)、基于对YOLOv5网络的理解和实际结果，对YOLOv5的骨架提出改进思路</p>
<p>(2)、基于上述对YOLOv5的理解，对YOLOv5的颈部部分的路径聚合网络提出了改进思路。</p>
<p>本文各章节具体内容安排如下：</p>
<p>第一章 绪论。介绍了行人车辆检测的研究背景和重要性，引出了目标检测的发展。简要的介绍了传统方法和基于深度学习的方法。</p>
<p>第二章 YOLO算法原理简介。主要介绍了卷积神经网络的相关基础知识、YOLOv5网络的结构和算法流程以及对算法的评判指标。</p>
<p>第三章 YOLO算法分析及改进。对行人车辆检测数据集和YOLOv5模型的分析。并针对数据集的特点和YOLOv5在该数据集上的缺陷提出改进措施。</p>
<p>第四章 实验分析。这一部分主要讲述了本次实验的运行结果以及针对行人车辆数据集的改进方案和原本YOLOv5之间的检测效果对比。</p>
<p>第五章 总结与展望。总结了YOLOv5改进模型的优缺点，阐述未来的改进方向。</p>
<h1 id="yolo算法原理"><a class="markdownIt-Anchor" href="#yolo算法原理"></a> YOLO算法原理</h1>
<p>YOLO是一种卷积神经网络，相较于传统神经网络，卷积神经网络能够更好的提取特征，同时还能减少模型参数。本章首先介绍了卷积神经网络的组成部分和原理。然后对YOLOv5网络结构进行分析，并介绍了其检测流程。最后介绍了模型的评价指标。</p>
<h2 id="卷积神经网络概述"><a class="markdownIt-Anchor" href="#卷积神经网络概述"></a> 卷积神经网络概述</h2>
<p>传统全连接神经网络虽然在一些任务上有很好的表现，但是其使用的全连接层会导致参数过大，在图像处理上这项缺点极为明显。以本文后续使用的模型为例，输入的图像尺寸会缩放到640×640×3，如果将其作为全连接神经网络的输入，仅仅输入层中的一个神经元的权重就有640×640×3=1228800个，以float形式保存就有约4.9 MB的大小，这显然是一项巨大的开销。以VGG网络的输入3通道输出96通道，卷积核大小为3×3的卷积层为例，其权重个数为3×3×3×96=2592个，明显少于全连接网络。得益于卷积计算的权重共享和局部感受野的特点，卷积神经网络参数的数量远少于传统全连接网络。</p>
<p>1962年生物学家HuBel和Wiesel基于对猫的视觉皮层神经元的研究提出了感受野的概念<sup class="footnote-ref"><a href="#fn17" id="fnref17">[17]</a></sup>。1980年日本学者Fukushima基于HuBel的研究提出了卷积层、池化层结构<sup class="footnote-ref"><a href="#fn18" id="fnref18">[18]</a></sup>。随后在1998年LeCun基于前人的研究设计了第一个卷积神经网络LeNet-5并运用在了识别支票上的手写数字<sup class="footnote-ref"><a href="#fn19" id="fnref19">[19]</a></sup>。但是受限于当年有限的计算机资源和SVM算法的兴起，卷积神经网络慢慢淡出了人们的视野。直到2012年的ImageNet比赛上AlexNet<sup class="footnote-ref"><a href="#fn8" id="fnref8:1">[8:1]</a></sup>的以极大的优势击败了其他传统算法，卷积神经网络才重新活跃在人们的眼前。</p>
<p>卷积神经网络通常由输入层、卷积层、激活函数、池化层、全连接层和输出层构成<sup class="footnote-ref"><a href="#fn20" id="fnref20">[20]</a></sup>。这几个部分会在后续小节中进行讲解。</p>
<h3 id="卷积层"><a class="markdownIt-Anchor" href="#卷积层"></a> 卷积层</h3>
<p>卷积层的名字来源于数字信号处理中的卷积操作，二维卷积的公式如式2.1所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>h</mi><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mi>i</mi><mi mathvariant="normal">∞</mi></munderover><munderover><mo>∑</mo><mi>j</mi><mi mathvariant="normal">∞</mi></munderover><mi>x</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mi>h</mi><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mi>i</mi><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">y(m,n)=x(m,n)*h(m,n)=\sum_{i}^{\infty}\sum_{j}^{\infty}x(i,j)h(m-i,n-j) \tag{2.1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>卷积层是卷积神经网络中的基础模块，主要的功能就是对输入进行特征提取。卷积层是由多个特征图组成的，与全连接不同的是，特征图中的每一个神经元通过卷积核上一层是局部连接的。卷积核就是一个大小为<em>N</em>的权值方阵，其权值在训练过程中自行学习，为了确保卷积核有一个中心点，同时方便对特征图进行填充，<em>N</em>通常取奇数。卷积操作就是使用一个滑动窗口以一定步长在图像上滑动，并对窗口内的特征进行加权求和操作，从而得到一个新的输出。一般认为CNN结构中越接近输出的卷积层输出的是一些更为抽象的高级特征，因此能比人为设计的滤波器有更好的提取特征能力。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image3.png" alt="图 2.1 卷积的操作过程" /></p>
<p>图2.1为卷积核的运算过程，<em>Input</em>表示输入的特征图，数字为像素点的值，其中黄色的部分表示卷积核的关注区域。图中的<em>kernel</em>表示了一个尺寸为3×3的卷积核，其中绿色部分表示卷积核的权重。图中右侧的<em>output</em>表示经过卷积运算后的输出，其黄色区域表示的就是卷积的运算结构。图2.1中的卷积的输出如式2.2所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>o</mi><mi>u</mi><mi>t</mi><mi>p</mi><mi>u</mi><mi>t</mi><mo>=</mo><mn>2</mn><mo>∗</mo><mo>−</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo>∗</mo><mn>0</mn><mo>+</mo><mn>0</mn><mo>∗</mo><mn>1</mn><mo>+</mo><mn>9</mn><mo>∗</mo><mo>−</mo><mn>1</mn><mo>+</mo><mn>5</mn><mo>∗</mo><mn>0</mn><mo>+</mo><mn>4</mn><mo>∗</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>∗</mo><mo>−</mo><mn>1</mn><mo>+</mo><mn>3</mn><mo>∗</mo><mn>0</mn><mo>+</mo><mn>4</mn><mo>∗</mo><mn>1</mn><mo>=</mo><mo>−</mo><mn>5</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">output = 2*-1+1*0+0*1+9*-1+5*0+4*1+2*-1+3*0+4*1=-5 \tag{2.2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mord mathdefault">p</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">5</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>特征图在通过卷积操作后，输出的尺寸与输入不匹配，如果需要两者匹配，则需要对输入特征图的周围填充零。经过卷积操作后的输入和输出的长宽关系如式2.3所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msup><mi>w</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mfrac><mrow><mi>w</mi><mo>−</mo><mi>n</mi><mo>+</mo><mn>2</mn><mi>p</mi></mrow><mi>s</mi></mfrac><mo>+</mo><mn>1</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">w&#x27;=\frac{w-n+2p}{s}+1 \tag{2.3}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">s</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord mathdefault">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="tag"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>w</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">w&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>为输出特征图的宽度，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>为输入特征图的宽度，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>为卷积核的尺寸，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>为填充<em>padding</em>即对输入进行零填充的大小，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>为卷积窗口滑动的步长。</p>
<p>神经网络中使用了卷积层的优点如下</p>
<p>(1)、减少网络参数。卷积核在对一个输入的不同区域进行卷积运算的时候，卷积核内参数是固定的。因此可以看作是共享了权重和偏置，从而减少了网络的参数量。</p>
<p>(2)、更强的抽象能力。相较于人工设计的卷积滤波器，基于深度学习的卷积滤波器可以在训练中自己学习权重，能够提取到更抽象的特征。</p>
<h3 id="激活函数"><a class="markdownIt-Anchor" href="#激活函数"></a> 激活函数</h3>
<p>卷积层，池化层和全连接层都可以看作是对输入的线性加权求和。当多个卷积层、池化层、全连接层连接时，都可以将其视为对输入的线性组合，这样无论网络有多深，都与单层线性组合没有区别。因此网络中需要加入非线性的激活函数，避免网络只是单纯的线性组合。目前常见的激活函数有sigmoid、ReLU、Mish等，下文将对这几种激活函数进行介绍<sup class="footnote-ref"><a href="#fn20" id="fnref20:1">[20:1]</a></sup>。</p>
<p>(1)、sigmoid，其公式如式2.4所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.4)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f(x)=\frac{1}{1+e^{-x}} \tag{2.4}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">4</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>sigmoid的优点是可以将输出转换为0到1之间的实数，缺点是输出的均值不为0，使得网络收敛速度慢，特定情况下还会有梯度消失和梯度爆炸的问题。</p>
<p>(2)、tanh，其公式如式2.5所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.5)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f(x)=\frac{e^x-e^{-x}}{e^x+e^{-x}} \tag{2.5}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.217661em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.448331em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.590392em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.217661em;vertical-align:-0.7693300000000001em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">5</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>tanh的优点是解决了sigmoid的输出均值偏移的问题，然而存在梯度消失问题<sup class="footnote-ref"><a href="#fn21" id="fnref21">[21]</a></sup>。</p>
<p>(3)、ReLU，其公式如式2.6所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.6)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f(x)=max(0,x) \tag{2.6}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">6</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>ReLU的优点是正区间内解决了梯度消失问题。但是输出的均值依然不为0。此外ReLU激活函数还存在死区，即当输入在负区间时，神经元输出为0，导致反向传播时上一层的神经元权重参数无法更新<sup class="footnote-ref"><a href="#fn21" id="fnref21:1">[21:1]</a></sup>。</p>
<p>(4)、Leaky ReLU，其公式如式2.7所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>a</mi><mi>x</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.7)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f(x)=max(ax,x) \tag{2.7}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">7</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>式中a可以根据实际数据调整，通常情况下a取0.01。Leaky ReLU的优点是负区间内仍然有少量的输出，使得输入在负区间内时，上一层的神经元权重依然可以更新。</p>
<p>(5)、Mish：其公式如式2.8所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>∗</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msup><mi>e</mi><mi>x</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.8)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f(x)=x*tanh(ln(1+e^x)) \tag{2.8}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">8</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>Mish是新提出的激活函数，Mish优点是比较平滑有较好的泛化能力和总结能力，缺点是计算相对ReLU较为复杂。</p>
<h3 id="池化层"><a class="markdownIt-Anchor" href="#池化层"></a> 池化层</h3>
<p>池化层也被称为下采样层，通常跟在卷积层后面，主要功能是降维。卷积输出的特征图中相邻像素是几乎一样的，只有在目标的边缘部分像素变化明显，如果可以去除这些冗余部分，就可以明显的减少网络参数量。池化层的作用就是降低输出特征图的维度从而达到减少网络参数，同时还能够保留特征图中最重要的信息。池化按照计算方式大致可以分为最大池化和均值池化。池化的计算方法与卷积的计算方法比较相似。以最大池化为例，池化层会使用一个滑动窗口以一定步长在特征图上滑动，并对每个窗口中的像素求最大值作为输出。与卷积不同的是，池化层不包含任何参数，因此不会影响模型大小。</p>
<p>图2.2表示了一个最大池化的操作过程，我们定义了一个窗口大小为2×2，步长为2的最大池化层，同时在左侧定义最大池化层的输入，黄色、蓝色、红色和绿色部分表示的是池化窗口覆盖的区域，右侧为最大池化层的输出，不同颜色区域代表不同窗口的输出，可以看到最大池化层选择了不同窗口的最大像素值。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image4.png" alt="图 2.2 最大池化层的操作过程" /></p>
<p>神经网络中使用池化层的优点有：</p>
<p>(1)、去除特征图中的冗余信息，保留其中关键信息，减少网络的参数和计算量。</p>
<p>(2)、增加网络的鲁棒性，当相邻像素发生微小的改变的时候并不影响网络的最终输出。</p>
<h3 id="全连接层"><a class="markdownIt-Anchor" href="#全连接层"></a> 全连接层</h3>
<p>在卷积神经网络结构的最后部分，通常连接着一个或者多个全连接层以达到一个&quot;分类器&quot;的效果。全连接层的结构与传统的多层感知器类似，每一个神经元都与上一层的所有神经元连接，因此也可以看作是对卷积层提取到的局部信息进行整合。为了增强全连接层的拟合能力，通常会在每个神经元后面都会添加一个非线性的激活函数，避免网络只是单纯的线性拟合<sup class="footnote-ref"><a href="#fn20" id="fnref20:2">[20:2]</a></sup>。</p>
<p>虽然全连接层有着很好的拟合效果，但是在神经网络训练时期，全连接层容易产生过拟合问题，即训练完成的模型无法在其他的场合下泛用化。为了解决这一问题通常需要在训练时期加上dropout层，使其在训练时随机隐藏一些神经元节点，从而达到防止过拟合的效果。此外全连接层因为每个神经元都要与前后两层的神经元完全连接，因此需要的参数较多，也是导致模型大的原因之一。在NIN中为了解决这一问题，提出了全局平均池化层来替代全连接层，即对最后一个卷积层输出的每一个特征图求平均值，得到的向量就是输出，因为池化层没有参数需要优化，所以大大的减少了网络的参数，同时也避免了全连接层容易出现模型过拟合的问题<sup class="footnote-ref"><a href="#fn14" id="fnref14:1">[14:1]</a></sup>。</p>
<h2 id="yolo网络概述"><a class="markdownIt-Anchor" href="#yolo网络概述"></a> YOLO网络概述</h2>
<p>以R-CNN系列算法为代表的two-stage算法将目标检测分多个步骤来实现，先是寻找出可能含有物体的候选框，然后再对候选框进行坐标回归和目标分类。two-stage算法的每个步骤中所使用的模块都需要单独训练，而且寻找可能含有物体的候选框一步因为需要大量寻找而耗费了大量时间。因此，虽然R-CNN系列算法的精度很高，但是其检测速度很慢。YOLO系列算法则是采取了端到端的思路，直接将候选框预测和分类合在一步完成，将目标检测问题转化成了回归问题，这样做虽然使得检测结果的均值平均精确度略微有所下降，但是检测速度有了很大的提升。</p>
<h3 id="yolov5网络结构"><a class="markdownIt-Anchor" href="#yolov5网络结构"></a> YOLOv5网络结构</h3>
<p>图2.3为YOLOv5s模型的网络结构，图中左上角的红绿蓝三色方块代表图像输入，在YOLOv5中图像的输入大小为固定的640×640×3。左侧第一列为YOLOv5网络的骨架，其主要作用是对图像进行特征提取，最右侧的三个红色模块为YOLO的输出部分，也被称为YOLO算法的头，其主要作用是计算网络的输出。中间的两列是近几年来目标检测算法添加在网络骨架和头之间的颈部部分，其作用是将不同尺度的特征进行融合，通常由特征金字塔或者路径聚合网络(Path Aggregation Network，PAN)组成，在YOLOv5中使用的是路径聚合网络，即在原本自下向上的特征金字塔上再加上一层自上向下的特征融合路径<sup class="footnote-ref"><a href="#fn22" id="fnref22">[22]</a></sup>。在图中，640×640×3表示输入图片长宽为640×640的RGB彩图。四个参数的模块如Focus、CBL、YOLO中，各个参数分别代了输入通道数、输出通道数、内核大小和步长。含有双参数的模块如C3，各个参数分别代表了输入通道数和输出通道数。单个参数的模块如SPP、Concat、Upsample等，其参数则代表了输出的通道数。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image5.png" alt="图 2.3 YOLOv5s模型结构" /></p>
<p>图2.3中的粉色模块为YOLOv5中的卷积层基本单元CBL，其结构如图2.4所示。C指代的是卷积层，其计算如上一节所述。B代表批次归一化(Batch Normalization，BN)，其作用是将一个批次内的卷积层的输出归一化到均值为零，方差为一的范围内，将网络正则化，这使得网络能够避免过拟合，同时还能帮助网络更快的达到效果最好的点，减少网络训练时间。L代表Leaky ReLU激活函数，作用是引入非线性函数，以增强网络的表征能力。在YOLOv5网络中单独使用CBL模块主要是为了完成对网络的下采样操作。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image6.png" alt="图 2.4 CBL模块结构" /></p>
<p>图2.3中的浅绿色的模块为Focus模块，其结构如图2.5所示。Focus层的做法是将输入的图片每隔一个像素取一个值，做到将输入图片切片成四份，然后在通道维度上将四张图拼接起来。这等价于在没有任何信息损失的情况下对图像下采样处理，同时减少了网络的参数量。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image7.png" alt="图 2.5 Focus模块结构" /></p>
<p>图2.3中淡蓝色模块为C3模块，其结构如图2.6所示。其中红色的残差单元(Res Unit)结构如图2.7所示。残差块结构是在残差网络中提出的，其结构就是将网络的输入添加到网络的输出部分，解决了传统卷积神经网络随着网络深度的增加网络能力退化的问题，此外使用残差结构也有助于解决深层神经网络中的梯度消失和梯度爆炸等问题。在图2.3中，C3中的参数(128，128)×3，其表示的意思是C3结构的输入通道数为128，输出通道数为128，C3模块中含有3个残差单元，而(64，64)代表输入和输出模块的通道的个数都为64，C3模块中只有1个残差单元。C3模块是YOLOv5对于跨阶级局部连接(Cross-stage partial connections，CSP)结构的一种改进，CSP模块将输入的特征图分为两部分计算，使得梯度能够通过不同的路径传播，从而获得更多的梯度组合。此外，因为CSP结构中只有一半的特征图进入了残差单元进行计算，所以网络的计算量明显减少。C3模块比YOLOv4中的CSP模块少了一个卷积层，使其计算量更小。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image8.png" alt="图 2.6 C3模块结构" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image9.png" alt="图 2.7 残差块结构" /></p>
<p>图2.3中的深绿色模块为空间金字塔池化层(Spatial Pyramid Pooling，SPP)。其结构如图2.8所示，其中绿色的为最大池化层。SPP层使用不同尺寸和步长最大池化的层，将图像进行压缩，并拼接通道数，提高了网络的感受野。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image10.png" alt="图 2.8 SPP结构" /></p>
<p>图2.3中深蓝色模块为upsample层，上采样使得特征图的维度得以增加。在YOLOv5中上采样使用相邻值填充的方法使特征图的维度放大一倍，使其能够与需要拼接的特征图在维度上匹配。图2.3中的橙色模块为concat层，在YOLOv5其作用是将特征图按照通道数拼接起来，因此需要其输入的特征图的维度要一致。图2.3中的红色模块为YOLO层，其作用是负责对输入的特征图进行预测。在YOLOv5中一共由三张特征图负责输出预测结果，其中大尺度特征图的尺寸为80×80，主要用于预测小目标。中等尺度的特征图尺寸为40×40，主要用于预测中等目标。小尺度特征图尺寸20×20，主要用于预测大目标。</p>
<h3 id="yolo检测流程"><a class="markdownIt-Anchor" href="#yolo检测流程"></a> YOLO检测流程</h3>
<p>YOLO算法在事先就对数据集标签中的所有边界框进行k-means聚类运算，获取聚类的质心作为锚框(anchor)。其核心思想是将图像划分成S×S个网格，反映到实际中就是输出特征图的大小。每个网格负责预测中心落在其中的物体。每个网格预测B个边界框，每个边界框包含了目标相对于网格中心坐标的偏差以及边界框和锚框长宽之间的偏差和边界框的置信度。置信度的计算公式如式2.8所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>i</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi><mo>=</mo><msub><mi>P</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>O</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>I</mi><mi>o</mi><msubsup><mi>U</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi></mrow><mrow><mi>t</mi><mi>r</mi><mi>u</mi><mi>t</mi><mi>h</mi></mrow></msubsup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.8)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">confidence=P_r(Object)*IoU_{pred}^{truth} \tag{2.8}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.282216em;vertical-align:-0.383108em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.899108em;"><span style="top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">d</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:1.282216em;vertical-align:-0.383108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">8</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>其反应了边界框含有物体的概率以及其和真实值之间的重合程度。此外每个边界框还附带了以one-hot形式编码的该物体属于C个类别的条件概率。因此YOLO最后输出的张量形状如式2.9所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>f</mi><mi>i</mi><mi>l</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>s</mi><mo>=</mo><mi>S</mi><mo>×</mo><mi>S</mi><mo>×</mo><mo stretchy="false">(</mo><mi>B</mi><mo>∗</mo><mn>5</mn><mo>+</mo><mi>C</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.9)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">filters=S\times S\times (B*5+C) \tag{2.9}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">9</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>以MS COCO数据集的80个类目标检测为例，图2.3中YOLO层输出通道数为255表示：在YOLOv5中B为3个边界框，C为80个类别。因此代入式2.9可以得到255=3×(5+80)。</p>
<p>在YOLOv5模型中为了解决其对小目标的检测性能不佳，便借鉴了特征金字塔结构和路径聚合网络结构，将不同尺度的特征进行融合。相较于YOLO的以往版本只使用一个特征图进行预测，YOLOv5中使用了大中小三个特征图分辨预测小中大尺度的目标，极大的提升了小目标检测性能。</p>
<p>由于YOLOv5输出的坐标部分是关于锚框的偏移量，因此需要对这部分数据进行解码。计算过程如图2.9所示。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">c_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">c_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>指网格的中心坐标，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">p_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">p_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别指锚框的长宽，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">t_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>表示预测相对网格中心的偏差，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">t_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">t_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别表示预测相对于锚框的偏差。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span>指<em>sigmoid</em>函数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">b_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">b_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">b_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">b_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是指实际预测框的中心坐标和长宽。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image11.png" alt="图 2.9 锚框解码" /></p>
<p>YOLO算法的预测结果会有多个冗余的检测框，为此YOLOv5使用非极大值抑制(Non-Maximum Suppression，NMS)选择与实际目标最接近的边接框并去除与其冗余的框。其计算过程如下</p>
<p>(1)、根据置信度对边界框进行排序，并设置一个IoU阈值和NMS阈值。</p>
<p>(2)、删除所有置信度小于NMS阈值的框，置信度越低代表检测错误的可能性越大。</p>
<p>(3)、取置信度最高的预测框，并删除与该预测框的IoU大于阈值的预测框。IoU越大就表明重叠部分越多，在图像中就重叠度较高的预测框可能预测的是同一个物体，所以要删去多余的框。</p>
<p>(4)、对剩下未处理的框重复上述操作，直到所有框都被处理。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image12.png" alt="图 2.10 YOLO算法的检测流程" /></p>
<p>YOLO算法的整体检测流程如图2.10所示。图片输入后先预测出偏差，再对锚框进行解码，最后进行NMS处理。其结果就是最后的检测结果。</p>
<h2 id="评判指标概述"><a class="markdownIt-Anchor" href="#评判指标概述"></a> 评判指标概述</h2>
<p>评价一个模型检测效果的好坏往往需要使用同一种评价指标。在目标检测算法中，通常使用以下指标：</p>
<p>交并集(Intersection over Union，IoU)。其计算结果如图2.11所示，即预测边界框和实际边界框之间的交集面积和并集面积之比。是一种衡量预测框和标签框重合程度的指标，越接近1代表预测结果越好。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image13.png" alt="图 2.11 IoU计算过程" /></p>
<p>混淆矩阵。计算如表2.1所示。其为评估模型性能的一项重要指标，也是后续多项衍生指标的基础。</p>
<table style="text-align: center;">
    <caption>表2.1神经网络混淆矩阵</caption>
    <tr>
        <td colspan="2" rowspan="2"></td>
        <td colspan="2">预测值</td>
    </tr>
    <tr>
        <td>Positive</td>
        <td>Negative</td>
    </tr>
    <tr>
        <td rowspan="2">真实</td>
        <td>Positive</td>
        <td>TP(True Positive)</td>
        <td>FN(False Negative)</td>  
    </tr>
    <tr>
        <td>Negative</td>
        <td>FP(False Positive)</td>
        <td>TN(True Negative)</td>
    </tr>
</table>
<p>精确率(Precision)。其计算公式如式2.10所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.10)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">Precision=\frac{TP}{TP+FP} \tag{2.10}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">1</span><span class="mord">0</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>对于目标检测算法来说，通常使用一个置信度阈值来判断TP和FP。如果置信度大于阈值就是TP否则就是FP。其表示在所有正样本中被预测正确的比例。</p>
<p>召回率(Recall)。其计算公式如式2.11所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.11)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">Recall=\frac{TP}{TP+FN}  \tag{2.11}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">1</span><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>对于目标检测算法来说，FN就是模型没有检测到的标签。其表示在所有分类正确的样本中正样本的比例。</p>
<p>平均精确度(Average Precision，AP)。通常来说我们希望检测结果的精确率和召回率都越高越好，然而两者往往是以相反方向变化的。为了更好的描述算法检测效果，PASCAL VOC比赛方提出了一个新的指标AP<sup class="footnote-ref"><a href="#fn3" id="fnref3:4">[3:4]</a></sup>。AP的计算过程如下，通过设置不同的置信度阈值，我们可以得到不同的精确度和召回率，最后可以绘制成一条横坐标为召回率，纵坐标为精确率的P-R曲线。曲线与坐标轴之间的面积就是AP。AP的计算公式如式2.12所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>A</mi><mi>P</mi><mo>=</mo><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mi>p</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mi>d</mi><mi>r</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.12)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">AP=\int_{0}^{1}p(r)dr \tag{2.12}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4759580000000003em;vertical-align:-0.9119499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5640080000000003em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span><span class="tag"><span class="strut" style="height:2.4759580000000003em;vertical-align:-0.9119499999999999em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">1</span><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mrow><mo fence="true">(</mo><mi>r</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">p\left( r \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>为召回率r所对应的精确度。由于AP能够很好的描述检测效果，因此在目标检测领域中被广泛使用。</p>
<p>均值平均精确度(mean Average Precision，mAP)。AP是针对某一个特定的类别所计算的，mAP就是将每个类别的AP求和后取一波平均值。mAP的计算公式如2.13所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>m</mi><mi>A</mi><mi>P</mi><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mi>i</mi><mi>N</mi></munderover><mi>A</mi><msub><mi>P</mi><mi>i</mi></msub></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2.13)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">mAP=\frac{1}{N}\sum_{i}^{N}AP_i \tag{2.13}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span><span class="mord">.</span><span class="mord">1</span><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>式中<em>N</em>为检测类别的个数。mAP还可以根据单独的IoU来计算，通常情况下选择IoU为50%或者75%，记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>A</mi><msub><mi>P</mi><mn>50</mn></msub></mrow><annotation encoding="application/x-tex">mAP_{50}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>A</mi><msub><mi>P</mi><mn>75</mn></msub></mrow><annotation encoding="application/x-tex">mAP_{75}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>A</mi><msub><mi>P</mi><mn>50</mn></msub></mrow><annotation encoding="application/x-tex">mAP_{50}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是指只考虑IoU分数大于0.5的样本的均值平均精确度。</p>
<h2 id="本章小结"><a class="markdownIt-Anchor" href="#本章小结"></a> 本章小结</h2>
<p>本章首先主要讲述了卷积神经网络的主要组成部分的原理和优点。介绍几种常见的激活函数的优点以及各自所存在的问题，还介绍了全连接网络的优缺点以及常见的改进措施。本章随后还重点介绍了YOLOv5网络的结构与检测流程，并对其中的每一个模块都进行了详细讲解。本章最后介绍了目标检测算法的相关评价指标，作为后文YOLOv5改进前后模型的对比指标。</p>
<h1 id="yolo算法分析及改进"><a class="markdownIt-Anchor" href="#yolo算法分析及改进"></a> YOLO算法分析及改进</h1>
<p>虽然YOLO是一种检测效果较好的通用算法，但是其对于特定数据集需要做一定的调整。本章首先对数据集和YOLOv5模型进行分析，随后针对其中的问题提出几项改进措施。</p>
<h2 id="数据集分析"><a class="markdownIt-Anchor" href="#数据集分析"></a> 数据集分析</h2>
<p>在正式开始神经网络训练之前，首先需要对数据集进行探索性分析，观察数据集中数据的特点。对数据集有充分的认识之后，才能确定后续对模型的改进方向。</p>
<p>本次行人车辆检测数据集由MS COCO大型目标检测数据集和BDD100K自动驾驶数据集中各自提取的一部分包含行人和车辆的数据集合并而成。COCO和BDD100K数据集的标签格式如图3.1和图3.2所示。COCO标签集边界框为左上角坐标和长宽，BDD100K则为边框的左上角和右下角坐标。因此需要训练之前需要将其转化为YOLO的中心坐标、长宽的格式</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image14.png" alt="图 3.1 COCO标签格式" /></p>
<p>合并后数据集一共有17524张图片用于训练，2262张图片用于验证。其中检测的类别含有行人、机动车、自行车、摩托车、公交车和卡车六类。每个类别的实例数量如图3.3所示。其中行人类共有51651个，自行车类共有5835个，普通机动车90234个，摩托类6108个，公交车类4957个，卡车类7999个。可以明显发现机动车和行人两类实例较多，而其他类型的车实例较少，明显存在检测样本不均衡的问题，对此有一种改进方法就是在训练之前对其做数据增强处理。此外经过统计，数据集中一共有166784个检测实例，如果将输入图像缩放到640×640的大小计算，标签像素长宽小于8的16560个，而标签像素长宽小于4的有1200个，小目标占比约为9.92%。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image15.png" alt="图 3.2 BDD100k标签格式" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image16.png" alt="图 3.3 数据集实例分布" /></p>
<h2 id="对yolov5模型的分析"><a class="markdownIt-Anchor" href="#对yolov5模型的分析"></a> 对YOLOv5模型的分析</h2>
<p>YOLOv5使用路径聚合网络和改进的网络骨架后，相较于以往版本对于小物体的检测效果有了较大的提升，但是YOLOv5对于大尺寸的物体检测性能并不理想，算法难以区分卡车和公交车两类，这可能是因为算法提取的特征不够，难以根据现有特征来区分卡车和公交车。</p>
<p>YOLOv5模型在检测一些密集小物体时，存在定位不精确的问题，即出现一些定位上的失误，还会出现将背景错误的判别为物体或者多个物体被判别成一个物体的问题。</p>
<h2 id="对yolov5模型的改进方案"><a class="markdownIt-Anchor" href="#对yolov5模型的改进方案"></a> 对YOLOv5模型的改进方案</h2>
<h3 id="数据增强"><a class="markdownIt-Anchor" href="#数据增强"></a> 数据增强</h3>
<p>针对图3.1中的数据不均衡问题，有两个种改进方法，一是在训练的损失函数中加入一些高级损失函数如Focal loss，另外一种是在训练时期对训练数据使用数据增强。因为修改损失函数较为复杂，因此本文选用使用数据增强的方法。数据增强是指在图片送入网络前的预处理阶段，通过对输入图片进行一些微小的改变操作如随机擦除、调整饱和度等，使得神经网络认为这是一张全新的图片达到增加数据量的效果。在本次实验中将使用马赛克数据增强，其原理是将四张图片随机缩放、翻转、调整色域、随机分布然后拼接起来。这样做不仅可以增大目标检测的数据量，还能够丰富数据集中检测目标的背景，减少背景被误判为检测目标的概率。</p>
<h3 id="针对网络结构改进"><a class="markdownIt-Anchor" href="#针对网络结构改进"></a> 针对网络结构改进</h3>
<p>YOLOv5对于物体分类以及对大尺寸物体检测性能不理想，可能是因为YOLOv5对于目标的特征提取的不够。对此有一条改进思路，就是对YOLOv5的骨架进行改进，再用一层卷积进行下采样，让卷积层能够提取到更多的特征。这样做的缺点是网络的参数变多，网络的运算速度会有所下降。但是运算速度并不是越快越好，更重要的是较快的速度和较高精确度的权衡。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image17.png" alt="图 3.4 改进后的YOLOv5模型结构" /></p>
<p>YOLOv5模型对8倍下采样输出的特征图负责对小目标进行检测，这意味着如果实例的像素大小小于8×8将会很难被检测到<sup class="footnote-ref"><a href="#fn23" id="fnref23">[23]</a></sup>。而数据集中小于8×8的实例一共有16560个，而像素尺寸小于4×4的实例只有1200个，显然采用4倍下采样的特征图负责小目标的检测能够包含几乎整个数据集。此外YOLOv5对于密集的小目标物体的定位性能不是很理想。对此提出一种针对特征融合改进方案，调整YOLOv5中的路径聚合网络，取其中4、8、16、32、64倍下采样的五张特征图，经过特征融合人后分别负责检测巨大物体、大物体、中等大小物体、小物体和特别小的物体。这种改进同样是以牺牲速度来换取一定的精度。</p>
<p>总体的改进方法如图3.4所示，其中红色框框起来的部分就是本文新增改进的结构。下方的红色框为新增的下采样部分，输出通道数取256和512的中值。并在特征融合过程中新增了一张特征图负责较大物体的检测。上方的红色框为对特征融合部分的改进，对原先的8倍下采样输出特征图再加一层上采样，与4倍下采样的特征图进行融合，以提高对小目标的检测效果。基于这些改进，负责预测输出的特征图从原先的三张扩展到了五张。</p>
<h2 id="本章小结-2"><a class="markdownIt-Anchor" href="#本章小结-2"></a> 本章小结</h2>
<p>在本章首先分析了行人车辆数据集，讲述了数据集的来源和需要检测的类别。介绍了其中样本不均衡的和其中含有一部分小型目标的问题，还介绍了YOLOv5模型在当前数据上的缺陷。本章后续针对本章前面提到的问题，提出了数据预处理和网络结构两方面的改进。第四章将会基于这些改进对其进行实验。</p>
<h1 id="实验与分析"><a class="markdownIt-Anchor" href="#实验与分析"></a> 实验与分析</h1>
<p>Pytorch是一个facebook研发的开源AI框架，其优点有(1)、与python编程类似，上手容易，可读性高(2)、使用动态计算图，更方便编写和调试，(3)、容易使用GPU进行加速运算。本文将使用pytorch框架来实现YOLOv5改进后的模型。</p>
<p>本章将介绍本次实验的硬件平台，随后对改进前后模型的性能和实际图片效果进行对比分析。</p>
<h2 id="实验硬件平台"><a class="markdownIt-Anchor" href="#实验硬件平台"></a> 实验硬件平台</h2>
<p>本次实验中的所有数据皆在以下硬件平台上运行所得。</p>
<p>(1)、CPU：Intel ® Xeon ® Platinum 8163 CPU @ 2.50GHz</p>
<p>(2)、内存：64GB</p>
<p>(3)、GPU：NVIDIA Tesla P100，16GB显存，浮点计算速度为5.18 TFLOPS</p>
<p>(4)、操作系统：Ubuntu 18.04 LTS</p>
<h2 id="实验结果分析"><a class="markdownIt-Anchor" href="#实验结果分析"></a> 实验结果分析</h2>
<p>本次实验基于上节提到的实验硬件设备对改进前后模型训练150轮，使用精确率、召回率和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>A</mi><msub><mi>P</mi><mn>50</mn></msub></mrow><annotation encoding="application/x-tex">mAP_{50}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>作为模型的评价指标，相关评价指标的计算过程可见本文第二章中的评价指标介绍。</p>
<h3 id="训练时期效果对比"><a class="markdownIt-Anchor" href="#训练时期效果对比"></a> 训练时期效果对比</h3>
<p>图4.1为训练时期IoU阈值为50%的均值平均精确度变化图，纵坐标为只考虑IoU大于50%边界框预测值的均值平均精确度，横坐标为训练的轮数epoch，一个epoch指完成一次数据集里面的全部数据的训练。蓝色的曲线为改进前模型在训练时期的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>A</mi><msub><mi>P</mi><mn>50</mn></msub></mrow><annotation encoding="application/x-tex">mAP_{50}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的变化曲线，红色的曲线为改进后模型在训练时期的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>A</mi><msub><mi>P</mi><mn>50</mn></msub></mrow><annotation encoding="application/x-tex">mAP_{50}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的变化曲线。从图中可以明显的看出改进后的模型的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>A</mi><msub><mi>P</mi><mn>50</mn></msub></mrow><annotation encoding="application/x-tex">mAP_{50}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>在训练期间一直比改进前模型高。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image18.png" alt="图 4.1 改进前后模型在训练时期的mAP50变化曲线" /></p>
<p>图4.2、图4.3和图4.4为训练时期改进前模型和改进后模型在验证集上的loss对比图，横坐标都为训练时的轮次，纵坐标为loss的大小。蓝色的曲线为改进前的模型，红色的曲线为改进后的模型。图4.2为验证集cls_loss变化图，表示的是模型分辨类别的误差，越低表示模型分类越精准，在YOLOv5中使用二元交叉熵来计算分类损失。可以看到训练后期改进后模型的cls_loss要比改进前的低，因此改进后模型的分类效果要更好。图4.3为box_loss变化图，表示的是模型的边界框坐标定位方面的误差，越低表示模型的边界框定位越准。在YOLOv5中使用了C-IoU loss来计算box_loss，C-IoU loss比原本的损失函数多考虑了边界框的中心点距离和长宽比，能更好的反应预测框和真实框的接近程度，可以看到训练时期改进后模型比改进前的box_loss低，这表明改进后的模型在定位方面更精确。图4.4为obj_loss变化图，表示的是边界框是物体的置信度方面误差，越低表示模型对边界框内是否存在物体的判别能力越强。改进后模型的obj_loss一直比改进前低，这表明改进后模型判别是否存在物体的能力更强，能够减少风景被误判概率。还可以发现随着训练批次的上升，验证集的loss出现了先下降后上升的趋势，这是因为出现了过拟合的现象。为了选取泛化能力最强的模型权重，应该选择loss曲线中最低的点所对应的模型权重作为最佳的模型权重。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image19.png" alt="图 4.2 改进前后模型的验证集分类误差在训练时期的变化曲线" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image20.png" alt="图 4.3 改进前后模型的验证集边界框误差在训练时期的变化曲线" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image21.png" alt="图 4.4 改进前后模型的验证集物体性误差在训练时期的变化曲线" /></p>
<h3 id="训练完成效果对比"><a class="markdownIt-Anchor" href="#训练完成效果对比"></a> 训练完成效果对比</h3>
<p>图4.5为YOLOv5模型改进前后的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>A</mi><msub><mi>P</mi><mn>50</mn></msub></mrow><annotation encoding="application/x-tex">mAP_{50}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的效果对比，图中蓝色代表的是改进前的模型表现效果，红色的是改进后的模型表现效果。横坐标表示各个类别，一共有行人、自行车、摩托车、公交车和卡车共六类，此外图中还有一个所有类的汇总。纵坐标表示的是只考虑IoU大于50%的边界框的均值平均精确率，以百分比的形式表示。表格第一列为全部类别的均值平均精确率，改进之前为62%，改进之后为64.5%，总体提升了2.5%的均值平均精确度。行人类从66.2%提升到了68.3%，自行车类从47.3%上升到了50%，机动车类从71%上升到了75.1%，摩托车类从65.7%上升到68.6%，公交车类从69.3%上升到了70.4，卡车类从52.3%上升到了54.2%。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image22.png" alt="图 4.5 改进前后模型的mAP50对比" /></p>
<p>图4.6是YOLOv5模型改进前和改进后的精确度对比。蓝色柱形图表示的是改进前模型的表现，红色的是改进后的模型表现。横坐标代表检测的类别，纵坐标代表了各个类别的精确度。可以看到全部类的精确度在改进之前是74.4%，在改进之后为75.8%，整体提高了1.4%。行人类提升了2.3%，自行车类提升了2%，机动车类提升了1.5%，摩托车类下降了2.9%，较难分类的公交车类和卡车类分别提升了2.8%和1.8%。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image23.png" alt="图 4.6 改进前后模型的精确度对比" /></p>
<p>图4.7为YOLOv5模型改进前后的召回率对比，横坐标是分类的各个类别，纵坐标为模型的召回率，以百分比的形式显示，蓝色柱形图表示的是改进前的模型召回率，红色柱形图表示的是改进后的模型召回率。可以看到所有类别的召回率从原来的55.4%上升到了56.6%，但是行人类从58.6%下降到了57.4%，自行车类从44.9%上升到了45.4，机动车类从63%上升到了64.9%，摩托车类从58.8%上升到了60.8%，公交车类从61.8%上升到了63.7%，卡车类从45.4%上升到了47.5%。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image24.png" alt="图 4.7 改进前后模型的召回率对比" /></p>
<p>图4.8和图4.9为模型改进前后对一辆黄色卡车的检测效果对比图，图4.8为改进前的卡车检测效果图，图中棕色框表示的是卡车类，0.49表示模型认为该棕色框有49%的可能性为卡车，紫色框表示的是公交车类，0.45表示模型认为该框有45%的可能性为公交车。图4.9为改进后的模型对同一张图片的检测效果图，图中棕色框表示卡车类，0.91表示改进后的模型有高达91%的置信度认为该框为一辆卡车。比较改进前后的检测效果图可以明显的看出改进后的模型相较于改进前模型在卡车的分类上有了很大的提升。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image25.jpeg" alt="图 4.8 改进前模型对卡车的预测结果" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image26.jpeg" alt="图 4.9 改进后模型对卡车的预测结果" /></p>
<p>图4.10为含有小目标带有标签的原始图片图，绿色框代表的车辆类，通过计数可以发现图片中一共有8个车辆框。图4.11为改进前的模型对该图片的检测效果，绿色框代表车辆，数字代表着置信度的大小，数字越高代表越可信，仔细观察可以发现一共预测了9个车辆框，在中间偏左一点的位置多以较高的概率多预测了一个框。图4.12为改进后的模型对于小目标的检测效果，仔细观察可以发现改进后的模型对图片预测了8个车辆框，虽然图中改进后的模型的置信度相对于改进前模型下降了1%，但是改进后的模型对于目标的定位更为精准。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image27.jpeg" alt="图 4.10 小目标检测测试图片" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image28.jpg" alt="图 4.11 改进前模型对小目标的检测效果" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image29.jpg" alt="图 4.12 改进后模型对小目标的检测效果" /></p>
<p>图4.13为改进后模型的各个模块的计算速度图，横坐标为各个模块，纵坐标为消耗的时间。可以看到改进后的模型在推理部分耗时为1.8<br />
ms，而对推理结果做非极大值抑制耗时4.5 ms，总体耗时6.3<br />
ms。可以估算得到改进后模型的速度约为159 FPS，可以满足实时性的要求。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.3/paper-image30.png" alt="图 4.13改进后模型的计算速度" /></p>
<h2 id="本章小结-3"><a class="markdownIt-Anchor" href="#本章小结-3"></a> 本章小结</h2>
<p>本章针对YOLOv5改进前后的模型进行了实验对比，对比了训练时期的loss变化和完成训练后的精确度、召回率和均值平均精确度等。此外还对比了两个模型对于实际图片的检测效果。</p>
<h1 id="总结与展望"><a class="markdownIt-Anchor" href="#总结与展望"></a> 总结与展望</h1>
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>本文首先讲述了车辆行人检测的研究背景及其意义，简要的阐述了目标检测算法的研究现状。随后在第二章中介绍了卷积神经网络的卷积的原理和结构，分析了其中的优缺点。重点讲述了YOLOv5的模型结构和其中各个模块的作用和YOLOv5的检测流程。</p>
<p>对于行人车辆检测优化方面，本文分析了行人车辆数据集中数据不均衡和小目标较多的问题，此外还分析了YOLOv5模型在当前数据集上存在的一些小问题。针对这些问题本文三点改进方案：</p>
<p>(1)、提出了使用马赛克数据增强来解决数据集中各个类别样本分布不均衡的问题。</p>
<p>(2)、针对YOLOv5对大型车辆的检测效果不理想的问题，本文提出了新增一层下采样层以获取更多的特征。</p>
<p>(3)、针对数据集中小目标较多的问题和小目标定位不理想的问题，本文提出了对YOLOv5模型的特征融合部分进行调整。使用4倍下采样的特征图检测小目标。</p>
<p>本文最后对改进方案进行了实验验证，结果表明相较于原本的YOLOv5模型，改进后的模型在卡车和公交车等大物体分辨的效果上有了很大的提升。此外改进后模型对小物体的定位效果也比原来的更好了。虽然模型仍然保持着实时检测的效果，但是模型的大小有变大了。</p>
<h2 id="展望"><a class="markdownIt-Anchor" href="#展望"></a> 展望</h2>
<p>经过改进后的YOLOv5模型还可以做出更多的改善，首先改进后的YOLOv5模型虽然在均值平均精确率、精确率和召回率等指标上有所提升，但是因为其新增加了一个下采样层，同时还与大尺寸的特征图进行特征融合，模型的参数量也因此增大，不利于嵌入式等资源紧缺的设备部署。因此希望能够在保持现有精度的情况下降低模型的大小。其次改进后的YOLOv5模型对于大量物体和远处的小目标识别效果依然不佳。</p>
<p>后续的工作有三个方向，第一个是对行人车辆数据集做处理，对其中比较少的实例类做上采样处理或者是人为的增加这部分数据，使得类别的分布比较均衡。第二个是可以参考MobileNet中的深度可分离卷积，尝试将深度可分离卷积运用到改进后YOLOv5的网络结构中，将网络模型轻量化。第三个是尝试将最近比较火的视觉Transformer应用到YOLOv5网络结构中改善网络的检测效果。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>中国统计年鉴[Z]. 中国统计出版社. 2019. <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p>中国统计年鉴[Z]. 中国统计出版社. 2020. <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p>Zou Z, Shi Z, Guo Y, et al. Object detection in 20 years: A survey[J]. arXiv preprint arXiv:1905.05055, 2019. <a href="#fnref3" class="footnote-backref">↩︎</a> <a href="#fnref3:1" class="footnote-backref">↩︎</a> <a href="#fnref3:2" class="footnote-backref">↩︎</a> <a href="#fnref3:3" class="footnote-backref">↩︎</a> <a href="#fnref3:4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p>Dalal N, Triggs B. Histograms of oriented gradients for human detection[C]//2005 IEEE computer society conference on computer vision and pattern recognition (CVPR’05). Ieee, 2005, 1: 886-893. <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p>Lowe D G. Object recognition from local scale-invariant features[C]//Proceedings of the seventh IEEE international conference on computer vision. Ieee, 1999, 2: 1150-1157. <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p>Cortes C, Vapnik V. Support-vector networks[J]. Machine learning, 1995, 20(3): 273-297. <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p>Freund Y, Schapire R E. A decision-theoretic generalization of on-line learning and an application to boosting[J]. Journal of computer and system sciences, 1997, 55(1): 119-139. <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn8" class="footnote-item"><p>Krizhevsky A, Sutskever I, Hinton G E. Imagenet classification with deep convolutional neural networks[J]. Advances in neural information processing systems, 2012, 25: 1097-1105. <a href="#fnref8" class="footnote-backref">↩︎</a> <a href="#fnref8:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn9" class="footnote-item"><p>Girshick R, Donahue J, Darrell T, et al. Rich feature hierarchies for accurate object detection and semantic segmentation[C]//Proceedings of the IEEE conference on computer vision and pattern recognition. 2014: 580-587. <a href="#fnref9" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn10" class="footnote-item"><p>Girshick R. Fast r-cnn[C]//Proceedings of the IEEE international conference on computer vision. 2015: 1440-1448. <a href="#fnref10" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn11" class="footnote-item"><p>Ren S, He K, Girshick R, et al. Faster r-cnn: Towards real-time object detection with region proposal networks[J]. arXiv preprint arXiv:1506.01497, 2015. <a href="#fnref11" class="footnote-backref">↩︎</a> <a href="#fnref11:1" class="footnote-backref">↩︎</a> <a href="#fnref11:2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn12" class="footnote-item"><p>Redmon J, Divvala S, Girshick R, et al. You only look once: Unified, real-time object detection[C]//Proceedings of the IEEE conference on computer vision and pattern recognition. 2016: 779-788. <a href="#fnref12" class="footnote-backref">↩︎</a> <a href="#fnref12:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn13" class="footnote-item"><p>Redmon J, Farhadi A. YOLO9000: better, faster, stronger[C]//Proceedings of the IEEE conference on computer vision and pattern recognition. 2017: 7263-7271. <a href="#fnref13" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn14" class="footnote-item"><p>Lin M, Chen Q, Yan S. Network in network[J]. arXiv preprint arXiv:1312.4400, 2013. <a href="#fnref14" class="footnote-backref">↩︎</a> <a href="#fnref14:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn15" class="footnote-item"><p>Redmon J, Farhadi A. Yolov3: An incremental improvement[J]. arXiv preprint arXiv:1804.02767, 2018. <a href="#fnref15" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn16" class="footnote-item"><p>Bochkovskiy A, Wang C Y, Liao H Y M. Yolov4: Optimal speed and accuracy of object detection[J]. arXiv preprint arXiv:2004.10934, 2020. <a href="#fnref16" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn17" class="footnote-item"><p>Hubel D H, Wiesel T N. Receptive fields of single neurones in the cat’s striate cortex[J]. The Journal of physiology, 1959, 148(3): 574-591. <a href="#fnref17" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn18" class="footnote-item"><p>Fukushima K, Miyake S. Neocognitron: A self-organizing neural network model for a mechanism of visual pattern recognition[M]//Competition and cooperation in neural nets. Springer, Berlin, Heidelberg, 1982: 267-285. <a href="#fnref18" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn19" class="footnote-item"><p>LeCun Y, Bottou L, Bengio Y, et al. Gradient-based learning applied to document recognition[J]. Proceedings of the IEEE, 1998, 86(11): 2278-2324. <a href="#fnref19" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn20" class="footnote-item"><p>周飞燕,金林鹏,董军.卷积神经网络研究综述[J].计算机学报,2017,40(06):1229-1251. <a href="#fnref20" class="footnote-backref">↩︎</a> <a href="#fnref20:1" class="footnote-backref">↩︎</a> <a href="#fnref20:2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn21" class="footnote-item"><p>蒋昂波,王维维.ReLU激活函数优化研究[J].传感器与微系统,2018,37(02):50-52. <a href="#fnref21" class="footnote-backref">↩︎</a> <a href="#fnref21:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn22" class="footnote-item"><p>Liu S, Qi L, Qin H, et al. Path aggregation network for instance segmentation[C]//Proceedings of the IEEE conference on computer vision and pattern recognition. 2018: 8759-8768. <a href="#fnref22" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn23" class="footnote-item"><p>鞠默然,罗海波,王仲博,何淼,常铮,惠斌.改进的YOLO V3算法及其在小目标检测中的应用[J].光学学报,2019,39(07):253-260. <a href="#fnref23" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>毕业设计</tag>
        <tag>yolo</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业设计（七）基于深度学习算法YOLO的行人车辆检测——答辩记录</title>
    <url>/2021/07/03/YOLO-oral-defense/</url>
    <content><![CDATA[<p>很不幸的是被抽到了公开答辩，然而幸运的是我是第一个答辩，系里面的老师也没有全来，大概到场的也就8到9个。</p>
<span id="more"></span>
<h1 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面</h1>
<p>我估计老师在答辩的时候感觉出来我做的比较水，只是因为有督导在前面就给我点面子，最后水了个优秀毕业论文。校优秀就不申请了，嫌麻烦，而且估计更多老师看明白是个水文。</p>
<blockquote>
<p>答辩PPT: <a href="https://pan.baidu.com/s/1V_GZbogIoj9Q_tkY7HfqQw">百度盘</a> 提取码: p7yv</p>
</blockquote>
<h1 id="答辩记录"><a class="markdownIt-Anchor" href="#答辩记录"></a> 答辩记录</h1>
<ul>
<li>Q1： 几类目标？<br />
6类，分别为行人（Person）、自行车（bike）、机动车（car）、摩托车（motor）、公交车（bus）和卡车（truck）</li>
<li>Q2：实测框架？<br />
本次系统使用pytorch框架实现</li>
<li>Q3：不平衡怎么去确定<br />
根据数据集中各个类的数量比对， 行人类和机动车类明显比其他类别要多</li>
<li>Q4：数据集如何自建？收集？<br />
本次数据集从大型检测数据集COCO、自动驾驶数据集BDD100K中提取的含有行人车辆图片和网络爬取的图片组成。</li>
<li>Q5：损失函数的选择理由？<br />
损失函数由box loss、obj loss、cls loss三部分组成。其中box loss为边界框定位部分，由c-iou loss组成，其反应了预测框和真实框的重叠程度、中心点距离和长宽比，优化边界框的定位问题。对于分类部分采取逻辑回归函数能够更好的反应预测物体性和预测类别与真实值的差别。obj loss采用BCE Logits函数，对边界框中含有物体的置信度进行优化。cls loss采用BCE函数，对边界框的分类进行优化。</li>
<li>Q6：为什么不采用公开数据集？70%训练，30%测试，理由？<br />
由于未能找到符合我需求的公开数据集，因此从各个公开数据集中提取需要的类别检测。<br />
本次训练和验证一共使用约2万张图片，属于小数据集。因此采用机器学习中传统的划分方法，即将70%的数据用于训练，20%数据用于验证。<br />
(其实因为没钱。免费colab嫖到没次数了，租的GPU又贵，网盘功能免费只给5G，只能搞小一点数据集)</li>
<li>Q7：改进结果突出哪些类？<br />
所有类的均值平均精确度都有一定的提升，效果最大的为机动车类，约有4.1%的提升效果。</li>
<li>Q8：为什么car类提升效果最高？<br />
调整特征融合部分主要是针对长宽小于8像素的小目标改进，而在这些小目标中car类的实例数量约占一半，因此car类受到的提升效果最高。<br />
(因为当时PPT打错了，老师原本问的是motor)</li>
</ul>
<h1 id="写在最后"><a class="markdownIt-Anchor" href="#写在最后"></a> 写在最后</h1>
<p>因为当时答辩的PPT把motor类的数值写错了，以至于老师以为我的提升效果有10%，实际只有2%左右吧。搞得我答辩时候很懵逼，总共提升效果一般般，而老师以为很大。</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>毕业设计</tag>
        <tag>yolo</tag>
      </tags>
  </entry>
  <entry>
    <title>ResNet论文笔记</title>
    <url>/2021/07/11/ResNet-Note/</url>
    <content><![CDATA[<p>ResNet是解决了深度学习网络中随着网络深化，网络能力反而退化的问题。<br />
封面《恋×シンアイ彼女》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>卷积神经网络中网络的深度是非常关键的，许多非凡的视觉识别任务都收益于非常深的模型。因此便有一个问题“学习更好的网络是否就像堆叠更多的层一样简单？”回答这个问题的其中一个臭名昭著的障碍就是“梯度消失/爆炸”，其阻碍了网络收敛。然而这个问题被通过初始归一化和中间层归一化解决了。<br />
当更深的网络能够收敛的时候，网络退化的问题出现了。随着网络深度的增加，准确率达到饱和然后迅速下降。让人意外的是这种退化并不是由过拟合导致的，随着层数的不断增加，模型反而有了更高的训练误差。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.2/fig1.png" alt="" /></p>
<h1 id="正文"><a class="markdownIt-Anchor" href="#正文"></a> 正文</h1>
<p>为了解决退化问题，何凯明团队提出了一种新型网络结构——残差结构。其结构如下图所示，新增加的层为恒等映射层，另一个为从浅层学习结果的复制。原本底层的输出变成了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>，增加的非线性连接去拟合<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>:</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">F(x):=H(x)-x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>，原始的映射重构成了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">F(x)+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>。何凯明团队假定残差部分比原本映射更容易优化。如果恒等映射是最优的，那么只需要讲残差部分置0即可，这比拟合非线性层更容易。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.2/res_block.png" alt="" /><br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">F(x)+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>可以通过前向神经网络加上“短路“（shortcut）来实现，无需额外参数和计算复杂度，依然可以用SGD来优化。</p>
<h1 id="网络结构"><a class="markdownIt-Anchor" href="#网络结构"></a> 网络结构</h1>
<h2 id="plain-network"><a class="markdownIt-Anchor" href="#plain-network"></a> plain network</h2>
<p>受到VGG启发，何凯明团队基于以下原则设计了一种新的结构plain-network作为测试的基准线</p>
<ul>
<li>输出大小一样的层拥有一样的卷积核数</li>
<li>特征图变成原来一半的时候输出的卷积核翻倍<br />
同时使用步长为2的卷积替代下采样，使用全局平均池化和带有softmax的1000输出全连接作为输出。该结构比VGG花费更少的卷积核，复杂度更低。计算量为3.6 BFLOPs（乘加），只有原本VGG的18%。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.2/architectures.png" alt="" /></li>
</ul>
<h2 id="residual-network"><a class="markdownIt-Anchor" href="#residual-network"></a> residual network</h2>
<p>plain network的残差版，对于输入输出维度相等时直接”短路“即可，即上图中的实线。对于维度上升的，图中虚线部分，则有两种方案：</p>
<ol>
<li>短路部分依然使用恒等映射，维度增加的部分补0填充，这样不会引入新的参数</li>
<li>使用公式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><msub><mi>W</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>W</mi><mi>s</mi></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">y=F(x,{W_i})+W_sx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span>匹配维度，使用1×1卷积实现。<br />
对于两种实现方案，连接不同大小的特征图时，都需要步长为2。</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.2/table1.png" alt="" /><br />
表一为其结构的各种变种。</p>
<h1 id="实验"><a class="markdownIt-Anchor" href="#实验"></a> 实验</h1>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.2/fig4.png" alt="" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.2/top1-error.png" alt="top1-error" /></p>
<h1 id="更深的瓶颈结构"><a class="markdownIt-Anchor" href="#更深的瓶颈结构"></a> 更深的瓶颈结构</h1>
<p>为了减少深层网络的训练时间，作者重新设计了一种瓶颈结构，如下图所示。使用1×1，3×3，1×1卷积替换原来的2层卷积。其中1×1的卷积用于升降维，使得3×3卷积的输入维度和输出维度减小，这降低了网络复杂度和计算量。（在后续一些网络如YOLO中都能看到bottleneck结构）<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.2/bottleneck.png" alt="" /></p>
<h1 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h1>
<p>ResNet中的残差结构解决了网络退化问题，且结构简单，现实方便也没有增加太多的计算量。在后续的网络中几乎全都有残差结构，而且网络深度也开始到了上百层,训练时也更容易OOM了（哭）。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p>[1] He K, Zhang X, Ren S, et al. Deep residual learning for image recognition[C]//Proceedings of the IEEE conference on computer vision and pattern recognition. 2016: 770-778.</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>半次元爬虫</title>
    <url>/2021/07/27/bcy-spider/</url>
    <content><![CDATA[<p>看着半次元的图不错，打算爬一爬<br />
封面《chaos;child》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>因为偶然的机会得知了半次元的存在，后续又觉得半次元的COS图、JK图还有一些绘图不错，因此打算爬一些好看的图片。</p>
<h1 id="分析网页"><a class="markdownIt-Anchor" href="#分析网页"></a> 分析网页</h1>
<h2 id="分析html"><a class="markdownIt-Anchor" href="#分析html"></a> 分析html</h2>
<p>分析被爬的网页肯定是要打开控制台了，按下F12先观察html可以发现在第一个<code>&lt;script&gt;</code>标签中存在一个json文件。这个json包含了你的用户信息、圈子信息和图片信息等。因为整个json文件解析后行有点点多，因此这里就放出部分内容。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.1/F12-1.png" alt="F12分析html" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.1/html-json.png" alt="html中的json" /></p>
<h2 id="分析api"><a class="markdownIt-Anchor" href="#分析api"></a> 分析api</h2>
<p>继续分析网络信息，可以发现在向下滚动后可以发现有一个api返回了包含图片信息的接口，其参数结构如下<br />
<code>https://www.bcy.net/apiv3/common/circleFeed?circle_id=399&amp;since=rec:2&amp;sort_type=1&amp;grid_type=10</code><br />
经过多次调用可以发现circle_id表示这个圈子的id，如JK、COS有各自的circle_id。而滚动时变化的只有since的参数，表示的是调用第几波。因此请求的时候只需要修改circle_id和since的内容即可<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.1/F12-2.png" alt="F12分析api（过滤了无关内容）" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.1/api-json.png" alt="api返回的json" /></p>
<h2 id="图片格式"><a class="markdownIt-Anchor" href="#图片格式"></a> 图片格式</h2>
<p>以上图的网址为例子，半次元的图片有多种请求格式，如下所示。此外看到json里面的<code>format</code>字段则是表示了图片的格式（有gif的）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 返回宽度为650的图</span><br><span class="line">https://p3-bcy.byteimg.com/img/banciyuan/756021456bf744f2a04ac989a2e106a6~tplv-banciyuan-w650.image</span><br><span class="line"># 中等大小的图</span><br><span class="line">https://p3-bcy.byteimg.com/img/banciyuan/756021456bf744f2a04ac989a2e106a6~tplv-banciyuan-sq360.image</span><br><span class="line"># 稍微大一点大图</span><br><span class="line">https://p3-bcy.byteimg.com/img/banciyuan/756021456bf744f2a04ac989a2e106a6~tplv-banciyuan-tl640.image</span><br><span class="line"># 小方图</span><br><span class="line">https://p3-bcy.byteimg.com/img/banciyuan/756021456bf744f2a04ac989a2e106a6~tplv-banciyuan-2x2.image</span><br><span class="line"># 似乎是原图</span><br><span class="line">https://p3-bcy.byteimg.com/img/banciyuan/756021456bf744f2a04ac989a2e106a6~noop.image</span><br></pre></td></tr></table></figure>
<h1 id="爬取图片"><a class="markdownIt-Anchor" href="#爬取图片"></a> 爬取图片</h1>
<p>由于<code>request</code>库不支持异步，下载图片会比较耗时，同时为了后续方便加入<code>nonebot</code>机器人框架中，因此使用<code>httpx</code>作为本次的请求库。<code>httpx</code>另一个好处是兼容<code>request</code>接口<br />
另外需要注意的是需要使用<code>httpx.AsyncClient()</code>或是<code>request.session()</code>这种保存cookie，如果没有cookie，每次请求半次元api会返回一样的json文件<br />
为了加快一定速度，本次加了圈名转圈id的缓存，如果在<code>nonebot</code>框架里面可以使用数据库更好。</p>
<h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_cookies</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    cookie读取，域敏感因此之间转dict存不行</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(<span class="string">&quot;cookies.pk&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    cookies = httpx.Cookies()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;cookies.pk&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        jar_cookies = pickle.load(f)</span><br><span class="line">    <span class="keyword">for</span> domain, pc <span class="keyword">in</span> jar_cookies.items():</span><br><span class="line">        <span class="keyword">for</span> path, c <span class="keyword">in</span> pc.items():</span><br><span class="line">            <span class="keyword">for</span> k, v <span class="keyword">in</span> c.items():</span><br><span class="line">                cookies.<span class="built_in">set</span>(k, v.value, domain=domain, path=path)</span><br><span class="line">    <span class="keyword">return</span> cookies</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 没有cookie会导致每次获得的json是一样的，如果是全天候定时执行可以去除cookie读取和保存</span></span><br><span class="line">client = httpx.AsyncClient(cookies=load_cookies())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_header</span>(<span class="params">image: <span class="built_in">bool</span> = <span class="literal">False</span></span>) -&gt; <span class="built_in">dict</span>:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    获取request header部分</span></span><br><span class="line"><span class="string">    image: 请求的是否为图片</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    headers = &#123;<span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;https://www.bcy.net/&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36&#x27;</span></span><br><span class="line">               &#125;</span><br><span class="line">    <span class="keyword">if</span> image == <span class="literal">True</span>:</span><br><span class="line">        headers[<span class="string">&#x27;accept&#x27;</span>] = <span class="string">&#x27;image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> headers</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">id2name</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    将id转name</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    url = <span class="string">&quot;https://www.bcy.net/tag/&#123;id&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>=<span class="built_in">id</span>)</span><br><span class="line">    r = <span class="keyword">await</span> client.get(url, headers=get_header())</span><br><span class="line">    soup = BeautifulSoup(r.text, features=<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">    name = soup.find(<span class="string">&#x27;meta&#x27;</span>, &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;keywords&#x27;</span>&#125;)[<span class="string">&#x27;content&#x27;</span>].split(<span class="string">&quot; - &quot;</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># print(name)</span></span><br><span class="line">    <span class="keyword">return</span> name</span><br><span class="line">    <span class="comment"># print(r.text)</span></span><br><span class="line">    <span class="comment"># with open(&#x27;index.html&#x27;,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as f:</span></span><br><span class="line">    <span class="comment">#    f.write(r.text)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">load_name2id_cache</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    获取name2id的缓存</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(<span class="string">&#x27;cache.json&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;cache.json&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> json.load(f)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">save_name2id_cache</span>(<span class="params">cache</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    保存缓存</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;cache.json&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="comment"># 中文</span></span><br><span class="line">        json.dump(cache,f,ensure_ascii=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">name2id</span>(<span class="params">name: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    将name转id</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 读取name2id的缓存</span></span><br><span class="line">    cache = <span class="keyword">await</span> load_name2id_cache()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cache == <span class="literal">None</span> <span class="keyword">and</span> name <span class="keyword">in</span> cache:</span><br><span class="line">        <span class="keyword">return</span> cache[name]</span><br><span class="line">    <span class="keyword">if</span> cache == <span class="literal">None</span>:</span><br><span class="line">        cache = &#123;&#125;    </span><br><span class="line">    <span class="comment"># 缓存则爬取</span></span><br><span class="line">    url = <span class="string">&quot;https://www.bcy.net/search/home?k=&#123;name&#125;&quot;</span>.<span class="built_in">format</span>(name=name)</span><br><span class="line">    r = <span class="keyword">await</span> client.get(url, headers=get_header())</span><br><span class="line">    raw = re.findall(<span class="string">&#x27;JSON.parse\(&quot;.*&quot;\);&#x27;</span>, r.text)[<span class="number">0</span>].replace(<span class="string">&#x27;JSON.parse(&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;);&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\\\\u002F&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    data = json.loads(raw) <span class="comment">#这里居然返回的是str</span></span><br><span class="line">    data = json.loads(data)</span><br><span class="line">    circles = data[<span class="string">&#x27;all&#x27;</span>][<span class="string">&#x27;circle&#x27;</span>][<span class="string">&#x27;circle_list&#x27;</span>]</span><br><span class="line">    cid = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> circle <span class="keyword">in</span> circles:</span><br><span class="line">        cache[circle[<span class="string">&#x27;circle_name&#x27;</span>]] = circle[<span class="string">&#x27;circle_id&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> circle[<span class="string">&#x27;circle_name&#x27;</span>] == name:</span><br><span class="line">            cid = circle[<span class="string">&#x27;circle_id&#x27;</span>]</span><br><span class="line">    <span class="comment">#print(cid)</span></span><br><span class="line">    <span class="keyword">await</span> save_name2id_cache(cache)</span><br><span class="line">    <span class="keyword">return</span> cid</span><br><span class="line">    <span class="comment">#with open(&#x27;index.html&#x27;,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as f:</span></span><br><span class="line">    <span class="comment">#    f.write(r.text)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">download_image</span>(<span class="params">url: <span class="built_in">str</span>, save_path: <span class="built_in">str</span> = <span class="string">&#x27;&#x27;</span>, <span class="built_in">format</span>: <span class="built_in">str</span> = <span class="string">&#x27;jpeg&#x27;</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    通过url下载图片</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    filename = url.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]+<span class="string">&#x27;.&#x27;</span>+<span class="built_in">format</span></span><br><span class="line">    filename = os.path.join(save_path, filename)</span><br><span class="line">    <span class="comment"># 拼接实际地址</span></span><br><span class="line">    url = url + <span class="string">&quot;~noop.image&quot;</span></span><br><span class="line">    r = <span class="keyword">await</span> client.get(url, headers=get_header())</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(r.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">get_more_from_tag</span>(<span class="params">circle_id: <span class="built_in">int</span>, since: <span class="built_in">int</span> = <span class="number">0</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    调用circleFeed接口，获取圈子内的图</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    headers = get_header()</span><br><span class="line">    url = <span class="string">&quot;https://www.bcy.net/apiv3/common/circleFeed?circle_id=&#123;cid&#125;&amp;since=rec:&#123;since&#125;&amp;sort_type=1&amp;grid_type=10&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">        cid=circle_id, since=since)</span><br><span class="line">    <span class="comment"># print(url)</span></span><br><span class="line">    r = <span class="keyword">await</span> client.get(url, headers=headers)</span><br><span class="line">    <span class="comment"># with open(&#x27;&#123;&#125;.json&#x27;.format(since),&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as f:</span></span><br><span class="line">    <span class="comment">#   json.dump(r.json(),f,ensure_ascii=False)</span></span><br><span class="line">    <span class="keyword">return</span> r.json()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">download_image_from_tag</span>(<span class="params">circle_id: <span class="built_in">int</span>, circle_name: <span class="built_in">str</span> = <span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    通过圈子id下载图片</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 建文件夹分类</span></span><br><span class="line">    <span class="keyword">if</span> circle_name == <span class="literal">None</span> <span class="keyword">or</span> circle_name.strip() == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        circle_name = <span class="built_in">str</span>(circle_id)</span><br><span class="line">    save_path = circle_name</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(save_path):</span><br><span class="line">        os.mkdir(save_path)</span><br><span class="line">    content = <span class="keyword">await</span> get_more_from_tag(circle_id, since=<span class="number">0</span>)</span><br><span class="line">    items = content[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;items&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        image_list = item[<span class="string">&#x27;item_detail&#x27;</span>][<span class="string">&#x27;image_list&#x27;</span>]</span><br><span class="line">        <span class="keyword">for</span> image <span class="keyword">in</span> image_list:</span><br><span class="line">            <span class="keyword">await</span> download_image(image[<span class="string">&#x27;path&#x27;</span>], save_path=save_path, <span class="built_in">format</span>=image[<span class="string">&#x27;format&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">download_image_from_name</span>(<span class="params">circle_name:<span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    通过圈名下载图片</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    cid = <span class="keyword">await</span> name2id(circle_name)</span><br><span class="line">    <span class="keyword">if</span> cid != <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">await</span> download_image_from_tag(cid,circle_name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">close_client</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    关闭client，保存cookie</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;cookies.pk&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        pickle.dump(client.cookies.jar._cookies, f)</span><br><span class="line">    <span class="keyword">await</span> client.aclose()</span><br><span class="line"></span><br><span class="line"><span class="comment"># asyncio.run(download_image(</span></span><br><span class="line"><span class="comment">#    &quot;https://p3-bcy.byteimg.com/img/banciyuan/2eb5f6a5330f47ccaab29eff30a42a15&quot;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># asyncio.run(get_more_from_tag(492))</span></span><br><span class="line">loop = asyncio.get_event_loop()</span><br><span class="line">loop.run_until_complete(download_image_from_name(<span class="string">&quot;COS正片&quot;</span>))</span><br><span class="line"><span class="comment">#loop.run_until_complete(name2id(&quot;JK&quot;))</span></span><br><span class="line">loop.run_until_complete(close_client())</span><br><span class="line">loop.close()</span><br></pre></td></tr></table></figure>
<h1 id="后续工作"><a class="markdownIt-Anchor" href="#后续工作"></a> 后续工作</h1>
<p>后续工作在于使用<code>Aspscheduler</code>框架定时爬取。有空的话整合到<code>nonebot</code>里面，并使用数据库保存更多信息。<br />
此外由于半次元更像是微博一样的个人圈子，圈内发布的内容中含有一定的杂图，因此爬取时会有杂图在内，后续需要加入热榜爬虫。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>DCGAN生成手写数字</title>
    <url>/2021/08/05/DCGAN/</url>
    <content><![CDATA[<p>想试试用GAN生成动漫头像，于是先用简单GAN试一试。不过有一说一，GAN真的难训练。<br />
封面《Butterfly Seeker》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>DCGAN(Deep Convolutional Generative Adversarial Networks)是GAN的一种变体，顾名思义就是在原本的GAN中引入了卷积神经网络。本次使用DCGAN来生成手写数字。</p>
<h1 id="step-1-导入包"><a class="markdownIt-Anchor" href="#step-1-导入包"></a> Step 1 导入包</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> tensorflow.keras.layers <span class="keyword">as</span> layers</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="built_in">print</span>(tf.__version__)</span><br><span class="line"><span class="built_in">print</span>(tf.config.list_physical_devices())</span><br></pre></td></tr></table></figure>
<pre><code>2.4.0
[PhysicalDevice(name='/physical_device:CPU:0', device_type='CPU'), PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')]
</code></pre>
<h1 id="step-2-检查数据集"><a class="markdownIt-Anchor" href="#step-2-检查数据集"></a> step 2 检查数据集</h1>
<p>本次使用mnist作为手写数字识别</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line">%config InlineBackend.figure_format = <span class="string">&#x27;svg&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_dataset</span>(<span class="params">batch_size=<span class="number">128</span></span>):</span><br><span class="line">    mnist = tf.keras.datasets.mnist</span><br><span class="line">    <span class="comment"># load dataset</span></span><br><span class="line">    (x_train, _), _ = mnist.load_data()</span><br><span class="line">    <span class="comment"># [0,255] -&gt; [-1,1]</span></span><br><span class="line">    x_train = x_train/<span class="number">127.5</span> - <span class="number">1</span></span><br><span class="line">    <span class="comment"># (batch_size,w,h) -&gt; (batch,w,h,channel)</span></span><br><span class="line">    x_train = np.expand_dims(x_train, axis=<span class="number">3</span>)</span><br><span class="line">    dataset = tf.data.Dataset.from_tensor_slices(x_train).shuffle(<span class="number">60000</span>).batch(batch_size)</span><br><span class="line">    <span class="keyword">return</span> dataset</span><br><span class="line"><span class="comment">#查看训练样本</span></span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line"></span><br><span class="line">dataset = load_dataset()</span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>,<span class="number">8</span>))  <span class="comment">#8*8 inch</span></span><br><span class="line"><span class="keyword">for</span> i,(img) <span class="keyword">in</span> <span class="built_in">enumerate</span>(dataset.unbatch().take(<span class="number">9</span>)):  </span><br><span class="line">    ax = plt.subplot(<span class="number">3</span>, <span class="number">3</span>, i+<span class="number">1</span>)</span><br><span class="line">    ax.imshow(img[:,:,<span class="number">0</span>])</span><br><span class="line">    <span class="comment">#ax.set_title(&quot;label = %d&quot; % label)</span></span><br><span class="line">    ax.set_xticks([])</span><br><span class="line">    ax.set_yticks([])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.0/output_4_0.svg" alt="svg" /></p>
<h1 id="step-3-构建模型"><a class="markdownIt-Anchor" href="#step-3-构建模型"></a> step 3 构建模型</h1>
<h2 id="权重初始化"><a class="markdownIt-Anchor" href="#权重初始化"></a> 权重初始化</h2>
<p>权重初始化，根据DCGAN的论文，所有权重初始化为均值为0，方差为0.02。同时参考其他人的实现方法将BN层的初始化改了一下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">init_weight</span>(<span class="params">model:tf.keras.models.Model</span>):</span><br><span class="line">    <span class="keyword">for</span> layer <span class="keyword">in</span> model.layers:</span><br><span class="line">        rule_weights = tf.keras.initializers.RandomNormal(mean=<span class="number">0</span>,stddev=<span class="number">0.02</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(layer,layers.Conv2D):</span><br><span class="line">            layer.weights[<span class="number">0</span>] = rule_weights <span class="comment"># 0:weight 1:bias</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(layer,layers.Conv2DTranspose):</span><br><span class="line">            layer.weights[<span class="number">0</span>] = rule_weights</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(layer,layers.Dense):</span><br><span class="line">            layer.weights[<span class="number">0</span>] = rule_weights</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(layer,layers.BatchNormalization):</span><br><span class="line">            layer.weights[<span class="number">0</span>] = tf.keras.initializers.RandomNormal(mean=<span class="number">1.0</span>,stddev=<span class="number">0.02</span>)</span><br><span class="line">            layer.weights[<span class="number">1</span>] = tf.keras.initializers.Zeros()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="生成器模型"><a class="markdownIt-Anchor" href="#生成器模型"></a> 生成器模型</h2>
<p>生成器的模型我看到有多种实现方法，论文中的project and reshape有全连接和卷积两种方法，此处使用全连接来实现。反卷积有<code>Conv2DTranspose</code>和<code>Upsample2D+Conv2D</code>两种方法，此处按照论文使用前者。按照论文应该使用ReLU函数，此处替换为Leaky ReLU，alpha按照论文设置为0.2。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">build_generator</span>() -&gt; tf.keras.Model:</span><br><span class="line">    model = tf.keras.models.Sequential()</span><br><span class="line">    <span class="comment"># z lantent_dim = 100</span></span><br><span class="line">    model.add(layers.InputLayer(input_shape=<span class="number">100</span>))</span><br><span class="line">    <span class="comment"># project and reshape</span></span><br><span class="line">    model.add(layers.Dense(<span class="number">7</span>*<span class="number">7</span>*<span class="number">256</span>))</span><br><span class="line">    model.add(layers.Reshape((<span class="number">7</span>, <span class="number">7</span>, <span class="number">256</span>)))</span><br><span class="line">    model.add(layers.BatchNormalization())</span><br><span class="line">    model.add(layers.LeakyReLU(alpha=<span class="number">0.2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 7*7*256 -&gt; 7*7*128</span></span><br><span class="line">    model.add(layers.Conv2DTranspose(<span class="number">128</span>,kernel_size=<span class="number">5</span>,strides=<span class="number">1</span>,padding=<span class="string">&#x27;same&#x27;</span>,use_bias=<span class="literal">False</span>))</span><br><span class="line">    model.add(layers.BatchNormalization())</span><br><span class="line">    model.add(layers.LeakyReLU(alpha=<span class="number">0.2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 7*7*128 -&gt; 14*14*64</span></span><br><span class="line">    model.add(layers.Conv2DTranspose(<span class="number">64</span>,kernel_size=<span class="number">5</span>,strides=<span class="number">2</span>,padding=<span class="string">&#x27;same&#x27;</span>,use_bias=<span class="literal">False</span>))</span><br><span class="line">    model.add(layers.BatchNormalization())</span><br><span class="line">    model.add(layers.LeakyReLU(alpha=<span class="number">0.2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 14*14*64 -&gt; 28*28*32</span></span><br><span class="line">    model.add(layers.Conv2DTranspose(<span class="number">32</span>,kernel_size=<span class="number">5</span>,strides=<span class="number">2</span>,padding=<span class="string">&#x27;same&#x27;</span>,use_bias=<span class="literal">False</span>))</span><br><span class="line">    model.add(layers.BatchNormalization())</span><br><span class="line">    model.add(layers.LeakyReLU(alpha=<span class="number">0.2</span>))</span><br><span class="line"></span><br><span class="line">    model.add(layers.Conv2D(<span class="number">1</span>,kernel_size=<span class="number">5</span>,strides=<span class="number">1</span>,padding=<span class="string">&#x27;same&#x27;</span>,use_bias=<span class="literal">False</span>))</span><br><span class="line">    model.add(layers.Activation(<span class="string">&quot;tanh&quot;</span>))</span><br><span class="line"></span><br><span class="line">    model.summary()</span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line">generator = build_generator()</span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&#x27;generator.index&#x27;</span>):</span><br><span class="line">    generator.load_weights(<span class="string">&#x27;generator&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:   </span><br><span class="line">    init_weight(generator)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>
<pre><code>Model: &quot;sequential&quot;
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense (Dense)                (None, 12544)             1266944   
_________________________________________________________________
reshape (Reshape)            (None, 7, 7, 256)         0         
_________________________________________________________________
batch_normalization (BatchNo (None, 7, 7, 256)         1024      
_________________________________________________________________
leaky_re_lu (LeakyReLU)      (None, 7, 7, 256)         0         
_________________________________________________________________
conv2d_transpose (Conv2DTran (None, 7, 7, 128)         819200    
_________________________________________________________________
batch_normalization_1 (Batch (None, 7, 7, 128)         512       
_________________________________________________________________
leaky_re_lu_1 (LeakyReLU)    (None, 7, 7, 128)         0         
_________________________________________________________________
conv2d_transpose_1 (Conv2DTr (None, 14, 14, 64)        204800    
_________________________________________________________________
batch_normalization_2 (Batch (None, 14, 14, 64)        256       
_________________________________________________________________
leaky_re_lu_2 (LeakyReLU)    (None, 14, 14, 64)        0         
_________________________________________________________________
conv2d_transpose_2 (Conv2DTr (None, 28, 28, 32)        51200     
_________________________________________________________________
batch_normalization_3 (Batch (None, 28, 28, 32)        128       
_________________________________________________________________
leaky_re_lu_3 (LeakyReLU)    (None, 28, 28, 32)        0         
_________________________________________________________________
conv2d (Conv2D)              (None, 28, 28, 1)         800       
_________________________________________________________________
activation (Activation)      (None, 28, 28, 1)         0         
=================================================================
Total params: 2,344,864
Trainable params: 2,343,904
Non-trainable params: 960
_________________________________________________________________
</code></pre>
<h2 id="构造判决器"><a class="markdownIt-Anchor" href="#构造判决器"></a> 构造判决器</h2>
<p>此处最后使用sigmoid激活函数，同时参考其他人代码加入了Dropout，不然后面训练的时候都没有对抗，两个模型直接摆烂（哭）。还需要注意的是D不能太强，不然G训练不起来</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">build_discriminator</span>() -&gt; tf.keras.Model:</span><br><span class="line">    model = tf.keras.models.Sequential()</span><br><span class="line">    model.add(layers.InputLayer(input_shape=(<span class="number">28</span>,<span class="number">28</span>,<span class="number">1</span>)))</span><br><span class="line">    <span class="comment"># 28*28*1 -&gt; 14*14*64</span></span><br><span class="line">    model.add(layers.Conv2D(<span class="number">64</span>, (<span class="number">5</span>, <span class="number">5</span>), strides=(<span class="number">2</span>, <span class="number">2</span>), padding=<span class="string">&#x27;same&#x27;</span>,use_bias=<span class="literal">False</span>))</span><br><span class="line">    model.add(layers.LeakyReLU(alpha=<span class="number">0.2</span>))</span><br><span class="line">    model.add(layers.Dropout(<span class="number">0.3</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 14*14*64 -&gt; 7*7*128</span></span><br><span class="line">    model.add(layers.Conv2D(<span class="number">128</span>, (<span class="number">5</span>, <span class="number">5</span>), strides=(<span class="number">2</span>, <span class="number">2</span>), padding=<span class="string">&#x27;same&#x27;</span>,use_bias=<span class="literal">False</span>))</span><br><span class="line">    model.add(layers.LeakyReLU(alpha=<span class="number">0.2</span>))</span><br><span class="line">    model.add(layers.Dropout(<span class="number">0.3</span>))</span><br><span class="line"></span><br><span class="line">    model.add(layers.Flatten())</span><br><span class="line">    model.add(layers.Dense(<span class="number">1</span>,activation=<span class="string">&#x27;sigmoid&#x27;</span>))</span><br><span class="line">    </span><br><span class="line">    model.summary()</span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line">discriminator = build_discriminator()</span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&#x27;discriminator.index&#x27;</span>):</span><br><span class="line">    discriminator.load_weights(<span class="string">&#x27;discriminator&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    init_weight(discriminator)</span><br></pre></td></tr></table></figure>
<pre><code>Model: &quot;sequential_1&quot;
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv2d_1 (Conv2D)            (None, 14, 14, 64)        1600      
_________________________________________________________________
leaky_re_lu_4 (LeakyReLU)    (None, 14, 14, 64)        0         
_________________________________________________________________
dropout (Dropout)            (None, 14, 14, 64)        0         
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 7, 7, 128)         204800    
_________________________________________________________________
leaky_re_lu_5 (LeakyReLU)    (None, 7, 7, 128)         0         
_________________________________________________________________
dropout_1 (Dropout)          (None, 7, 7, 128)         0         
_________________________________________________________________
flatten (Flatten)            (None, 6272)              0         
_________________________________________________________________
dense_1 (Dense)              (None, 1)                 6273      
=================================================================
Total params: 212,673
Trainable params: 212,673
Non-trainable params: 0
_________________________________________________________________
</code></pre>
<h2 id="生成联合模型"><a class="markdownIt-Anchor" href="#生成联合模型"></a> 生成联合模型</h2>
<p>根据G和D生成联合模型，采用BCE LOSS。优化器根据论文Adam优化器，学习率按照论文选择0.0002，beta_1选择0.5。需要注意的是这里设置了D的trainable为False。而D编译后就算设置了trainable为False也可以训练，而联合模型编译时D设置了不能训练，因此联合模型只会训练G。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">build_DCGAN</span>(<span class="params">discriminator: tf.keras.Model, generator: tf.keras.Model</span>) -&gt; tf.keras.Model:</span><br><span class="line">    discriminator.<span class="built_in">compile</span>(loss=<span class="string">&#x27;binary_crossentropy&#x27;</span>,</span><br><span class="line">                          optimizer=tf.keras.optimizers.Adam(learning_rate=<span class="number">0.0002</span>,beta_1=<span class="number">0.5</span>),</span><br><span class="line">                          metrics=[<span class="string">&#x27;accuracy&#x27;</span>])</span><br><span class="line">    discriminator.trainable = <span class="literal">False</span></span><br><span class="line">    noise = layers.Input(shape=<span class="number">100</span>)</span><br><span class="line">    img = generator(noise)</span><br><span class="line">    valid = discriminator(img)</span><br><span class="line">    model = tf.keras.Model(noise,valid)</span><br><span class="line">    model.summary()</span><br><span class="line">    model.<span class="built_in">compile</span>(loss=<span class="string">&#x27;binary_crossentropy&#x27;</span>,</span><br><span class="line">                          optimizer=tf.keras.optimizers.Adam(learning_rate=<span class="number">0.0002</span>,beta_1=<span class="number">0.5</span>))</span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line">dcgan = build_DCGAN(discriminator,generator)</span><br></pre></td></tr></table></figure>
<pre><code>Model: &quot;model&quot;
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_3 (InputLayer)         [(None, 100)]             0         
_________________________________________________________________
sequential (Sequential)      (None, 28, 28, 1)         2344864   
_________________________________________________________________
sequential_1 (Sequential)    (None, 1)                 212673    
=================================================================
Total params: 2,557,537
Trainable params: 2,343,904
Non-trainable params: 213,633
_________________________________________________________________
</code></pre>
<h2 id="保存和显示图片"><a class="markdownIt-Anchor" href="#保存和显示图片"></a> 保存和显示图片</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;./images&#x27;</span>):</span><br><span class="line">    os.mkdir(<span class="string">&#x27;./images&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">plot_images</span>(<span class="params">save2file=<span class="literal">False</span>, samples=<span class="number">16</span>, step=<span class="number">0</span></span>):</span><br><span class="line">    filename = <span class="string">&quot;./images/mnist_%d.png&quot;</span> % step</span><br><span class="line">    noise = np.random.normal(<span class="number">0</span>, <span class="number">1</span>, (samples, <span class="number">100</span>))</span><br><span class="line"></span><br><span class="line">    images = generator.predict(noise)</span><br><span class="line"></span><br><span class="line">    plt.figure(figsize=(<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(images.shape[<span class="number">0</span>]):</span><br><span class="line">        plt.subplot(<span class="number">4</span>, <span class="number">4</span>, i+<span class="number">1</span>)</span><br><span class="line">        image = images[i, :, :, :]</span><br><span class="line">        plt.imshow(image[:,:,<span class="number">0</span>])</span><br><span class="line">        plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    plt.tight_layout()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> save2file:</span><br><span class="line">        plt.savefig(filename)</span><br><span class="line">        plt.close(<span class="string">&#x27;all&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        plt.show()</span><br></pre></td></tr></table></figure>
<h1 id="step-3-训练模型"><a class="markdownIt-Anchor" href="#step-3-训练模型"></a> step 3 训练模型</h1>
<p>根据论文设置batch_size为128，输入范围转换为[-1,1]</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">d_loss_list = []</span><br><span class="line">g_loss_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train</span>(<span class="params">batch_size=<span class="number">128</span>, epochs=<span class="number">50</span>, save_interval=<span class="number">10</span></span>):</span><br><span class="line">    </span><br><span class="line">    dataset = load_dataset(batch_size)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(epochs):</span><br><span class="line"></span><br><span class="line">        pbar = tqdm(<span class="built_in">enumerate</span>(dataset))</span><br><span class="line">        <span class="keyword">for</span> step, real_img <span class="keyword">in</span> pbar:</span><br><span class="line">            bs = <span class="built_in">len</span>(real_img)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># label</span></span><br><span class="line">            real = np.ones((bs, <span class="number">1</span>))</span><br><span class="line">            fake = np.zeros((bs, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># generate noise</span></span><br><span class="line">            noise = np.random.normal(<span class="number">0</span>, <span class="number">1</span>, (bs, <span class="number">100</span>))</span><br><span class="line">            fake_img = generator.predict(noise)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># train d</span></span><br><span class="line">            d_loss_real = discriminator.train_on_batch(real_img, real)</span><br><span class="line">            d_loss_fake = discriminator.train_on_batch(fake_img, fake)</span><br><span class="line">            d_loss, accuracy = <span class="number">0.5</span>*np.add(d_loss_real, d_loss_fake)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># train g</span></span><br><span class="line">            noise = np.random.normal(<span class="number">0</span>, <span class="number">1</span>, (bs, <span class="number">100</span>))</span><br><span class="line">            fake_img = generator.predict(noise)</span><br><span class="line">            g_loss = dcgan.train_on_batch(noise, real)</span><br><span class="line"></span><br><span class="line">            pbar.set_postfix(&#123;<span class="string">&#x27;step&#x27;</span>: step, <span class="string">&#x27;d_loss&#x27;</span>: <span class="string">&#x27;&#123;:.4f&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                d_loss), <span class="string">&#x27;acc&#x27;</span>: <span class="string">&#x27;&#123;:.4f&#125;&#x27;</span>.<span class="built_in">format</span>(accuracy), <span class="string">&#x27;g_loss&#x27;</span>: <span class="string">&#x27;&#123;:.4f&#125;&#x27;</span>.<span class="built_in">format</span>(g_loss)&#125;)</span><br><span class="line"></span><br><span class="line">        d_loss_list.append(d_loss)</span><br><span class="line">        g_loss_list.append(g_loss)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> epoch % save_interval == <span class="number">0</span> <span class="keyword">or</span> epoch == (epochs-<span class="number">1</span>):</span><br><span class="line">            plot_images(save2file=<span class="literal">True</span>, step=epoch)</span><br><span class="line">            generator.save_weights(<span class="string">&#x27;generator&#x27;</span>, <span class="literal">True</span>)</span><br><span class="line">            discriminator.save_weights(<span class="string">&#x27;discriminator&#x27;</span>, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">train(epochs=<span class="number">50</span>,save_interval=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<pre><code>469it [01:57,  4.01it/s, step=468, d_loss=0.4450, acc=0.9115, g_loss=0.1112]
469it [01:53,  4.12it/s, step=468, d_loss=0.5188, acc=0.8750, g_loss=0.8756]
469it [01:53,  4.13it/s, step=468, d_loss=0.6582, acc=0.6354, g_loss=1.1004]
469it [01:53,  4.12it/s, step=468, d_loss=0.6392, acc=0.6667, g_loss=1.0247]
469it [01:53,  4.15it/s, step=468, d_loss=0.6302, acc=0.6510, g_loss=0.9042]
469it [01:53,  4.14it/s, step=468, d_loss=0.4286, acc=0.8490, g_loss=1.3098]
469it [01:53,  4.13it/s, step=468, d_loss=0.5711, acc=0.7552, g_loss=1.0918]
469it [01:54,  4.11it/s, step=468, d_loss=0.1656, acc=0.9531, g_loss=0.0233]
469it [01:53,  4.13it/s, step=468, d_loss=0.4908, acc=0.8177, g_loss=1.5465]
469it [01:53,  4.13it/s, step=468, d_loss=0.4977, acc=0.7656, g_loss=1.1850]
469it [01:54,  4.11it/s, step=468, d_loss=0.4030, acc=0.8646, g_loss=1.3088]
469it [01:53,  4.12it/s, step=468, d_loss=0.4622, acc=0.8177, g_loss=0.6755]
469it [01:53,  4.13it/s, step=468, d_loss=0.2610, acc=0.9323, g_loss=0.5214]
469it [01:53,  4.14it/s, step=468, d_loss=0.3714, acc=0.8646, g_loss=1.7093]
469it [01:52,  4.17it/s, step=468, d_loss=0.6514, acc=0.6458, g_loss=1.2826]
469it [01:52,  4.17it/s, step=468, d_loss=0.5218, acc=0.7448, g_loss=1.6180]
469it [01:52,  4.16it/s, step=468, d_loss=0.3786, acc=0.8594, g_loss=1.4780]
469it [01:52,  4.16it/s, step=468, d_loss=0.2106, acc=0.9427, g_loss=2.5880]
469it [01:52,  4.15it/s, step=468, d_loss=0.6040, acc=0.7240, g_loss=1.7180]
469it [01:52,  4.16it/s, step=468, d_loss=0.3441, acc=0.8490, g_loss=1.5291]
469it [01:52,  4.16it/s, step=468, d_loss=0.3020, acc=0.8958, g_loss=2.0768]
469it [01:52,  4.15it/s, step=468, d_loss=0.4162, acc=0.8333, g_loss=1.6850]
469it [01:52,  4.17it/s, step=468, d_loss=0.3279, acc=0.8698, g_loss=1.3302]
469it [01:53,  4.14it/s, step=468, d_loss=0.2163, acc=0.9271, g_loss=2.9825]
469it [01:53,  4.13it/s, step=468, d_loss=0.2229, acc=0.9167, g_loss=2.2349]
469it [01:52,  4.15it/s, step=468, d_loss=0.2062, acc=0.9375, g_loss=1.6529]
469it [01:53,  4.14it/s, step=468, d_loss=0.1285, acc=0.9635, g_loss=2.8505]
469it [01:53,  4.14it/s, step=468, d_loss=0.3163, acc=0.8750, g_loss=2.8405]
469it [01:53,  4.15it/s, step=468, d_loss=0.3621, acc=0.8698, g_loss=2.1161]
469it [01:53,  4.12it/s, step=468, d_loss=0.2909, acc=0.9062, g_loss=2.6993]
469it [01:53,  4.15it/s, step=468, d_loss=0.2011, acc=0.9271, g_loss=2.5064]
469it [01:53,  4.12it/s, step=468, d_loss=0.2564, acc=0.8854, g_loss=2.4029]
469it [01:53,  4.15it/s, step=468, d_loss=0.1781, acc=0.9479, g_loss=1.5723]
469it [01:53,  4.13it/s, step=468, d_loss=0.1547, acc=0.9583, g_loss=1.3841]
469it [01:53,  4.14it/s, step=468, d_loss=0.1384, acc=0.9583, g_loss=1.9002]
469it [01:53,  4.15it/s, step=468, d_loss=0.4499, acc=0.7865, g_loss=2.3525]
469it [01:54,  4.08it/s, step=468, d_loss=0.0773, acc=0.9844, g_loss=0.5579]
469it [01:54,  4.11it/s, step=468, d_loss=0.2629, acc=0.8958, g_loss=0.5309]
469it [02:00,  3.88it/s, step=468, d_loss=0.2257, acc=0.9167, g_loss=2.6041]
469it [01:59,  3.91it/s, step=468, d_loss=0.2283, acc=0.9271, g_loss=1.5944]
469it [02:08,  3.65it/s, step=468, d_loss=0.2495, acc=0.9115, g_loss=2.7131]
469it [02:07,  3.67it/s, step=468, d_loss=0.1437, acc=0.9479, g_loss=0.9581]
469it [02:08,  3.64it/s, step=468, d_loss=0.5403, acc=0.7865, g_loss=2.7837]
469it [02:08,  3.66it/s, step=468, d_loss=0.1985, acc=0.9323, g_loss=2.7737]
469it [02:09,  3.62it/s, step=468, d_loss=0.1488, acc=0.9427, g_loss=0.7168]
469it [02:07,  3.68it/s, step=468, d_loss=0.1167, acc=0.9583, g_loss=0.8895]
469it [02:09,  3.63it/s, step=468, d_loss=0.1243, acc=0.9323, g_loss=2.8780]
469it [02:10,  3.59it/s, step=468, d_loss=0.2008, acc=0.9115, g_loss=2.6001]
469it [02:10,  3.59it/s, step=468, d_loss=0.1474, acc=0.9479, g_loss=1.5862]
469it [02:08,  3.64it/s, step=468, d_loss=0.2088, acc=0.9062, g_loss=3.0232]
</code></pre>
<h1 id="step-4-查看结果"><a class="markdownIt-Anchor" href="#step-4-查看结果"></a> step 4 查看结果</h1>
<p>查看d_loss、g_loss。可以看到两个loss都在震荡，感觉是还没训练完</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line">%config InlineBackend.figure_format = <span class="string">&#x27;svg&#x27;</span></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">5</span>))</span><br><span class="line">plt.title(<span class="string">&quot;Generator and Discriminator Loss During Training&quot;</span>)</span><br><span class="line">plt.plot(g_loss_list,label=<span class="string">&quot;G&quot;</span>)</span><br><span class="line">plt.plot(d_loss_list,label=<span class="string">&quot;D&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;iterations&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Loss&quot;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.0/output_20_0.svg" alt="svg" /></p>
<h2 id="生成动图"><a class="markdownIt-Anchor" href="#生成动图"></a> 生成动图</h2>
<p>将训练图中各个阶段的图片组合起来生成gif图片。虽然效果不是很好，但仍然可以看到数字的形状，没有晶体图</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">anim_file = <span class="string">&#x27;dcgan.gif&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> imageio</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"></span><br><span class="line">filenames = glob.glob(<span class="string">&#x27;./images/mnist_*.png&#x27;</span>)</span><br><span class="line">filenames = <span class="built_in">sorted</span>(filenames)</span><br><span class="line">frames = []</span><br><span class="line"><span class="keyword">for</span> i,filename <span class="keyword">in</span> <span class="built_in">enumerate</span>(filenames):</span><br><span class="line">    image = imageio.imread(filename)</span><br><span class="line">    frames.append(image)</span><br><span class="line"></span><br><span class="line">kargs = &#123; <span class="string">&#x27;duration&#x27;</span>: <span class="number">0.5</span> &#125;</span><br><span class="line">imageio.mimsave(anim_file, frames, <span class="string">&#x27;GIF&#x27;</span>, **kargs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> IPython <span class="keyword">import</span> display</span><br><span class="line">display.Image(filename=anim_file)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.2.0/dcgan.gif" alt="" /></p>
<h2 id="保存模型权重"><a class="markdownIt-Anchor" href="#保存模型权重"></a> 保存模型权重</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">generator.save_weights(<span class="string">&#x27;generator&#x27;</span>,<span class="literal">True</span>)</span><br><span class="line">discriminator.save_weights(<span class="string">&#x27;discriminator&#x27;</span>,<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://arxiv.org/abs/1406.2661">Generative Adversarial Nets</a></p>
<p><a href="https://arxiv.org/abs/1511.06434">Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks</a></p>
<p><a href="https://github.com/eriklindernoren/Keras-GAN">Keras-GAN</a></p>
<p><a href="https://towardsdatascience.com/dcgans-deep-convolutional-generative-adversarial-networks-c7f392c2c8f8">DCGANs (Deep Convolutional Generative Adversarial Networks)</a></p>
<p><a href="https://github.com/eriklindernoren/PyTorch-GAN">PyTorch-GAN</a></p>
<p><a href="https://github.com/soumith/ganhacks">How to Train a GAN? Tips and tricks to make GANs work</a></p>
<p><a href="https://www.tensorflow.org/tutorials/generative/dcgan?hl=zh-cn">DCGAN</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>GAN</tag>
      </tags>
  </entry>
  <entry>
    <title>常用软件镜像源</title>
    <url>/2021/08/11/source-mirror/</url>
    <content><![CDATA[<p>为了制作魔镜，重装了树莓派系统。因为要将各种软件源设置镜像源，因此写这样一条博客方便自己查询。<br />
封面《9-nine-NewEpisode》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>其实各个镜像源站都写有各自的设置的方式，本文基本上只是搬运和整合，附上自己的一点点感受。此处列出我常用的镜像站</p>
<ul>
<li><a href="https://developer.aliyun.com/mirror/">阿里云镜像站</a>:个人觉得最好用的镜像站，速度快且稳定，之前维护时间很长我还以为阿里不搞了，最近恢复了</li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/">清华镜像站</a>:印象里anaconda之前因为版权问题，镜像源全部下架。后来好像清华源经过交涉重新构建了镜像源。因此现在conda镜像用清华，不过有时候下载还是不好用</li>
<li><a href="http://mirrors.zju.edu.cn/">浙大镜像站</a>:这个没用过，感觉不是很好，之后在浙大校园内再试一试</li>
</ul>
<h1 id="树莓派镜像"><a class="markdownIt-Anchor" href="#树莓派镜像"></a> 树莓派镜像</h1>
<p>打开<code>/etc/apt/sources.list</code>，修改为以下内容。需要注意不同版本有所不同</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deb https://mirrors.aliyun.com/raspbian/raspbian/ buster main non-free contrib</span><br><span class="line">deb-src https://mirrors.aliyun.com/raspbian/raspbian/ buster main non-free contrib</span><br></pre></td></tr></table></figure>
<h1 id="ubuntu镜像"><a class="markdownIt-Anchor" href="#ubuntu镜像"></a> Ubuntu镜像</h1>
<p>同样是打开<code>/etc/apt/sources.list</code>，将<code>https://archive.ubuntu.com/</code>替换为<code>mirrors.aliyun.com</code>，由于要改的地方较多，建议先备份一下。<br />
以ubuntu20.04为例子大致如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>
<h1 id="github镜像"><a class="markdownIt-Anchor" href="#github镜像"></a> github镜像</h1>
<p>github在国内的访问时好时坏，用VPN的时候会好一点，但是没VPN的时候就很难受。有修改DNS的方法，以前觉得还行，不过好像最近使用的时候不太好用</p>
<h2 id="镜像站"><a class="markdownIt-Anchor" href="#镜像站"></a> 镜像站</h2>
<p>此处推荐一个本人觉得不错的镜像站<br />
<a href="https://github.com.cnpmjs.org/">https://github.com.cnpmjs.org/</a>:下载时只需要将<code>github.com</code>替换为<code>github.com.cnpmjs.org</code>即可。<br />
例子如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 原本</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/qxdn/live2d-widget.git</span><br><span class="line"><span class="comment"># 镜像源</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com.cnpmjs.org/qxdn/live2d-widget.git</span><br></pre></td></tr></table></figure>
<h2 id="cdn"><a class="markdownIt-Anchor" href="#cdn"></a> cdn</h2>
<p>此处推荐一个本人常用的cdn。<br />
<a href="https://www.jsdelivr.com/">jsdelivr</a>:除了github以外还可以加速npm。用法也很简单，在官网有说。<br />
简单例子如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 原本</span></span><br><span class="line">https://raw.githubusercontent.com/qxdn/live2d-widget/master/autoload.js</span><br><span class="line"><span class="comment"># 镜像源</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/qxdn/live2d-widget@latest/autoload.js</span><br></pre></td></tr></table></figure>
<h1 id="java"><a class="markdownIt-Anchor" href="#java"></a> java</h1>
<p>java中举一下<code>maven</code>的例子，因为本人基本上都用的是<code>maven</code>，没怎么使用<code>gradle</code>就不提<code>gradle</code>。</p>
<p>一般来说<code>maven</code>的配置文件在<code>conf/settings.xml</code>里面，找到<code>&lt;mirrors&gt;&lt;/mirrors&gt;</code>添加如下代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="python"><a class="markdownIt-Anchor" href="#python"></a> python</h1>
<h2 id="pip"><a class="markdownIt-Anchor" href="#pip"></a> pip</h2>
<h3 id="单次使用"><a class="markdownIt-Anchor" href="#单次使用"></a> 单次使用</h3>
<p>以安装<code>httpx</code>为例子</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 原本安装</span></span><br><span class="line">pip install httpx</span><br><span class="line"><span class="comment"># 镜像源</span></span><br><span class="line">pip install -i https://mirrors.aliyun.com/pypi/simple/ httpx</span><br></pre></td></tr></table></figure>
<h3 id="长期使用"><a class="markdownIt-Anchor" href="#长期使用"></a> 长期使用</h3>
<p>Linux下找到<code>~/.pip/pip.conf</code>,Windows下新建<code>C:\Users\&#123;Your User Name&#125;\pip\pip.ini</code>文件。修改内容如下</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span> = https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"></span><br><span class="line"><span class="section">[install]</span></span><br><span class="line"><span class="attr">trusted-host</span>=mirrors.aliyun.com</span><br></pre></td></tr></table></figure>
<h2 id="conda"><a class="markdownIt-Anchor" href="#conda"></a> conda</h2>
<p>修改用户目录下的<code>.condarc</code>文件，对于windows用户可能要先执行一遍<code>conda config --set show_channel_urls yes</code>才行。修改完后可能还需要执行<code>conda clean -i</code>来清理缓存。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">channels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">defaults</span></span><br><span class="line"><span class="attr">show_channel_urls:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">default_channels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span></span><br><span class="line"><span class="attr">custom_channels:</span></span><br><span class="line">  <span class="attr">conda-forge:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">msys2:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">bioconda:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">menpo:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">pytorch:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">simpleitk:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br></pre></td></tr></table></figure>
<h1 id="javascript"><a class="markdownIt-Anchor" href="#javascript"></a> javascript</h1>
<p>npm镜像一般都是使用的淘宝镜像，此外还有一个cnpm工具专门用于代理淘宝的npm<br />
<a href="http://npm.taobao.org/">淘宝npm镜像</a>:本文撰写期间在维护升级，还不清楚能不能正常使用。不过之前阿里云镜像维护期间也能正常使用，应该只是web页面升级不影响使用。<br />
<a href="https://cnpmjs.org/">cnpm</a>:用于代理淘宝镜像的npm工具，国内很好用</p>
<h2 id="临时使用"><a class="markdownIt-Anchor" href="#临时使用"></a> 临时使用</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org install hexo</span><br></pre></td></tr></table></figure>
<h2 id="长期使用-2"><a class="markdownIt-Anchor" href="#长期使用-2"></a> 长期使用</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line"><span class="comment"># 验证是否成功方法</span></span><br><span class="line">npm config <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>
<h2 id="使用cnpm"><a class="markdownIt-Anchor" href="#使用cnpm"></a> 使用cnpm</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">cnpm install hexo</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>本文为常用软件镜像源的归档，方便本人在后续使用时翻阅，如果遇到了问题还请去镜像站看下使用方法。</p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>python</tag>
        <tag>Linux</tag>
        <tag>javascript</tag>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>文件哈希值</title>
    <url>/2021/08/13/file-hash/</url>
    <content><![CDATA[<p>最近上传百度云的时候发现有极速秒传，从而了解到了文件哈希值。特此记录。<br />
封面《金色ラブリッチェ》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>最近上传百度云的时候发现有个文件直接极速秒传了，像我这种一般不给百度云送钱的人是不太可能享用VIP功能的，因此查了查极速秒传的原理。</p>
<h1 id="文件哈希"><a class="markdownIt-Anchor" href="#文件哈希"></a> 文件哈希</h1>
<p>其实原理很简单，极速秒传只是因为你上传的文件在百度云里面有别人上传的一模一样的文件，因此只需要将别人上传给你的转存一份即可。那么如何判断文件是否一样呢，这就主要靠文件哈希值来判断。</p>
<p>哈希是一种从文件计算固定大小的位串值的算法。文件基本上包含数据块。哈希将此数据转换为更短的固定长度值或表示原始字符串的键值。哈希值可以被认为是该文件中所有内容的提炼摘要。</p>
<p>一个好的哈希算法会表现出一种称为雪崩效应的特性，即文件中的单个位或一个字节的数据发生变化，所产生的哈希输出也会显著改变。没有这样效果的哈希函数被认为具有较差的随机性，很容易被黑客破解。</p>
<p>这里我们来靠<code>powershell</code>里面的<code>Get-FileHash</code>函数来做个实验吧，<code>Get-FileHash</code>的文档在<a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-filehash?view=powershell-7.1">此</a></p>
<p>先新建两个txt文件，并写入内容，其中只有一个<code>h</code>区分大小写</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;hash&quot;</span> &gt; test.txt</span><br><span class="line"><span class="comment"># h 变 H</span></span><br><span class="line"><span class="string">&quot;Hash&quot;</span> &gt; test1.txt</span><br></pre></td></tr></table></figure>
<p>然后我们使用<code>Get-FileHash</code>来计算两个文件的<code>SHA256</code>值</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Get-FileHash 默认使用 SHA256</span></span><br><span class="line"><span class="built_in">Get-FileHash</span> test.txt | <span class="built_in">Format-List</span></span><br><span class="line"><span class="built_in">Get-FileHash</span> test1.txt | <span class="built_in">Format-List</span></span><br></pre></td></tr></table></figure>
<p>结果如下，可以看到即使两个文件只有一个字母不一样，<code>SHA256</code>的值差的却非常的多。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.8/sha256.png" alt="" /><br />
除了<code>SHA256</code>以外，<code>Get-FileHash</code>还支持<code>MD5</code>、<code>SHA1</code>、<code>SHA384</code>、<code>SHA512</code>。使用方法如下</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-FileHash</span> test1.txt <span class="literal">-Algorithm</span> MD5 | <span class="built_in">Format-List</span></span><br></pre></td></tr></table></figure>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>由于文件哈希的特性，比较两个文件是否一样往往不需要完全比较文件内的所有内容，只需要比较哈希值即可。比如在<a href="https://msdn.itellyou.cn/">MSDN</a>中下载文件，同时在详细信息页面里还会附上改文件的<code>SHA1</code>值，只需要对比就可以知道你下载的是否为同一文件，而不是被别人暗中修改的文件。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://www.jianshu.com/p/938c5dd2caa5">计算文件哈希值</a></p>
<p><a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-filehash?view=powershell-7.1">Get-FileHash</a></p>
<p><a href="https://www.2brightsparks.com/resources/articles/introduction-to-hashing-and-its-uses.html">Introduction to Hashing and its uses</a></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>hash</tag>
        <tag>百度云</tag>
      </tags>
  </entry>
  <entry>
    <title>美化终端</title>
    <url>/2021/08/17/beautify-terminal/</url>
    <content><![CDATA[<p>不小心将oh-my-posh从V2升级到了V3，许多东西有了较大变化。此篇博客记录一下主题的修改记录。<br />
封面《月に寄りそう乙女の作法》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p><a href="https://github.com/JanDeDobbeleer/oh-my-posh">oh-my-posh</a>是一个可自定义的shell提示引擎。oh-my-posh v3相较于oh-my-posh v2，完全使用了GO编写，使其可以跨平台运行，同时对主题的修改更容易。</p>
<p>Oh-My-Posh V3的文档在<a href="https://ohmyposh.dev/docs/">此</a></p>
<h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -Scope CurrentUser可以不需要，因为默认就是CurrentUser</span></span><br><span class="line"><span class="comment"># 可能需要VPN下载</span></span><br><span class="line"><span class="built_in">Install-Module</span> <span class="built_in">oh</span><span class="literal">-my-posh</span> <span class="literal">-Scope</span> CurrentUser</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从V2升级到V3</span></span><br><span class="line"><span class="comment"># 似乎有点点问题，我是卸载重装了</span></span><br><span class="line"><span class="built_in">Update-Module</span> <span class="literal">-Name</span> <span class="built_in">oh</span><span class="literal">-my-posh</span> <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure>
<h1 id="主题配置"><a class="markdownIt-Anchor" href="#主题配置"></a> 主题配置</h1>
<h2 id="展示所有本地主题"><a class="markdownIt-Anchor" href="#展示所有本地主题"></a> 展示所有本地主题</h2>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-PoshThemes</span></span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.7/list-themes.png" alt="展示主题" /></p>
<h2 id="设置主题"><a class="markdownIt-Anchor" href="#设置主题"></a> 设置主题</h2>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 此处以本人比较喜欢的paradox为例</span></span><br><span class="line"><span class="comment"># 设置主题</span></span><br><span class="line"><span class="built_in">Set-PoshPrompt</span> <span class="literal">-Theme</span> paradox</span><br><span class="line"><span class="comment"># 导出当前主题以便修改</span></span><br><span class="line"><span class="built_in">Export-PoshTheme</span> <span class="literal">-FilePath</span> ~/.oh<span class="literal">-my-posh</span>.omp.json</span><br><span class="line"><span class="comment"># 设置自定义的主题</span></span><br><span class="line"><span class="built_in">Set-PoshPrompt</span> <span class="literal">-Theme</span>  ~/.oh<span class="literal">-my-posh</span>.omp.json</span><br></pre></td></tr></table></figure>
<p>需要注意的是现在设置的主题为暂时的，当你打开新的powershell以后就没了，因此还需要编辑<code>$PROFILE</code>来持久化</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 笔记本编辑</span></span><br><span class="line">notepad <span class="variable">$PROFILE</span></span><br><span class="line"><span class="comment"># 或者代码编辑器编辑</span></span><br><span class="line">code <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure>
<p>添加下面一行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set-PoshPrompt</span> <span class="literal">-Theme</span>  ~/.oh<span class="literal">-my-posh</span>.omp.json</span><br></pre></td></tr></table></figure>
<p>如果遇到了数字签名问题，可以参考<a href="https://docs.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_signing?view=powershell-7.1">这</a>里面的RemoteSigned的方法，打开profile文件属性设置为不阻拦。</p>
<h2 id="字体下载"><a class="markdownIt-Anchor" href="#字体下载"></a> 字体下载</h2>
<p>oh-my-posh V3设计使用<a href="https://www.nerdfonts.com/">Nerd Fonts</a>，官方推荐<a href="https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip">Meslo LGM NF</a>。本文配置使用的是<code>MesloLGM NF</code>字体。需要下载完字体后设置终端的字体，否则一些特殊符号无法正常显示</p>
<h1 id="主题定制"><a class="markdownIt-Anchor" href="#主题定制"></a> 主题定制</h1>
<p>考虑到自带的主题无法完美的符合我的要求，因此需要对主题文件进行修改，主要调整conda的全局显示、git和时间的显示。也可以参考其他主题新增一点功能，所有官方主题文件在<a href="https://github.com/JanDeDobbeleer/oh-my-posh/tree/main/themes">此</a></p>
<h2 id="conda"><a class="markdownIt-Anchor" href="#conda"></a> conda</h2>
<p>oh-my-posh默认的python配置只有在含有python文件的目录下才会启动，因此无法看到conda的默认环境。修改起来也比较简单，采用环境变量的形式即可。通过<code>dir env:</code>找到<code>CONDA_DEFAULT_ENV</code>环境变量，设置oh-my-posh中的背景色为红色，设置python的图标，保持字体颜色一致。为了好看和方便，添加到<code>session</code>块之后<code>path</code>块之前。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FF6E6E&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#100e23&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;powerline_symbol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\uE0B0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\uE235&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;var_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CONDA_DEFAULT_ENV&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;powerline&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;envvar&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="git"><a class="markdownIt-Anchor" href="#git"></a> git</h2>
<p>oh-my-posh在高版本中的git不显示详细信息，可以通过配置主题解决。配置如下，也可以使用<code>posh-git</code>直接配置。经过尝试<code>posh-git</code>无法达到我需要的效果。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;git&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;powerline&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;powerline_symbol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\uE0B0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#193549&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#95ffa4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;display_status&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;display_stash_count&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;display_upstream_icon&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="time"><a class="markdownIt-Anchor" href="#time"></a> time</h2>
<p>参考其他主题，在每行的右边新增一个显示当前时间的图标。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;alignment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;right&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prompt&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;segments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;time&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;plain&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffffff&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;time_format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[15:04:05]&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="完整配置文件"><a class="markdownIt-Anchor" href="#完整配置文件"></a> 完整配置文件</h2>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;$schema&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;blocks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;alignment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;left&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;segments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffe9aa&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#100e23&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;powerline_symbol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;powerline&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;root&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffffff&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#100e23&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;powerline_symbol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;powerline&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;session&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;display_host&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FF6E6E&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#100e23&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;powerline_symbol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;  &quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;var_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CONDA_DEFAULT_ENV&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;powerline&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;envvar&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#91ddff&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#100e23&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;powerline_symbol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;folder_icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;folder_separator_icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;  &quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;full&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;powerline&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;path&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;git&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;powerline&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;powerline_symbol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\uE0B0&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#193549&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#95ffa4&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;display_status&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;display_stash_count&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;display_upstream_icon&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ff8080&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffffff&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;powerline_symbol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot; &quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;powerline&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;exit&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prompt&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;alignment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;right&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prompt&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;segments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;time&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;plain&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffffff&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;time_format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[15:04:05]&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;alignment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;left&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;newline&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;segments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#007ACC&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;❯&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;plain&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prompt&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;final_space&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="效果图"><a class="markdownIt-Anchor" href="#效果图"></a> 效果图</h2>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.7/theme.png" alt="最终效果" /></p>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>总体来说oh-my-posh v3比v2更具有移植性，同配置起来更方便，默认主题也多，相对也更好看。个人主观感觉启动速度也快了不少。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://ohmyposh.dev/docs/">oh-my-posh doc</a><br />
<a href="https://docs.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_signing?view=powershell-7.1">数字签名</a></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Terminal</tag>
      </tags>
  </entry>
  <entry>
    <title>powershell设置代理</title>
    <url>/2021/08/18/powershell-proxy/</url>
    <content><![CDATA[<p>本文主要是为powershell、cmd等windows终端设置代理<br />
封面《LAMUNATION！》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>在powershell中使用一些工具下载外网资源的时候经常会碰到一些网络问题。这些时候往往设置一下VPN的代理模式为全局代理即可。但往往有些时候设置全局代理也没用，亦或者一时没法切换代理模式（比如Chrome下载一些资源的时候），这些时候就需要设置powershell的代理了。</p>
<h1 id="powershell设置代理"><a class="markdownIt-Anchor" href="#powershell设置代理"></a> powershell设置代理</h1>
<h2 id="查看代理"><a class="markdownIt-Anchor" href="#查看代理"></a> 查看代理</h2>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">netsh winhttp show proxy</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.6/show-proxy.png" alt="" /></p>
<p>可以虽然我设置了VPN（非全局模式），但是其依然显示直接连接</p>
<h2 id="设置代理"><a class="markdownIt-Anchor" href="#设置代理"></a> 设置代理</h2>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要管理员权限</span></span><br><span class="line"><span class="comment"># 否则 Error writing proxy settings. (5) Access is denied.</span></span><br><span class="line">netsh winhttp <span class="built_in">set</span> proxy <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">41091</span></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">netsh winhttp import proxy source=ie</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.6/set-proxy.png" alt="" /></p>
<p>下面这个不用管理员权限也可，不过无法直接查看。第一次遇见是在vcpkg中使用</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env:HTTP_PROXY</span>=<span class="string">&quot;http://127.0.0.1:41091&quot;</span></span><br><span class="line"><span class="variable">$env:HTTPS_PROXY</span>=<span class="string">&quot;https://127.0.0.1:41091&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="取消代理"><a class="markdownIt-Anchor" href="#取消代理"></a> 取消代理</h2>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">netsh winhttp reset proxy</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.6/reset-proxy.png" alt="" /></p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="http://woshub.com/using-powershell-behind-a-proxy/">Using PowerShell Behind a Proxy Server</a></p>
<p><a href="https://www.jianshu.com/p/7d08b3c2be95">Windows为cmd/powershell设置代理</a></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Terminal</tag>
        <tag>powershell</tag>
      </tags>
  </entry>
  <entry>
    <title>为powershell添加sudo</title>
    <url>/2021/08/23/powershell-sudo/</url>
    <content><![CDATA[<p>win10本生没有sudo，每次需要管理员操作的时候都需要在开始处右键点击使用管理员模式运行，因此想为win10增加一个unix-like的sudo。<br />
封面《Riddle Joker》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p><code>sudo</code>是unix-like的一种提权操作，使得普通用户可以以root用户的权限做一些操作。放在windows里面就是以管理员权限运行。但是win10里面没有这种命令，需要打开powershell的时候就以管理员模式打开，这样往往会很麻烦，而且重新打开后会没有之前的记录。如果有个sudo命令会减少很多操作。</p>
<h1 id="方法一-powershell函数不推荐"><a class="markdownIt-Anchor" href="#方法一-powershell函数不推荐"></a> 方法一 powershell函数（不推荐）</h1>
<p>参考stack overflow的方法，提示使用<a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/start-process?view=powershell-7.1">Start-Process</a>函数</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">notepad <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure>
<p>编辑<code>$PROFILE</code>文件，如果不存在则会提示创建。往里面新增一下语句</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sudo</span></span> &#123;</span><br><span class="line">    <span class="built_in">Start-Process</span> @args <span class="literal">-verb</span> runas</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="缺点"><a class="markdownIt-Anchor" href="#缺点"></a> 缺点</h2>
<p>用此方法存在以下缺点</p>
<ul>
<li>每次都需要进行UAC验证，没有像Linux的缓存只需要输第一遍密码，用此方法每次都需要验证</li>
<li>每次都会新建窗口，每次都会新建一个窗口来执行命令，不利于DEBUG。（可以试一试<code>npm install</code>，我手速慢没截到）</li>
<li>只支持powershell不支持cmd</li>
</ul>
<h1 id="方法二-使用gsudo推荐"><a class="markdownIt-Anchor" href="#方法二-使用gsudo推荐"></a> 方法二 使用gsudo（推荐）</h1>
<p>在搜索方法的时候，我发现许多人推荐<a href="https://github.com/gerardog/gsudo">gsudo</a>，使用后发现<code>gsudo</code>比较符合我的要求。<br />
在此我使用<code>winget</code>安装，当然也可以去<a href="https://github.com/gerardog/gsudo/releases">release</a>下载安装文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">winget install gsudo</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.5/install.png" alt="" /><br />
使用<code>gsudo</code>无需新建窗口，同时可以通过配置来实现权限缓存。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">gsudo config CacheMode auto</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.5/test1.png" alt="" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.5/test2.png" alt="" /></p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://stackoverflow.com/questions/55314557/how-to-sudo-on-powershell-on-windows">How to sudo on powershell on Windows</a></p>
<p><a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/start-process?view=powershell-7.1">Start-Process</a></p>
<p><a href="https://github.com/gerardog/gsudo">gsudo</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>powershell</tag>
      </tags>
  </entry>
  <entry>
    <title>cs231n-2021作业</title>
    <url>/2021/09/05/cs231n-assignment/</url>
    <content><![CDATA[<p>乘着假期的最后几天刷了一下cs231n，因此记录一下</p>
<span id="more"></span>
<h1 id="cs231n"><a class="markdownIt-Anchor" href="#cs231n"></a> cs231n</h1>
<p>cs231n全称Convolutional Neural Networks for Visual Recognition，是斯坦福大学开设的一门计算机视觉和机器学习的经典课程。一直以来备受推荐。</p>
<p>学习方式如下</p>
<ul>
<li>课程视频：没找到2021的视频，只找到了2017的视频。<a href="https://www.youtube.com/watch?v=vT1JzLTH4G4&amp;list=PLC1qU-LWwrF64f4QKQT-Vg5Wr4qEE1Zxk">Youtube</a>，如果网速不行可以看<a href="https://www.bilibili.com/video/BV1Dx411n7UE">bilibili</a>的搬运，有cc字幕，不过翻译不太行，建议看英文，中文只辅助理解</li>
<li>课程笔记：<a href="https://cs231n.github.io/">笔记</a>，除了课程以外还需要课程笔记辅助，里面有一些视频里也没讲的内容</li>
<li>作业：<a href="https://cs231n.github.io/">assignment</a>，完成作业是最好的学习方式，作业的难度有一点点，包含推导导数，根据论文实现部分网络等。如果实在无法完成可以参考github上其他人的实现。尽量在linux或者colab上跑，win上编译cython后的处理有点麻烦，有时还有一点点bug。</li>
</ul>
<p>最后放一下我自己完成的作业<a href="https://github.com/qxdn/cs231n-assignment">assignment</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>常用命令--grep sed awk</title>
    <url>/2021/09/10/common-command/</url>
    <content><![CDATA[<p>在使用Linux的过程中，经常会看到一些命令使用grep、sed和awk，现在来简单的介绍一下这三个常用的命令。<br />
封面《ハミダシクリエイティブ》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>在以前查询各种和Linux有关系的任务资料的时候经常可以看到<code>grep</code>、<code>sed</code>、<code>awk</code>等命令，但是对于他们的作用我没有深入了解过，因此本文将对这几条命令做简单介绍</p>
<h1 id="管道命令"><a class="markdownIt-Anchor" href="#管道命令"></a> 管道命令</h1>
<p>如果需要将bash命令输出进行多重处理的时候就需要用到管道命令，管道命令使用<code>|</code>界定符。与连续命令不同的是，连续命令只是顺序执行，各个命令不存在相关性，而管道命令会将上一个命令的正确输出作为下一个命令的输入。管道命令需要注意的有以下几点</p>
<ul>
<li>管道命令仅会处理标准输出，忽略标准错误(可以通过数据流重定向来解决，即<code>2&gt;&amp;1</code>)</li>
<li>管道命令必须要能够接受来自前一个命令的数据作为标准输入处理</li>
</ul>
<h2 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h2>
<p>寻找当前目录下含有bash的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -a | grep bash</span><br></pre></td></tr></table></figure>
<h1 id="grep"><a class="markdownIt-Anchor" href="#grep"></a> grep</h1>
<p><code>grep</code>(globally search a regular expression and print)是管道命令的一种。<code>grep</code>是分析一行信息，若其中有我们需要的信息，就将该行拿出来</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line">grep [-acinv] [--color=auto] <span class="string">&#x27;查找字符&#x27;</span> filename</span><br><span class="line"><span class="comment"># 选项</span></span><br><span class="line">-a:将 binary 文件以 text 文件方式查找数据</span><br><span class="line">-c:计算‘查找字符串’次数</span><br><span class="line">-i:忽略大小写</span><br><span class="line">-n:输出行号</span><br><span class="line">-v:反向选择</span><br><span class="line">--color=auto: 关键字部分添加颜色</span><br></pre></td></tr></table></figure>
<h2 id="例子-2"><a class="markdownIt-Anchor" href="#例子-2"></a> 例子</h2>
<p>以我之前常用的寻找java进程为例，使用<code>ps</code>命令找到所有进程，在使用<code>grep</code>进行过滤，这样就能找到java web的进程了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -ef | grep java</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.4/grep.png" alt="" /><br />
<code>grep</code>除了普通的字符串以外还支持正则表达式，是一个很强大的命令</p>
<h1 id="sed"><a class="markdownIt-Anchor" href="#sed"></a> sed</h1>
<p><code>sed</code>也是一个管道命令，可以分析标准输入，可以将数据进行替换、删除、新增、选取特定行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line">sed [-nefr] [操作]</span><br><span class="line"><span class="comment"># 选项</span></span><br><span class="line">-n: 安静模式，只会将特殊处理的那一行列出来</span><br><span class="line">-e: 直接在命令行模式上进行sed操作编辑</span><br><span class="line">-f: 直接将sed的操作写到一个输出里</span><br><span class="line">-r: sed的操作使用的是拓展型正则语法（默认基础型正则）</span><br><span class="line">-i: 直接修改读取的文件内容，而不是屏幕输出</span><br><span class="line"><span class="comment"># 操作说明 [n1[,n2]] function</span></span><br><span class="line">a: 新增，在目前的下一行新增字符</span><br><span class="line">c: 替换，后面可以借字符，这些字符替换n1,n2之间的行</span><br><span class="line">d: 删除</span><br><span class="line">i: 插入,插入目前的上一行</span><br><span class="line">p: 打印，将选择的数据打印出来</span><br><span class="line">s: 替换，可以直接替换的工作，s/old/new/g</span><br></pre></td></tr></table></figure>
<h2 id="例子-3"><a class="markdownIt-Anchor" href="#例子-3"></a> 例子</h2>
<p>新建<code>test.txt</code>写入如下内容</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">line 1</span><br><span class="line">line line 2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">this is line 7</span><br></pre></td></tr></table></figure>
<p>sed例子</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除2-5行</span></span><br><span class="line"><span class="built_in">nl</span> test.txt | sed <span class="string">&#x27;2,5d&#x27;</span></span><br><span class="line"><span class="comment"># 第三行的下一行（第四行）加上 this is new line</span></span><br><span class="line"><span class="comment"># 如果要加在前面则只需要将a换成i</span></span><br><span class="line"><span class="built_in">nl</span> test.txt | sed <span class="string">&#x27;3a this is new line&#x27;</span></span><br><span class="line"><span class="comment"># 2-5行替换为 new line</span></span><br><span class="line"><span class="built_in">nl</span> test.txt | sed <span class="string">&#x27;2,5c new line&#x27;</span></span><br><span class="line"><span class="comment"># s的使用</span></span><br><span class="line"><span class="comment"># 所有line换成new</span></span><br><span class="line"><span class="built_in">nl</span> test.txt | sed <span class="string">&#x27;s/line/new/g&#x27;</span></span><br><span class="line"><span class="comment"># 每行的第一个line换成new</span></span><br><span class="line"><span class="built_in">nl</span> test.txt | sed <span class="string">&#x27;s/line/new/1&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.4/sed.png" alt="" /></p>
<h1 id="awk"><a class="markdownIt-Anchor" href="#awk"></a> awk</h1>
<p>相较于sed常常处理一行数据，awk倾向于以列来处理数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;条件类型1&#123;操作1&#125;条件类型2&#123;操作2&#125;...&#x27;</span> filename</span><br></pre></td></tr></table></figure>
<h2 id="例子-4"><a class="markdownIt-Anchor" href="#例子-4"></a> 例子</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在test.txt写下如下内容</span></span><br><span class="line">2 this is a <span class="built_in">test</span></span><br><span class="line">3 Are you like awk</span><br><span class="line">This<span class="string">&#x27;s a test</span></span><br><span class="line"><span class="string">10 There are orange,apple,mongo</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 每行按空格或TAB分割，输出文本中的1、4项</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print $1,$4&#125;&#x27;</span> test.txt</span><br><span class="line"><span class="comment"># 用,分割</span></span><br><span class="line">awk -F, <span class="string">&#x27;&#123;print $1,$2&#125;&#x27;</span> test.txt</span><br><span class="line"><span class="comment"># 注意begin，否则第一行默认空格 tab</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;,&quot;&#125;&#123;print $1,$2&#125;&#x27;</span> test.txt</span><br><span class="line"><span class="comment"># 统计数据</span></span><br><span class="line"><span class="comment"># NF 每行($0)拥有的字段总数，$0表示一整列数据</span></span><br><span class="line"><span class="comment"># NR 表示当前为第几行</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print $1,&quot;\t lines:&quot; NR &quot;\t columns:&quot;NF&#125;&#x27;</span> test.txt</span><br><span class="line"><span class="comment"># 条件过滤</span></span><br><span class="line"><span class="comment"># 选出第一列大于2的</span></span><br><span class="line">awk <span class="string">&#x27;$1&gt;2&#x27;</span> test.txt</span><br><span class="line"><span class="comment"># 选出第一列等于2，第二列为are</span></span><br><span class="line">awk <span class="string">&#x27;$1&gt;2 &amp;&amp; $2==&quot;Are&quot; &#123;print $1,$2,$3&#125;&#x27;</span> test.txt </span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.4/awk.png" alt="" /></p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://wiki.jikexueyuan.com/project/learn-linux-step-by-step/pipe-command.html">管道命令</a><br />
<a href="">鸟哥的Linux私房菜</a><br />
<a href="https://www.runoob.com/linux/linux-comm-awk.html">Linux awk 命令</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>junit5测试</title>
    <url>/2021/09/18/junit5/</url>
    <content><![CDATA[<p>刷了多道leetcode后发觉每次写main测试很麻烦，因此稍微对项目进行了调整，转为使用junit进行测试。<br />
封面《ハミダシクリエイティブ》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>在leetcode上进行DEBUG需要充值VIP，因此我一般都是在线下进行DEBUG，然而如果为每道题都DEBUG则需要编写不同的main函数，且切换数据的时候比较麻烦，因此使用junit来进行测试，方便每次debug。</p>
<h1 id="junit5介绍"><a class="markdownIt-Anchor" href="#junit5介绍"></a> JUnit5介绍</h1>
<p>JUnit是基于Java的一个单元测试框架，JUnit5一共由以下几个三部分组成</p>
<ul>
<li>JUnit Platform: 运行在JVM上的一个测试框架，定义了测试的API，可以接入其他测试引擎</li>
<li>JUnit Jupiter: 全新的编程和拓展的测试模型的组合，并为JUnit Platform提供测试引擎</li>
<li>JUnit Vintage: 提供了JUnit3、JUnit4的测试引擎</li>
</ul>
<h1 id="maven中导入"><a class="markdownIt-Anchor" href="#maven中导入"></a> Maven中导入</h1>
<p>参考官方给出的<a href="https://github.com/junit-team/junit5-samples/blob/r5.8.0/junit5-jupiter-starter-maven/pom.xml">JUnit5项目</a></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-bom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="注解"><a class="markdownIt-Anchor" href="#注解"></a> 注解</h1>
<p>以下是一些常见的测试注解，更多的测试注解以及其使用方法请翻阅<a href="https://junit.org/junit5/docs/current/user-guide/#writing-tests-annotations">文档</a></p>
<table>
<thead>
<tr>
<th>Annotation</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>@Test</td>
<td>描述一个方法是测试方法，与JUnit4不同的是此方法不申明任何属性</td>
</tr>
<tr>
<td>@ParameterizedTest</td>
<td>表示该方法为参数化测试</td>
</tr>
<tr>
<td>@RepeatedTest</td>
<td>表示该方法为重复测试</td>
</tr>
<tr>
<td>@TestFactory</td>
<td>表示该方法为动态测试</td>
</tr>
<tr>
<td>@TestTemplate</td>
<td>表示该方法为测试模板</td>
</tr>
<tr>
<td>@TestClassOrder</td>
<td>表示@Nested标注的测试类的执行顺序</td>
</tr>
<tr>
<td>@TestMethodOrder</td>
<td>表示测试方法的执行顺序</td>
</tr>
<tr>
<td>@TestInstance</td>
<td>配置测试实例的生命周期</td>
</tr>
<tr>
<td>@DisplayName</td>
<td>自定义测试的名称</td>
</tr>
<tr>
<td>@DisplayNameGeneration</td>
<td>自定义测试名的生成方法</td>
</tr>
<tr>
<td>@BeforeEach</td>
<td>在每个测试方法测试前执行</td>
</tr>
<tr>
<td>@AfterEach</td>
<td>在每个测试方法执行后执行</td>
</tr>
<tr>
<td>@BeforeAll</td>
<td>在所有测试方法测试前执行，注解的方法必须是static</td>
</tr>
<tr>
<td>@AfterAll</td>
<td>在所有测试方法测试后执行，注解的方法必须是static</td>
</tr>
<tr>
<td>@Nested</td>
<td>描述一个非静态的嵌套测试类</td>
</tr>
<tr>
<td>@Tag</td>
<td>使用定义的标签去过滤一些测试</td>
</tr>
<tr>
<td>@Disabled</td>
<td>忽略一些测试方法</td>
</tr>
<tr>
<td>@Timeout</td>
<td>运行超过了时间会报错</td>
</tr>
<tr>
<td>@ExtendWith</td>
<td>声明的方式拓展测试类</td>
</tr>
<tr>
<td>@RegisterExtension</td>
<td>编程的方式拓展测试类</td>
</tr>
<tr>
<td>@TempDir</td>
<td>使用临时目录进行测试</td>
</tr>
</tbody>
</table>
<h1 id="生命周期"><a class="markdownIt-Anchor" href="#生命周期"></a> 生命周期</h1>
<p>一个标准的测试的生命周期如下所示</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.fail;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assumptions.assumeTrue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.AfterAll;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.AfterEach;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.BeforeAll;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.BeforeEach;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Disabled;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StandardTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeAll</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">initAll</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeEach</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">succeedingTest</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">failingTest</span><span class="params">()</span> &#123;</span><br><span class="line">        fail(<span class="string">&quot;a failing test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@Disabled(&quot;for demonstration purposes&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">skippedTest</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// not executed</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">abortedTest</span><span class="params">()</span> &#123;</span><br><span class="line">        assumeTrue(<span class="string">&quot;abc&quot;</span>.contains(<span class="string">&quot;Z&quot;</span>));</span><br><span class="line">        fail(<span class="string">&quot;test should have been aborted&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterEach</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">tearDown</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterAll</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">tearDownAll</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="参数化测试"><a class="markdownIt-Anchor" href="#参数化测试"></a> 参数化测试</h1>
<p>以目前的需求来说，刷leetcode最需要是参数化测试，因此本次重点就是几种常用的参数化测试</p>
<h2 id="valuesource"><a class="markdownIt-Anchor" href="#valuesource"></a> @ValueSource</h2>
<p><code>@ValueSource</code>是最简单的数据来源之一，可以使用简单的数组来提供测试数据。支持的类型有<code>short</code>,<code>byte</code>,<code>int</code>,<code>long</code>,<code>float</code>,<code>double</code>,<code>char</code>,<code>boolean</code>,<code>java.lang.String</code>,<code>java.lang.Class</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ValueSourceTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ParameterizedTest</span></span><br><span class="line">    <span class="meta">@ValueSource(ints = &#123; 1, 2, 3, 4 &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testLargerThanZero</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">        assertTrue(num &gt; <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对于NULL或者空数据则可以使用<code>@NullSource</code>、<code>@EmptySource</code>、<code>@NullAndEmptySource</code></p>
<h2 id="enumsource"><a class="markdownIt-Anchor" href="#enumsource"></a> @EnumSource</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EnumSourceTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ParameterizedTest</span></span><br><span class="line">    <span class="meta">@EnumSource(names = &#123; &quot;DAYS&quot;, &quot;HOURS&quot; &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(ChronoUnit unit)</span> &#123;</span><br><span class="line">        assertTrue(EnumSet.of(ChronoUnit.DAYS, ChronoUnit.HOURS).contains(unit));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="methodsource"><a class="markdownIt-Anchor" href="#methodsource"></a> @MethodSource</h2>
<p><code>@MethonSource</code>允许你使用一个Method工厂来提供源，需要注意的是提供者必须是static，返回的类型需要是<code>Stream</code>或者<code>Arguments</code>，或者是可以被JUnit转化为<code>Stream</code>的类型，比如<code>Collection</code>,<code>DoubleStream</code>等。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodSourceTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ParameterizedTest</span></span><br><span class="line">    <span class="meta">@MethodSource(&quot;stringProvider&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(String got, String expect)</span> &#123;</span><br><span class="line">        assertEquals(got, expect);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> Stream&lt;Arguments&gt; <span class="title function_">stringProvider</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Stream.of(</span><br><span class="line">            Arguments.of(<span class="string">&quot;apple&quot;</span>,<span class="string">&quot;apple&quot;</span>),</span><br><span class="line">            Arguments.of(<span class="string">&quot;banana&quot;</span>,<span class="string">&quot;banana&quot;</span>),</span><br><span class="line">            Arguments.of(<span class="string">&quot;pea&quot;</span>,<span class="string">&quot;pea&quot;</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="csvsource"><a class="markdownIt-Anchor" href="#csvsource"></a> @CsvSource</h2>
<p><code>@CsvSource</code>允许以分隔符分隔输入列表中的参数。默认的分隔是<code>,</code>，但是可以通过<code>delimiterString</code>进行改变。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CsvSourceTest</span> &#123;</span><br><span class="line">    <span class="meta">@ParameterizedTest</span></span><br><span class="line">    <span class="meta">@CsvSource(&#123;</span></span><br><span class="line"><span class="meta">        &quot;1,1,2&quot;,</span></span><br><span class="line"><span class="meta">        &quot;2,2,4&quot;,</span></span><br><span class="line"><span class="meta">        &quot;3,3,6&quot;</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> add1,<span class="type">int</span> add2,<span class="type">int</span> expect)</span>&#123;</span><br><span class="line">        assertEquals(add1+add2, expect);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="csvfilesource"><a class="markdownIt-Anchor" href="#csvfilesource"></a> @CsvFileSource</h2>
<p><code>@CsvFileSource</code>可以使用csv文件进行测试。创建<code>test.csv</code>文件，如下填充</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">add1,add2,expect</span><br><span class="line">1,1,2</span><br><span class="line">2,2,4</span><br><span class="line">3,2,5</span><br><span class="line">5,4,9</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CsvFileSourceTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ParameterizedTest</span></span><br><span class="line">    <span class="meta">@CsvFileSource(resources = &quot;./test.csv&quot;, numLinesToSkip = 1)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> add1, <span class="type">int</span> add2, <span class="type">int</span> expect)</span> &#123;</span><br><span class="line">        assertEquals(add1 + add2, expect);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="argumentssource"><a class="markdownIt-Anchor" href="#argumentssource"></a> @ArgumentsSource</h2>
<p><code>@ArgumentsSource</code>可以使用<code>ArgumentsProvider</code>进行自定义。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArgumentsSourceTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ParameterizedTest</span></span><br><span class="line">    <span class="meta">@ArgumentsSource(MyArgumentsProvider.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testWithArgumentsSource</span><span class="params">(String argument)</span> &#123;</span><br><span class="line">        assertNotNull(argument);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyArgumentsProvider</span> <span class="keyword">implements</span> <span class="title class_">ArgumentsProvider</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Stream&lt;? <span class="keyword">extends</span> <span class="title class_">Arguments</span>&gt; provideArguments(ExtensionContext context) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> Stream.of(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>).map(Arguments::of);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参数转换与增强"><a class="markdownIt-Anchor" href="#参数转换与增强"></a> 参数转换与增强</h2>
<p>对于参数化测试的输入参数，JUnit还能对输入参数的转化很增强进行定制，详细的可以翻阅<a href="https://junit.org/junit5/docs/current/user-guide/#writing-tests-parameterized-tests-argument-conversion">文档</a>，此处不再多做说明。</p>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>JUnit是一个很好的测试框架，能非常便利的编写测试，配合leetcode进行DEBUG。</p>
<h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1>
<p><a href="https://junit.org/junit5/">JUnit</a></p>
<p><a href="https://www.liaoxuefeng.com/wiki/1252599548343744/1304048154181666">廖雪峰的Java教程</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>junit</tag>
      </tags>
  </entry>
  <entry>
    <title>java实现pbkdf2&amp;sha256加密验证算法</title>
    <url>/2021/10/16/java-pbkdf2sha256/</url>
    <content><![CDATA[<p>最近移植一个flask项目，里面使用了werkzeug进行加密。为了达到无缝转换，所以需要用java实现。<br />
封面《ソーサレス＊アライヴ！～the World’s End Fallen Star～》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>最近移植实验室的一个<code>flask</code>项目。其中使用了<code>werkzeug</code>中的<code>generate_password_hash</code>, <code>check_password_hash</code>两个函数来加密密码和验证密码。为了两个后端之间的无缝衔接，需要使用两个后端加密验证结果一样，因此便有了本文。</p>
<h1 id="网上解决方案"><a class="markdownIt-Anchor" href="#网上解决方案"></a> 网上解决方案</h1>
<p>这种问题我认为还是比较常见的，先在网上搜了一下。在<a href="https://blog.csdn.net/qq_25112523/article/details/84308134">csdn</a>上找到了如下代码。按照博主所说，此代码能够无缝衔接，然而在验证过程时发现加密结果不一样。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKey;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKeyFactory;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.PBEKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.InvalidKeySpecException;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.KeySpec;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * PBKDF2_SHA256加密验证算法</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 慌途L</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Pbkdf2Sha256</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(Pbkdf2Sha256.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 盐的长度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SALT_BYTE_SIZE</span> <span class="operator">=</span> <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成密文的长度(例：64 * 4，密文长度为64)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">HASH_BIT_SIZE</span> <span class="operator">=</span> <span class="number">64</span> * <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 迭代次数(默认迭代次数为 2000)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">DEFAULT_ITERATIONS</span> <span class="operator">=</span> <span class="number">2000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 算法名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">algorithm</span> <span class="operator">=</span> <span class="string">&quot;PBKDF2&amp;SHA256&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取密文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password   密码明文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> salt       加盐</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> iterations 迭代次数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getEncodedHash</span><span class="params">(String password, String salt, <span class="type">int</span> iterations)</span> &#123;</span><br><span class="line">        <span class="comment">// Returns only the last part of whole encoded password</span></span><br><span class="line">        <span class="type">SecretKeyFactory</span> <span class="variable">keyFactory</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            keyFactory = SecretKeyFactory.getInstance(<span class="string">&quot;PBKDF2WithHmacSHA256&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;Could NOT retrieve PBKDF2WithHmacSHA256 algorithm&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">KeySpec</span> <span class="variable">keySpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PBEKeySpec</span>(password.toCharArray(), salt.getBytes(Charset.forName(<span class="string">&quot;UTF-8&quot;</span>)), iterations, HASH_BIT_SIZE);</span><br><span class="line">        <span class="type">SecretKey</span> <span class="variable">secret</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            secret = keyFactory.generateSecret(keySpec);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeySpecException e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;Could NOT generate secret key&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用Base64进行转码密文</span></span><br><span class="line"><span class="comment">//        byte[] rawHash = secret.getEncoded();</span></span><br><span class="line"><span class="comment">//        byte[] hashBase64 = Base64.getEncoder().encode(rawHash);</span></span><br><span class="line"><span class="comment">//        return new String(hashBase64);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用十六进制密文</span></span><br><span class="line">        <span class="keyword">return</span> toHex(secret.getEncoded());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 十六进制字符串转二进制字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hex     十六进制字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>      </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">byte</span>[] fromHex(String hex) &#123;</span><br><span class="line">        <span class="type">byte</span>[] binary = <span class="keyword">new</span> <span class="title class_">byte</span>[hex.length() / <span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; binary.length; i++) &#123;</span><br><span class="line">            binary[i] = (<span class="type">byte</span>) Integer.parseInt(hex.substring(<span class="number">2</span> * i, <span class="number">2</span> * i + <span class="number">2</span>), <span class="number">16</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> binary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二进制字符串转十六进制字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array     二进制数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>      </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">toHex</span><span class="params">(<span class="type">byte</span>[] array)</span> &#123;</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">bi</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="number">1</span>, array);</span><br><span class="line">        <span class="type">String</span> <span class="variable">hex</span> <span class="operator">=</span> bi.toString(<span class="number">16</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">paddingLength</span> <span class="operator">=</span> (array.length * <span class="number">2</span>) - hex.length();</span><br><span class="line">        <span class="keyword">if</span> (paddingLength &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> String.format(<span class="string">&quot;%0&quot;</span> + paddingLength + <span class="string">&quot;d&quot;</span>, <span class="number">0</span>) + hex;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> hex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密文加盐     (获取‘SALT_BYTE_SIZE’长度的盐值)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getsalt</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//盐值使用ASCII表的数字加大小写字母组成</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> SALT_BYTE_SIZE;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">rand</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">char</span>[] rs = <span class="keyword">new</span> <span class="title class_">char</span>[length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> rand.nextInt(<span class="number">3</span>);</span><br><span class="line">            <span class="keyword">if</span> (t == <span class="number">0</span>) &#123;</span><br><span class="line">                rs[i] = (<span class="type">char</span>) (rand.nextInt(<span class="number">10</span>) + <span class="number">48</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t == <span class="number">1</span>) &#123;</span><br><span class="line">                rs[i] = (<span class="type">char</span>) (rand.nextInt(<span class="number">26</span>) + <span class="number">65</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                rs[i] = (<span class="type">char</span>) (rand.nextInt(<span class="number">26</span>) + <span class="number">97</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(rs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取密文</span></span><br><span class="line"><span class="comment">     * 默认迭代次数：2000</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password      明文密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encode</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> encode(password, getsalt());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取密文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password      明文密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> iterations    迭代次数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encode</span><span class="params">(String password, <span class="type">int</span> iterations)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> encode(password, getsalt(), iterations);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取密文</span></span><br><span class="line"><span class="comment">     * 默认迭代次数：2000</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password      明文密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> salt          盐值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encode</span><span class="params">(String password, String salt)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> encode(password, salt, DEFAULT_ITERATIONS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最终返回的整串密文</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 注：此方法返回密文字符串组成：算法名称+迭代次数+盐值+密文</span></span><br><span class="line"><span class="comment">     * 不需要的直接用getEncodedHash方法返回的密文</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password   密码明文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> salt       加盐</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> iterations 迭代次数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encode</span><span class="params">(String password, String salt, <span class="type">int</span> iterations)</span> &#123;</span><br><span class="line">        <span class="comment">// returns hashed password, along with algorithm, number of iterations and salt</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">hash</span> <span class="operator">=</span> getEncodedHash(password, salt, iterations);</span><br><span class="line">        <span class="keyword">return</span> String.format(<span class="string">&quot;%s$%d$%s$%s&quot;</span>, algorithm, iterations, salt, hash);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password       明文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hashedPassword 密文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">verification</span><span class="params">(String password, String hashedPassword)</span> &#123;</span><br><span class="line">        <span class="comment">//hashedPassword = 算法名称+迭代次数+盐值+密文;</span></span><br><span class="line">        String[] parts = hashedPassword.split(<span class="string">&quot;\\$&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (parts.length != <span class="number">4</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//解析得到迭代次数和盐值进行盐值</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">iterations</span> <span class="operator">=</span> Integer.parseInt(parts[<span class="number">1</span>]);</span><br><span class="line">        <span class="type">String</span> <span class="variable">salt</span> <span class="operator">=</span> parts[<span class="number">2</span>];</span><br><span class="line">        <span class="type">String</span> <span class="variable">hash</span> <span class="operator">=</span> encode(password, salt, iterations);</span><br><span class="line">        <span class="keyword">return</span> hash.equals(hashedPassword);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="修改"><a class="markdownIt-Anchor" href="#修改"></a> 修改</h1>
<p>这里先贴一段加密前后的代码和python的调用入口</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加密前后的代码</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">raw password</span></span><br><span class="line">123456</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">encoded password</span></span><br><span class="line">pbkdf2:sha256:260000$hxymrVhMaA4CszrW$460d382eef1ba3fe27e34520ae4a0f9e3ab7b4b6c6bdb26133f771d7b57e9450</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python 调用入口</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_password_hash</span>(<span class="params"></span></span><br><span class="line"><span class="params">    password: <span class="built_in">str</span>, method: <span class="built_in">str</span> = <span class="string">&quot;pbkdf2:sha256&quot;</span>, salt_length: <span class="built_in">int</span> = <span class="number">16</span></span></span><br><span class="line"><span class="params"></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Hash a password with the given method and salt with a string of</span></span><br><span class="line"><span class="string">    the given length. The format of the string returned includes the method</span></span><br><span class="line"><span class="string">    that was used so that :func:`check_password_hash` can check the hash.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    The format for the hashed string looks like this::</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        method$salt$hash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    This method can **not** generate unsalted passwords but it is possible</span></span><br><span class="line"><span class="string">    to set param method=&#x27;plain&#x27; in order to enforce plaintext passwords.</span></span><br><span class="line"><span class="string">    If a salt is used, hmac is used internally to salt the password.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    If PBKDF2 is wanted it can be enabled by setting the method to</span></span><br><span class="line"><span class="string">    ``pbkdf2:method:iterations`` where iterations is optional::</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        pbkdf2:sha256:80000$salt$hash</span></span><br><span class="line"><span class="string">        pbkdf2:sha256$salt$hash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param password: the password to hash.</span></span><br><span class="line"><span class="string">    :param method: the hash method to use (one that hashlib supports). Can</span></span><br><span class="line"><span class="string">                   optionally be in the format ``pbkdf2:method:iterations``</span></span><br><span class="line"><span class="string">                   to enable PBKDF2.</span></span><br><span class="line"><span class="string">    :param salt_length: the length of the salt in letters.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    salt = gen_salt(salt_length) <span class="keyword">if</span> method != <span class="string">&quot;plain&quot;</span> <span class="keyword">else</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    h, actual_method = _hash_internal(method, salt, password)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;actual_method&#125;</span>$<span class="subst">&#123;salt&#125;</span>$<span class="subst">&#123;h&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>根据网上的代码和python的注释可以得知，加密后数据分为算法<code>pbkdf2:sha256</code>、迭代次数<code>260000</code>、盐<code>hxymrVhMaA4CszrW</code>和加密结果<code>460d382eef1ba3fe27e34520ae4a0f9e3ab7b4b6c6bdb26133f771d7b57e9450</code>四段。<br />
因此对上述代码的以下部分进行修改，主要修改迭代次数，算法名，拼接过程和验证过程</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 迭代次数(默认迭代次数为 260000)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">DEFAULT_ITERATIONS</span> <span class="operator">=</span> <span class="number">260000</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 算法名称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">algorithm</span> <span class="operator">=</span> <span class="string">&quot;pbkdf2:sha256&quot;</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 最终返回的整串密文</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注：此方法返回密文字符串组成：算法名称+迭代次数+盐值+密文 不需要的直接用getEncodedHash方法返回的密文</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> password   密码明文</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> salt       加盐</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> iterations 迭代次数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encode</span><span class="params">(String password, String salt, <span class="type">int</span> iterations)</span> &#123;</span><br><span class="line">    <span class="comment">// returns hashed password, along with algorithm, number of iterations and salt</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">hash</span> <span class="operator">=</span> getEncodedHash(password, salt, iterations);</span><br><span class="line">    <span class="keyword">return</span> String.format(<span class="string">&quot;%s:%d$%s$%s&quot;</span>, algorithm, iterations, salt, hash);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证密码</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> password       明文</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> hashedPassword 密文</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">verification</span><span class="params">(String password, String hashedPassword)</span> &#123;</span><br><span class="line">    <span class="comment">// hashedPassword = 算法名称+迭代次数+盐值+密文;</span></span><br><span class="line">    String[] parts = hashedPassword.split(<span class="string">&quot;\\$&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (parts.length != <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    String[] parts2 = parts[<span class="number">0</span>].split(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (parts2.length != <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 解析得到迭代次数和盐值进行盐值</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">iterations</span> <span class="operator">=</span> Integer.parseInt(parts2[<span class="number">2</span>]);</span><br><span class="line">    <span class="type">String</span> <span class="variable">salt</span> <span class="operator">=</span> parts[<span class="number">1</span>];</span><br><span class="line">    <span class="type">String</span> <span class="variable">hash</span> <span class="operator">=</span> encode(password, salt, iterations);</span><br><span class="line">    <span class="keyword">return</span> hash.equals(hashedPassword);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="完整代码"><a class="markdownIt-Anchor" href="#完整代码"></a> 完整代码</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zju.manager_svr.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.InvalidKeySpecException;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.KeySpec;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKey;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKeyFactory;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.PBEKeySpec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * pbkdf2_sha256 from:</span></span><br><span class="line"><span class="comment"> * modify from https://blog.csdn.net/qq_25112523/article/details/84308134</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HashUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 盐的长度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SALT_BYTE_SIZE</span> <span class="operator">=</span> <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成密文的长度(例：64 * 4，密文长度为64)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">HASH_BIT_SIZE</span> <span class="operator">=</span> <span class="number">64</span> * <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 迭代次数(默认迭代次数为 260000)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">DEFAULT_ITERATIONS</span> <span class="operator">=</span> <span class="number">260000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 算法名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">algorithm</span> <span class="operator">=</span> <span class="string">&quot;pbkdf2:sha256&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取密文</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password   密码明文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> salt       加盐</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> iterations 迭代次数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getEncodedHash</span><span class="params">(String password, String salt, <span class="type">int</span> iterations)</span> &#123;</span><br><span class="line">        <span class="comment">// Returns only the last part of whole encoded password</span></span><br><span class="line">        <span class="type">SecretKeyFactory</span> <span class="variable">keyFactory</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            keyFactory = SecretKeyFactory.getInstance(<span class="string">&quot;PBKDF2WithHmacSHA256&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;Could NOT retrieve PBKDF2WithHmacSHA256 algorithm&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">KeySpec</span> <span class="variable">keySpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PBEKeySpec</span>(password.toCharArray(), salt.getBytes(Charset.forName(<span class="string">&quot;UTF-8&quot;</span>)), iterations,</span><br><span class="line">                HASH_BIT_SIZE);</span><br><span class="line">        <span class="type">SecretKey</span> <span class="variable">secret</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            secret = keyFactory.generateSecret(keySpec);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeySpecException e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;Could NOT generate secret key&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用Base64进行转码密文</span></span><br><span class="line">        <span class="comment">// byte[] rawHash = secret.getEncoded();</span></span><br><span class="line">        <span class="comment">// byte[] hashBase64 = Base64.getEncoder().encode(rawHash);</span></span><br><span class="line">        <span class="comment">// return new String(hashBase64);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用十六进制密文</span></span><br><span class="line">        <span class="keyword">return</span> toHex(secret.getEncoded());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 十六进制字符串转二进制字符串</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hex 十六进制字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">byte</span>[] fromHex(String hex) &#123;</span><br><span class="line">        <span class="type">byte</span>[] binary = <span class="keyword">new</span> <span class="title class_">byte</span>[hex.length() / <span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; binary.length; i++) &#123;</span><br><span class="line">            binary[i] = (<span class="type">byte</span>) Integer.parseInt(hex.substring(<span class="number">2</span> * i, <span class="number">2</span> * i + <span class="number">2</span>), <span class="number">16</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> binary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二进制字符串转十六进制字符串</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array 二进制数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">toHex</span><span class="params">(<span class="type">byte</span>[] array)</span> &#123;</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">bi</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="number">1</span>, array);</span><br><span class="line">        <span class="type">String</span> <span class="variable">hex</span> <span class="operator">=</span> bi.toString(<span class="number">16</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">paddingLength</span> <span class="operator">=</span> (array.length * <span class="number">2</span>) - hex.length();</span><br><span class="line">        <span class="keyword">if</span> (paddingLength &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> String.format(<span class="string">&quot;%0&quot;</span> + paddingLength + <span class="string">&quot;d&quot;</span>, <span class="number">0</span>) + hex;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> hex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密文加盐 (获取‘SALT_BYTE_SIZE’长度的盐值)</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getsalt</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 盐值使用ASCII表的数字加大小写字母组成</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> SALT_BYTE_SIZE;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">rand</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">char</span>[] rs = <span class="keyword">new</span> <span class="title class_">char</span>[length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> rand.nextInt(<span class="number">3</span>);</span><br><span class="line">            <span class="keyword">if</span> (t == <span class="number">0</span>) &#123;</span><br><span class="line">                rs[i] = (<span class="type">char</span>) (rand.nextInt(<span class="number">10</span>) + <span class="number">48</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t == <span class="number">1</span>) &#123;</span><br><span class="line">                rs[i] = (<span class="type">char</span>) (rand.nextInt(<span class="number">26</span>) + <span class="number">65</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                rs[i] = (<span class="type">char</span>) (rand.nextInt(<span class="number">26</span>) + <span class="number">97</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(rs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取密文 默认迭代次数：260000</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 明文密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encode</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> encode(password, getsalt());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取密文</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password   明文密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> iterations 迭代次数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encode</span><span class="params">(String password, <span class="type">int</span> iterations)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> encode(password, getsalt(), iterations);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取密文 默认迭代次数：260000</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 明文密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> salt     盐值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encode</span><span class="params">(String password, String salt)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> encode(password, salt, DEFAULT_ITERATIONS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最终返回的整串密文</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 注：此方法返回密文字符串组成：算法名称+迭代次数+盐值+密文 不需要的直接用getEncodedHash方法返回的密文</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password   密码明文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> salt       加盐</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> iterations 迭代次数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encode</span><span class="params">(String password, String salt, <span class="type">int</span> iterations)</span> &#123;</span><br><span class="line">        <span class="comment">// returns hashed password, along with algorithm, number of iterations and salt</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">hash</span> <span class="operator">=</span> getEncodedHash(password, salt, iterations);</span><br><span class="line">        <span class="keyword">return</span> String.format(<span class="string">&quot;%s:%d$%s$%s&quot;</span>, algorithm, iterations, salt, hash);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证密码</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password       明文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hashedPassword 密文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">verification</span><span class="params">(String password, String hashedPassword)</span> &#123;</span><br><span class="line">        <span class="comment">// hashedPassword = 算法名称+迭代次数+盐值+密文;</span></span><br><span class="line">        String[] parts = hashedPassword.split(<span class="string">&quot;\\$&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (parts.length != <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] parts2 = parts[<span class="number">0</span>].split(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (parts2.length != <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 解析得到迭代次数和盐值进行盐值</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">iterations</span> <span class="operator">=</span> Integer.parseInt(parts2[<span class="number">2</span>]);</span><br><span class="line">        <span class="type">String</span> <span class="variable">salt</span> <span class="operator">=</span> parts[<span class="number">1</span>];</span><br><span class="line">        <span class="type">String</span> <span class="variable">hash</span> <span class="operator">=</span> encode(password, salt, iterations);</span><br><span class="line">        <span class="keyword">return</span> hash.equals(hashedPassword);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h1>
<p>编写测试类对算法进行测试，验证结果是否一样。加密后的密码由python端提供，测试结果都通过说明加密结果一样。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zju.manager_svr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertTrue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zju.manager_svr.util.HashUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.params.ParameterizedTest;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.params.provider.CsvSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HashUtilTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ParameterizedTest</span></span><br><span class="line">    <span class="meta">@CsvSource(&#123;</span></span><br><span class="line"><span class="meta">            &quot;123456,pbkdf2:sha256:260000$hxymrVhMaA4CszrW$460d382eef1ba3fe27e34520ae4a0f9e3ab7b4b6c6bdb26133f771d7b57e9450&quot;,</span></span><br><span class="line"><span class="meta">            &quot;string,pbkdf2:sha256:260000$ygNNi7PGWBbb6QT1$82c85a39863313c75d6da0921f22d19ba501df387e9a7bdc30535ab4942109e9&quot; &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">passwordCheckTest</span><span class="params">(String password, String expected)</span> &#123;</span><br><span class="line">        assertTrue(HashUtil.verification(password, expected));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>本次移植过程中，密码加密一致大概是最麻烦的问题之一。在此解决这个问题以便日后翻阅。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p><a href="https://blog.csdn.net/qq_25112523/article/details/84308134">pbkdf2&amp;sha256加密验证算法 | 密码加密</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>python</tag>
        <tag>flask</tag>
      </tags>
  </entry>
  <entry>
    <title>docker中运行nodejs项目</title>
    <url>/2021/10/24/node-docker/</url>
    <content><![CDATA[<p>被实验室前端项目整裂开的我想起来还有docker这一方法<br />
封面《PARQUET》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>运行实验室项目的时候发现有个<code>node-sass</code>模块，安装的时候说需要python2环境。网上有解决方法是删除<code>node-modules</code>，然后安装<code>windows-build-tools</code>在重新装依赖。结果我试完发现不行，于是有说法说装最新版的<code>node-sass</code>，装完后运行后报错说版本不兼容，直接把我气死。最后我忽然想起来还有<code>docker</code>可以使用，因此写下此文，记录将node项目docker化。</p>
<h1 id="docker化"><a class="markdownIt-Anchor" href="#docker化"></a> docker化</h1>
<h2 id="dockerfile"><a class="markdownIt-Anchor" href="#dockerfile"></a> Dockerfile</h2>
<p>在项目里新建<code>Dockerfile</code>文件，写下以下内容。项目中<code>node-sass</code>的版本为<code>4.12.0</code>，查询<a href="https://github.com/sass/node-sass">node-sass</a>推荐的版本为node 12。此外还可以看到先拷贝<code>package.json</code>文件而非全部文件，这是利用<code>docker</code>的缓存，减少每次重建镜像的时间，解释<a href="http://bitjudo.com/blog/2014/03/13/building-efficient-dockerfiles-node-dot-js/">见此</a></p>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:<span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create app directory</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /usr/src/app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install app dependencies</span></span><br><span class="line"><span class="comment"># A wildcard is used to ensure both package.json AND package-lock.json are copied</span></span><br><span class="line"><span class="comment"># where available (npm@5+)</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> package*.json ./</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> yarn install</span></span><br><span class="line"><span class="comment"># If you are building your code for production</span></span><br><span class="line"><span class="comment"># RUN npm ci --only=production</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bundle app source</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . .</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3000</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [ <span class="string">&quot;yarn&quot;</span>, <span class="string">&quot;start&quot;</span> ]</span></span><br></pre></td></tr></table></figure>
<h3 id="运行"><a class="markdownIt-Anchor" href="#运行"></a> 运行</h3>
<p>运行只需要执行如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build . -t &lt;your tag username&gt;</span><br><span class="line">docker run -p 3000:3000 -d &lt;your tag username&gt;</span><br></pre></td></tr></table></figure>
<h2 id="dockerignore"><a class="markdownIt-Anchor" href="#dockerignore"></a> .dockerignore</h2>
<p>有些文件并不需要被加入docker镜像中，比如<code>node_modules</code>。<code>node_modules</code>较大且会覆盖镜像中的依赖，因此需要忽略掉。完整<code>.dockerignore</code>文件见下。</p>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">node_modules</span><br><span class="line">.idea</span><br><span class="line">npm-debug.log*</span><br><span class="line">yarn-debug.log*</span><br><span class="line">yarn-error.log*</span><br></pre></td></tr></table></figure>
<h2 id="docker-composeyml"><a class="markdownIt-Anchor" href="#docker-composeyml"></a> docker-compose.yml</h2>
<p>有些时候我们需要将镜像进行服务化，因此需要编写<code>docker-compoes.yml</code>文件，在项目目录中新建<code>docker-compose.yml</code>文件，编写如下。</p>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3.9&quot;</span></span><br><span class="line">services:</span><br><span class="line">  web:</span><br><span class="line">    build: .</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;3000:3000&quot;</span></span><br></pre></td></tr></table></figure>
<p>有时候需要多个<code>docker compose</code>之间通信，此时可以先通过执行<code>docker network ls</code>命令来查找网络</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运行结果</span></span><br><span class="line">&gt; docker network <span class="built_in">ls</span></span><br><span class="line">NETWORK ID     NAME                 DRIVER    SCOPE</span><br><span class="line">dfe18b9ff74e   alsprj_lnmp          bridge    <span class="built_in">local</span></span><br><span class="line">764431292ca3   bridge               bridge    <span class="built_in">local</span></span><br><span class="line">99ba555f79f4   host                 host      <span class="built_in">local</span></span><br><span class="line">0fe0af6d1a07   live2d_api_default   bridge    <span class="built_in">local</span></span><br><span class="line">2eaa1467e191   none                 null      <span class="built_in">local</span></span><br></pre></td></tr></table></figure>
<p>如果我想要当前项目与<code>alsprj_lnmp</code>处于同一网络环境，就只需在我要连接的<code>docker-compose.yml</code>中添加如下代码</p>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">networks:</span><br><span class="line">  default:</span><br><span class="line">    external:</span><br><span class="line">     name: alsprj_lnmp</span><br></pre></td></tr></table></figure>
<h3 id="运行-2"><a class="markdownIt-Anchor" href="#运行-2"></a> 运行</h3>
<p>运行只需要执行如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure>
<h1 id="结果"><a class="markdownIt-Anchor" href="#结果"></a> 结果</h1>
<p>通过<code>docker</code>，实验室前端项目总算跑起来了。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.1/terminal.png" alt="" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.1/success.png" alt="" /></p>
<h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1>
<p><a href="https://nodejs.org/zh-cn/docs/guides/nodejs-docker-webapp/">把一个 Node.js web 应用程序给 Docker 化</a></p>
<p><a href="http://bitjudo.com/blog/2014/03/13/building-efficient-dockerfiles-node-dot-js/">Building Efficient Dockerfiles - Node.js</a></p>
<p><a href="https://www.jianshu.com/p/1099815985dd">多个docker-compose之间的网络通信</a></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>远程文件拷贝</title>
    <url>/2021/11/02/remote-copy/</url>
    <content><![CDATA[<p>实验室分配了服务器，有必要了解以下远程数据的拷贝<br />
封面《月に寄りそう乙女の作法》</p>
<span id="more"></span>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>向实验室申请了一个服务器准备炼丹，第一步暂时打算先上传数据集。对服务器上文件的远程拷贝只用过VNC和vscode。vscode在打开服务器中含有较多文件的目录容易卡死，且拷贝文件的进度也不容易观察，只能通过当前的网速进行判断。VNC只拷贝过一些小型文件，但是个人猜测对大文件的传输也不太行。因此有必要了解一下linux自带的scp命令。</p>
<h1 id="scp"><a class="markdownIt-Anchor" href="#scp"></a> scp</h1>
<p>scp命令是secure copy的缩写，是一个远程文件拷贝命令。</p>
<h2 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h2>
<p>对于这种命令通过<code>man</code>命令可以查看其详细的文档。<code>man scp</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp [-12346BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file] [-l <span class="built_in">limit</span>] [-o ssh_option] [-P port] </span><br><span class="line">[-S program] [[user@]host1:]file1 ... [[user@]host2:]file2</span><br></pre></td></tr></table></figure>
<h2 id="参数说明"><a class="markdownIt-Anchor" href="#参数说明"></a> 参数说明</h2>
<ul>
<li>-1: 强制使用ssh1</li>
<li>-2: 强制使用ssh2</li>
<li>-3: 通过本地host传输两个远程服务器直接的拷贝。如果没有该选项，将会直接在两个远程服务器之间拷贝。</li>
<li>-4: 强制scp只使用ipv4</li>
<li>-6: 强制scp只是用ipv6</li>
<li>-B: 选择批次模式（不使用密码或者密钥）</li>
<li>-C: 开启压缩模式</li>
<li>-c cipher: 以cipher将数据传输进行加密，这个选项将直接传递给ssh</li>
<li>-F ssh_config: 指定一个替代的ssh配置文件，此参数直接传递给ssh</li>
<li>-i identity_file: 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh</li>
<li>-l limit: 带宽限制，单位Kbit/s</li>
<li>-o ssh_option: 传输可选项到ssh中，并没有scp flag</li>
<li>-P: 指定远程服务器的端口，注意大写P，因为小写已经被使用了</li>
<li>-p: 保留原始文件的修改时间，访问时间和访问权限</li>
<li>-q: 安静模式，不显示进度条</li>
<li>-r: 递归拷贝整个文件夹</li>
<li>-S program: 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项</li>
<li>-v: 详细模式</li>
</ul>
<h2 id="实例"><a class="markdownIt-Anchor" href="#实例"></a> 实例</h2>
<p>废话说了一堆不如直接上手写测试</p>
<h3 id="本地复制文件到远程"><a class="markdownIt-Anchor" href="#本地复制文件到远程"></a> 本地复制文件到远程</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp local_file remote_username@remote_ip:remote_folder </span><br><span class="line"><span class="comment"># or </span></span><br><span class="line">scp local_file remote_username@remote_ip:remote_file </span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.0/copy_file_to_remote.png" alt="" /></p>
<h3 id="本地目录复制到远程"><a class="markdownIt-Anchor" href="#本地目录复制到远程"></a> 本地目录复制到远程</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -r local_folder remote_username@remote_ip:remote_folder </span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.0/copy_folder_to_remote.png" alt="" /></p>
<h3 id="远程文件复制到本地"><a class="markdownIt-Anchor" href="#远程文件复制到本地"></a> 远程文件复制到本地</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp remote_username@remote_ip:remote_file local_file</span><br><span class="line"><span class="comment"># or </span></span><br><span class="line">scp remote_username@remote_ip:remote_file local_folder </span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.0/copy_file_from_remote.png" alt="" /></p>
<h3 id="远程目录复制到本地"><a class="markdownIt-Anchor" href="#远程目录复制到本地"></a> 远程目录复制到本地</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -r remote_username@remote_ip:remote_folder local_folder </span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.0/copy_folder_from_remote.png" alt="" /></p>
<h1 id="sftp"><a class="markdownIt-Anchor" href="#sftp"></a> sftp</h1>
<p>在看scp命令文档的适合发现了里面有写sftp(secure file transfer program)。出于好奇，便查询一下sftp的使用方法。</p>
<h2 id="语法-2"><a class="markdownIt-Anchor" href="#语法-2"></a> 语法</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sftp [-1246aCfpqrv] [-B buffer_size] [-b batchfile] [-c cipher] [-D sftp_server_path] [-F ssh_config]</span><br><span class="line">          [-i identity_file] [-l <span class="built_in">limit</span>] [-o ssh_option] [-P port] [-R num_requests] [-S program]</span><br><span class="line">          [-s subsystem | sftp_server] host</span><br><span class="line">sftp [user@]host[:file ...]</span><br><span class="line">sftp [user@]host[:<span class="built_in">dir</span>[/]]</span><br><span class="line">sftp -b batchfile [user@]host</span><br></pre></td></tr></table></figure>
<p>许多参数与scp类似这里不再多说</p>
<h2 id="实例-2"><a class="markdownIt-Anchor" href="#实例-2"></a> 实例</h2>
<h3 id="连接"><a class="markdownIt-Anchor" href="#连接"></a> 连接</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sftp -P port user@ip</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.0/sftp_connect.png" alt="" /></p>
<h3 id="获取远程文件"><a class="markdownIt-Anchor" href="#获取远程文件"></a> 获取远程文件</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sftp&gt; get remoteFile</span><br><span class="line">sftp&gt; get remoteFile localFile</span><br><span class="line">sftp&gt; get -r someDirectory</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.0/sftp_get.png" alt="" /></p>
<h3 id="上传本地文件"><a class="markdownIt-Anchor" href="#上传本地文件"></a> 上传本地文件</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sftp&gt; put localFile</span><br><span class="line">sftp&gt; get localFile remoteFile</span><br><span class="line">sftp&gt; put -r localDirectory</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.1.0/sftp_put.png" alt="" /></p>
<h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1>
<p><a href="https://www.runoob.com/linux/linux-comm-scp.html">Linux scp命令</a><br />
<a href="https://www.digitalocean.com/community/tutorials/how-to-use-sftp-to-securely-transfer-files-with-a-remote-server">How To Use SFTP to Securely Transfer Files with a Remote Server</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>matplotlib崩溃问题记录</title>
    <url>/2021/11/04/matplotlib-crash/</url>
    <content><![CDATA[<h1 id="前景提要"><a class="markdownIt-Anchor" href="#前景提要"></a> 前景提要</h1>
<p>因为需要安装新的conda环境来进行新的项目，于是乎就新建了conda环境。装完seaborn后发现，图像没法显示。经过一系列的排查后发现问题出在了matplotlib上。</p>
<h1 id="问题复现"><a class="markdownIt-Anchor" href="#问题复现"></a> 问题复现</h1>
<h2 id="测试代码"><a class="markdownIt-Anchor" href="#测试代码"></a> 测试代码</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">11</span>) </span><br><span class="line">y =  <span class="number">2</span>  * x +  <span class="number">5</span> </span><br><span class="line">plt.title(<span class="string">&quot;test&quot;</span>) </span><br><span class="line"> </span><br><span class="line">plt.xlabel(<span class="string">&quot;x &quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;y &quot;</span>)</span><br><span class="line">plt.plot(x,y) </span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<h2 id="问题截图"><a class="markdownIt-Anchor" href="#问题截图"></a> 问题截图</h2>
<p>可以看到运行结果一篇空白，然后程序崩溃。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.9/screenshot.png" alt="" /></p>
<h1 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决</h1>
<p>这个问题有点恶心的地方在于基本找不到错误信息，在尝试过降级、重启、重装后也没有解决。在我身边的人同样碰到这个问题的时候，我意识到这不是我个人的问题，于是乎在github的issue找到了解答。问题处在了matplotlib的依赖上。需要将<code>freestyle</code>包从<code>2.11.0</code>降到<code>2.10.4</code>。随后问题解决。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install freetype==2.10.4 --force-reinstall</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>这个问题似乎是<code>conda-forge</code>的依赖配置不对，没试过<code>pip</code>能不能解决，希望后续能够修复。</p>
<h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1>
<p><a href="https://github.com/matplotlib/matplotlib/issues/21511">[Bug]: Matplotlib crashes Python</a></p>
<p><a href="https://stackoverflow.com/questions/69786885/after-conda-update-python-kernel-crashes-when-matplotlib-is-used/69788527#69788527">After conda update, python kernel crashes when matplotlib is used</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>bug</tag>
        <tag>matplotlib</tag>
      </tags>
  </entry>
  <entry>
    <title>neo4j简单入门和前端可视化</title>
    <url>/2021/11/10/neo4j-simple-tutorial/</url>
    <content><![CDATA[<blockquote>
<p>封面《D.C.4 Plus Harmony》</p>
</blockquote>
<h1 id="neo4j和知识图谱简介"><a class="markdownIt-Anchor" href="#neo4j和知识图谱简介"></a> neo4j和知识图谱简介</h1>
<blockquote>
<p>Neo4j是由Neo4j,Inc开发的一个图数据库管理系统。其开发人员将其描述为一个具有本地图存储和处理的符合ACID事务的数据库，Neo4j在GPL3协议下开源社区版，还具有在商业闭源协议下的在线备份和高可用拓展。Neo还允许Neo4j在闭源商业中使用这些插件。<br />
Neo4j是由Java实现，同时可以被其他语言写的软件使用事务性HTTP端点或者二进制“Bolt”协议通过Cypher查询语言来进行访问。</p>
</blockquote>
<p>以上翻译自Wikipedia。简单来说Neo4j是一个以图形式存储的一个NOSQL。</p>
<blockquote>
<p>知识图谱（Knowledge Graph），在图书情报界称为知识域可视化或知识领域映射地图，是显示知识发展进程与结构关系的一系列各种不同的图形，用可视化技术描述知识资源及其载体，挖掘、分析、构建、绘制和显示知识及它们之间的相互联系。<br />
知识图谱，是通过将应用数学、图形学、信息可视化技术、信息科学等学科的理论与方法与计量学引文分析、共现分析等方法结合，并利用可视化的图谱形象地展示学科的核心结构、发展历史、前沿领域以及整体知识架构达到多学科融合目的的现代理论。</p>
</blockquote>
<p>对于这种知识图谱，最好是用neo4j这种图数据库存储。效果如下<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/introduce.png" alt="" /></p>
<h1 id="neo4j安装"><a class="markdownIt-Anchor" href="#neo4j安装"></a> neo4j安装</h1>
<p>可以直接到<a href="https://neo4j.com/">官网</a>进行不同版本的选择安装。我这里选择<a href="https://neo4j.com/download/?ref=get-started-dropdown-cta">desktop</a>安装。</p>
<h1 id="启动"><a class="markdownIt-Anchor" href="#启动"></a> 启动</h1>
<p>启动比较简单，开箱即用。可以点击下图的start启动数据库是，然后进行open打开内置浏览器。也可以浏览器中打开<code>http://localhost:7474/browser/</code>进行访问。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/start.png" alt="" /></p>
<h1 id="cypher-query"><a class="markdownIt-Anchor" href="#cypher-query"></a> Cypher query</h1>
<p>新建一个project和database来开始我们的学习。</p>
<h2 id="增"><a class="markdownIt-Anchor" href="#增"></a> 增</h2>
<p>Cypher query增加节点非常简单<br />
首先来增加一个人物节点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE (p:Person&#123;name:&quot;qxdn&quot;,age:21&#125;) return p</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/create-node.png" alt="" /><br />
蓝色的就是创建的节点，其中<code>CREATE</code>就是创建一个节点或者关系。其中<code>p</code>表示的是变量名，后续引用这个节点的时候可以使用这个变量名。其中<code>&#123;&#125;</code>为该节点的属性，类似于json。<code>return</code>为返回输出（可选）。<br />
Cypher中的节点表示如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">()                  //匿名节点，无标签</span><br><span class="line">(p:Person)          //使用变量p和标签Person</span><br><span class="line">(:Technology)       //无变量，标签为Technology</span><br><span class="line">(work:Company)      //使用变量work和标签Company</span><br></pre></td></tr></table></figure>
<p>接下来创建更多的节点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE (p:Person&#123;name:&quot;a&quot;,age:21&#125;) return p</span><br><span class="line">CREATE (p:Person&#123;name:&quot;b&quot;,age:21&#125;) return p</span><br><span class="line">CREATE (p:Person&#123;name:&quot;c&quot;,age:21&#125;) return p</span><br></pre></td></tr></table></figure>
<p>创建关系</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (p1:Person &#123;name: &#x27;qxdn&#x27;&#125;)</span><br><span class="line">MATCH (p2:Person &#123;name: &#x27;a&#x27;&#125;)</span><br><span class="line">CREATE (p1)-[rel:IS_FRIENDS_WITH&#123;from:2021&#125;]-&gt;(p2)</span><br><span class="line">// OR 使用MERGE可以避免重复定义</span><br><span class="line">MATCH (p1:Person &#123;name:&#x27;b&#x27;&#125;), (p2:Person &#123;name:&quot;qxdn&quot;&#125;) </span><br><span class="line">MERGE (p1)&lt;-[:IS_FRIENDS_WITH&#123;from:2021&#125;]-(p2)</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/rel1.png" alt="" /><br />
添加关系的方法还是非常简单的。使用<code>[]</code>即可表示关系，<code>:</code>区分变量名和标签，同样可以使用<code>&#123;&#125;</code>描述关系的属性。需要注意的是这里的关系是有方向的，需要用<code>--&gt;</code>或<code>&lt;--</code>表示。上图可以很明显的看出来。如果不知道方向可以使用<code>--</code>表示，这对与查询来说会更简单。<br />
此外在创建节点的时候就可以指明关系</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE (:Person&#123;name:&quot;d&quot;&#125;) -[:IS_FRIENDS_WITH&#123;from:2020&#125;]-&gt;(:Person&#123;name:&quot;e&quot;&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="删"><a class="markdownIt-Anchor" href="#删"></a> 删</h2>
<p>删除命令也比较简单，但是需要注意的是，NEO4j中删除节点需要改节点没有关联的关系。<br />
为了有更好的展示效果，先增条数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (p:Person&#123;name:&quot;qxdn&quot;&#125;)</span><br><span class="line">CREATE (p)-[:BORIN]-&gt;(:Country&#123;name:&quot;China&quot;&#125;)</span><br><span class="line">//</span><br><span class="line">CREATE (:Person&#123;name:&quot;f&quot;&#125;) -[:IS_FRIENDS_WITH&#123;from:2020&#125;]-&gt;(:Person&#123;name:&quot;g&quot;&#125;)</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/before-delete.png" alt="" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 删除关系</span><br><span class="line">MATCH (:Person &#123;name: &#x27;f&#x27;&#125;)-[r:IS_FRIENDS_WITH]-&gt;(:Person &#123;name: &#x27;g&#x27;&#125;)</span><br><span class="line">DELETE r</span><br><span class="line">// 删除节点</span><br><span class="line">MATCH (p:Person &#123;name: &#x27;c&#x27;&#125;)</span><br><span class="line">DELETE p</span><br><span class="line">// 删除节点和关系</span><br><span class="line">MATCH (p1:Person &#123;name: &#x27;d&#x27;&#125;)-[r:IS_FRIENDS_WITH]-&gt;(p2:Person &#123;name: &#x27;e&#x27;&#125;)</span><br><span class="line">DELETE p1,p2,r</span><br><span class="line">// 断开一个节点的关系和其自身</span><br><span class="line">MATCH (c:Country&#123;name:&quot;China&quot;&#125;)</span><br><span class="line">DETACH DELETE c</span><br><span class="line">// 删除一个节点的属性</span><br><span class="line">MATCH (n:Person &#123;name: &#x27;qxdn&#x27;&#125;)</span><br><span class="line">REMOVE n.age</span><br><span class="line">// OR</span><br><span class="line">MATCH (n:Person &#123;name: &#x27;a&#x27;&#125;)</span><br><span class="line">SET n.age = null</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/after-delete.png" alt="删除之后" /></p>
<h2 id="查"><a class="markdownIt-Anchor" href="#查"></a> 查</h2>
<p>先执行一下语句增加节点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//</span><br><span class="line">CREATE (:Country&#123;name:&quot;China&quot;&#125;)</span><br><span class="line">// </span><br><span class="line">CREATE (:Country&#123;name:&quot;USA&quot;&#125;)</span><br><span class="line">//</span><br><span class="line">MATCH (p:Person&#123;name:&quot;qxdn&quot;&#125;),(c:Country&#123;name:&quot;China&quot;&#125;)</span><br><span class="line">MERGE (p)-[:BORN_IN]-&gt;(c)</span><br><span class="line">//</span><br><span class="line">MATCH (p:Person&#123;name:&quot;a&quot;&#125;),(c:Country&#123;name:&quot;China&quot;&#125;)</span><br><span class="line">MERGE (p)-[:BORN_IN]-&gt;(c)</span><br><span class="line">//</span><br><span class="line">MATCH (p:Person&#123;name:&quot;b&quot;&#125;),(c:Country&#123;name:&quot;USA&quot;&#125;)</span><br><span class="line">MERGE (p)-[:BORN_IN]-&gt;(c)</span><br><span class="line">//</span><br><span class="line">MATCH (p:Person&#123;name:&quot;g&quot;&#125;),(c:Country&#123;name:&quot;USA&quot;&#125;)</span><br><span class="line">MERGE (p)-[:BORN_IN]-&gt;(c)</span><br><span class="line">//</span><br><span class="line">MATCH (p:Person&#123;name:&quot;f&quot;&#125;),(c:Country&#123;name:&quot;China&quot;&#125;)</span><br><span class="line">MERGE (p)-[:BORN_IN]-&gt;(c)</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/match1.png" alt="" /></p>
<p>查询语句主要靠<code>MATCH</code>关键词，其功能类似于sql中的<code>SELECT</code></p>
<p>查询所有节点，只输出25个避免过多节点。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (n) </span><br><span class="line">RETURN n </span><br><span class="line">LIMIT 25</span><br></pre></td></tr></table></figure>
<p>结果与上图一样<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/match1.png" alt="" /></p>
<p>查询qxdn出生的国家</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (:Person &#123;name: &#x27;qxdn&#x27;&#125;)-[:BORN_IN]-&gt;(c:Country)</span><br><span class="line">RETURN c</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/match2.png" alt="" /></p>
<p>查询qxdn和a做朋友的起始年</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (:Person &#123;name: &#x27;qxdn&#x27;&#125;)-[r:IS_FRIENDS_WITH]-&gt;(:Person &#123;name: &#x27;a&#x27;&#125;)</span><br><span class="line">RETURN r.from</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/match3.png" alt="" /></p>
<p>查询所有中国出生的人</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (p:Person)-[:BORN_IN]-&gt;(c:Country&#123;name:&quot;China&quot;&#125;)</span><br><span class="line">RETURN p,c</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/match4.png" alt="" /></p>
<h2 id="改"><a class="markdownIt-Anchor" href="#改"></a> 改</h2>
<p>改主要是使用<code>SET</code>关键词<br />
修改a的出生国</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (p:Person&#123;name:&quot;a&quot;&#125;)-[:BORN_IN]-(c:Country&#123;name:&quot;China&quot;&#125;)</span><br><span class="line">SET c.name = &quot;USA&quot;</span><br><span class="line">RETURN p,c</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/set.png" alt="" /></p>
<h1 id="前端可视化"><a class="markdownIt-Anchor" href="#前端可视化"></a> 前端可视化</h1>
<p>前端可视化可以使用<code>neovis.js</code>。这是使用vis.js对neo4j进行定制，可以在前端直接操作neo4j。由于实验室项目不需要管啥安全，因此也不管明文密码了。</p>
<p>这里我们先clone一下官网的repo。并修改其中的<code>simple-example.html</code>。修改其中的<code>config</code>变量</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> config = &#123;</span><br><span class="line">				<span class="attr">container_id</span>: <span class="string">&quot;viz&quot;</span>, <span class="comment">//jquery的容器id</span></span><br><span class="line">				<span class="attr">server_url</span>: <span class="string">&quot;bolt://localhost:7687&quot;</span>, <span class="comment">//服务器url</span></span><br><span class="line">				<span class="attr">server_user</span>: <span class="string">&quot;qxdn&quot;</span>,</span><br><span class="line">				<span class="attr">server_password</span>: <span class="string">&quot;123456&quot;</span>,</span><br><span class="line"></span><br><span class="line">				<span class="attr">labels</span>: &#123;</span><br><span class="line">					<span class="comment">//&quot;Character&quot;: &quot;name&quot;,</span></span><br><span class="line">					<span class="string">&quot;Person&quot;</span>: &#123;</span><br><span class="line">						<span class="string">&quot;caption&quot;</span>: <span class="string">&quot;name&quot;</span>, <span class="comment">//节点显示的内容 </span></span><br><span class="line">						<span class="string">&quot;title_properties&quot;</span>: [ <span class="comment">//鼠标移到节点上显示的内容</span></span><br><span class="line">							<span class="string">&quot;name&quot;</span>,</span><br><span class="line">							<span class="string">&quot;age&quot;</span></span><br><span class="line">						]</span><br><span class="line">					&#125;,</span><br><span class="line">					<span class="string">&quot;Country&quot;</span>: &#123;</span><br><span class="line">						<span class="string">&quot;caption&quot;</span>: <span class="string">&quot;name&quot;</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">				<span class="attr">relationships</span>: &#123;</span><br><span class="line">				&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				<span class="attr">initial_cypher</span>: <span class="string">&quot;MATCH p=()--&gt;() RETURN p&quot;</span>    <span class="comment">// 初始化的cypher语句</span></span><br><span class="line">			&#125;;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.8/front.png" alt="" /></p>
<h2 id="完整代码"><a class="markdownIt-Anchor" href="#完整代码"></a> 完整代码</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>Neovis.js Simple Example<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">		<span class="selector-tag">html</span>,</span></span><br><span class="line"><span class="language-css">		<span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">			<span class="attribute">font</span>: <span class="number">16pt</span> arial;</span></span><br><span class="line"><span class="language-css">		&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">		<span class="selector-id">#viz</span> &#123;</span></span><br><span class="line"><span class="language-css">			<span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="language-css">			<span class="attribute">height</span>: <span class="number">700px</span>;</span></span><br><span class="line"><span class="language-css">			<span class="attribute">border</span>: <span class="number">1px</span> solid lightgray;</span></span><br><span class="line"><span class="language-css">			<span class="attribute">font</span>: <span class="number">22pt</span> arial;</span></span><br><span class="line"><span class="language-css">		&#125;</span></span><br><span class="line"><span class="language-css">	</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- <span class="doctag">FIXME:</span> load from dist --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../dist/neovis.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.2.1.min.js&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">integrity</span>=<span class="string">&quot;sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="comment">// define config car</span></span></span><br><span class="line"><span class="language-javascript">		<span class="comment">// instantiate nodevis object</span></span></span><br><span class="line"><span class="language-javascript">		<span class="comment">// draw</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> viz;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">function</span> <span class="title function_">draw</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">var</span> config = &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">container_id</span>: <span class="string">&quot;viz&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">server_url</span>: <span class="string">&quot;bolt://localhost:7687&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">server_user</span>: <span class="string">&quot;qxdn&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">server_password</span>: <span class="string">&quot;123456&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">				<span class="attr">labels</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="comment">//&quot;Character&quot;: &quot;name&quot;,</span></span></span><br><span class="line"><span class="language-javascript">					<span class="string">&quot;Person&quot;</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="string">&quot;caption&quot;</span>: <span class="string">&quot;name&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">						<span class="string">&quot;title_properties&quot;</span>: [</span></span><br><span class="line"><span class="language-javascript">							<span class="string">&quot;name&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">							<span class="string">&quot;age&quot;</span></span></span><br><span class="line"><span class="language-javascript">						]</span></span><br><span class="line"><span class="language-javascript">					&#125;,</span></span><br><span class="line"><span class="language-javascript">					<span class="string">&quot;Country&quot;</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="string">&quot;caption&quot;</span>: <span class="string">&quot;name&quot;</span></span></span><br><span class="line"><span class="language-javascript">					&#125;</span></span><br><span class="line"><span class="language-javascript">				&#125;,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">relationships</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">				&#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">				<span class="attr">initial_cypher</span>: <span class="string">&quot;MATCH p=()--&gt;() RETURN p&quot;</span></span></span><br><span class="line"><span class="language-javascript">			&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">			viz = <span class="keyword">new</span> <span class="title class_">NeoVis</span>.<span class="title function_">default</span>(config);</span></span><br><span class="line"><span class="language-javascript">			viz.<span class="title function_">render</span>();</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">log</span>(viz);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;draw()&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;viz&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	Cypher query: <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;4&quot;</span> <span class="attr">cols</span>=<span class="string">50</span> <span class="attr">id</span>=<span class="string">&quot;cypher&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> <span class="attr">id</span>=<span class="string">&quot;reload&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Stabilize&quot;</span> <span class="attr">id</span>=<span class="string">&quot;stabilize&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	$(<span class="string">&quot;#reload&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> cypher = $(<span class="string">&quot;#cypher&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">if</span> (cypher.<span class="property">length</span> &gt; <span class="number">3</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">			viz.<span class="title function_">renderWithCypher</span>(cypher);</span></span><br><span class="line"><span class="language-javascript">		&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;reload&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">			viz.<span class="title function_">reload</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	$(<span class="string">&quot;#stabilize&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">		viz.<span class="title function_">stabilize</span>();</span></span><br><span class="line"><span class="language-javascript">	&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>本文简单的介绍了一下neo4j以及其的Cypher Query语句，还有前端可视化的方案。关于Cypher更详细的用法和前端更多参数化的定制可以看官方的教程，链接放在了下方的参考资料里面。</p>
<h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1>
<p><a href="https://en.wikipedia.org/wiki/Neo4j">Neo4j wikipedia</a></p>
<p><a href="https://baike.baidu.com/item/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/8120012">知识图谱</a></p>
<p><a href="https://neo4j.com/developer/cypher/querying/">Querying with Cypher</a></p>
<p><a href="https://neo4j.com/developer/cypher/guide-cypher-basics/">guide-cypher-basics</a></p>
<p><a href="https://github.com/neo4j-contrib/neovis.js">neovis.js</a></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>nosql</tag>
        <tag>neo4j</tag>
      </tags>
  </entry>
  <entry>
    <title>米游社爬虫</title>
    <url>/2021/11/12/mihoyo-bbs-crawler/</url>
    <content><![CDATA[<blockquote>
<p>封面《悠久のカンパネラ》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>因为个人比较喜欢米游社的COS图和同人图，同时觉得其质量满高的，因此打算爬取其图片。</p>
<p>完整附带简易cli的代码放在了<a href="https://github.com/qxdn/mihoyo-bbs-crawler">GitHub</a></p>
<h1 id="关闭debug模式"><a class="markdownIt-Anchor" href="#关闭debug模式"></a> 关闭Debug模式</h1>
<p>首先先分析原神的页面，打开原神的<a href="https://bbs.mihoyo.com/ys/home/49">COS页面</a>，一如既往的打开调试页面。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.7/f12.png" alt="" /><br />
可以看到米游社对分析源代码做了一些防范，分析时会始终卡在debug页面上。但是这也难不倒我们。直接点击下方的deactivate按钮，即可关闭debug模式。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.7/deactivate.png" alt="" /></p>
<h1 id="分析请求"><a class="markdownIt-Anchor" href="#分析请求"></a> 分析请求</h1>
<p>以原神COS的热门图片为例。在调试页面下打开原神COS页面的热门图片，分析其中的请求。从网页源代码中可以发现米游社是一个动态页面，所有的内容都是向服务器动态请求。因此在network界面中找到含有内容json的请求。找到的界面如下。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.7/get1.png" alt="request" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.7/get-perview.png" alt="preview" /></p>
<p>由此分析请求参数，得到如下参数:</p>
<ul>
<li>api地址: <a href="https://bbs-api.mihoyo.com/post/wapi/getForumPostList">https://bbs-api.mihoyo.com/post/wapi/getForumPostList</a></li>
<li>fourm_id</li>
<li>gids</li>
<li>is_good</li>
<li>is_hot</li>
<li>page_size</li>
</ul>
<p>接下来逐个分析各个参数。</p>
<!--TOC-->
<p><a href="#%E5%AE%8C%E6%95%B4%E5%8F%82%E6%95%B0%E6%84%8F%E4%B9%89">完整的参数含义</a></p>
<!--TOC-->
<h2 id="api地址"><a class="markdownIt-Anchor" href="#api地址"></a> api地址</h2>
<p>观察<code>最新回复</code>、<code>最新发帖</code>、<code>热门</code>、<code>精华</code>、<code>日榜</code>、<code>周榜</code>、<code>月榜</code>。可以得到各个内容对应的api地址。</p>
<ul>
<li>baseurl: <a href="https://bbs-api.mihoyo.com/post/wapi">https://bbs-api.mihoyo.com/post/wapi</a></li>
<li>api
<ul>
<li>/getForumPostList:
<ul>
<li><code>最新回复</code></li>
<li><code>最新发帖</code></li>
<li><code>热门</code></li>
<li><code>日榜</code></li>
<li><code>周榜</code></li>
<li><code>月榜</code></li>
</ul>
</li>
<li>/forumGoodPostFullList:
<ul>
<li><code>精华</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="forum_id"><a class="markdownIt-Anchor" href="#forum_id"></a> forum_id</h2>
<p>forum_id为社区的id，不同社区的id不同。各大社区对应id如下。</p>
<ul>
<li>原神
<ul>
<li>COS: 49</li>
<li>同人图: 29</li>
</ul>
</li>
<li>崩3
<ul>
<li>同人图: 4</li>
</ul>
</li>
<li>大别墅
<ul>
<li>COS: 47</li>
<li>同人图: 39</li>
</ul>
</li>
<li>星穹铁道
<ul>
<li>同人图: 56</li>
</ul>
</li>
<li>崩2
<ul>
<li>同人图: 40</li>
</ul>
</li>
<li>未定
<ul>
<li>同人图: 38</li>
</ul>
</li>
</ul>
<h2 id="gids"><a class="markdownIt-Anchor" href="#gids"></a> gids</h2>
<p>gids在json中可以看到是指game_id，各大游戏的game_id对应如下</p>
<ul>
<li>崩3: 1</li>
<li>原神: 2</li>
<li>崩2: 3</li>
<li>未定: 4</li>
<li>大别墅: 5</li>
<li>星穹铁道: 6</li>
</ul>
<h2 id="is_good"><a class="markdownIt-Anchor" href="#is_good"></a> is_good</h2>
<p>该参数为一个bool值，表示是否为精华。实际上基本用不到，精华查询不用这个。</p>
<h2 id="is_hot"><a class="markdownIt-Anchor" href="#is_hot"></a> is_hot</h2>
<p>该参数为一个bool值，表示是否为热门。</p>
<h2 id="sort_type"><a class="markdownIt-Anchor" href="#sort_type"></a> sort_type</h2>
<p>在观察最新发帖和最新回复页面请求时发现该参数。该参数为一个int变量，可选值为1或者2。对应内容如下</p>
<ul>
<li>最新回复: 1</li>
<li>最新发帖: 2</li>
</ul>
<h2 id="type"><a class="markdownIt-Anchor" href="#type"></a> type</h2>
<p>在观察榜单的请求时发泄该参数。该参数为一个int变量，可选值为1、2、3，对应内容如下</p>
<ul>
<li>日榜: 1</li>
<li>周榜: 2</li>
<li>月榜: 3</li>
</ul>
<h1 id="完整参数意义"><a class="markdownIt-Anchor" href="#完整参数意义"></a> 完整参数意义</h1>
<ul>
<li>api:
<ul>
<li>/forumGoodPostFullList: 用于查询精华</li>
<li>/getForumPostList: 用于热门、最新回复、最新发帖、榜单</li>
</ul>
</li>
<li>fourm_id: 社区id</li>
<li>gids: 游戏id</li>
<li>is_good: 是否为精华</li>
<li>is_hot: 是否为热门</li>
<li>page_size: 返回post的数量</li>
<li>sort_type: 用于查询和区别最新回复和最新发帖</li>
<li>type: 用于榜单查询，区分日榜、周榜和月榜</li>
</ul>
<h1 id="json分析"><a class="markdownIt-Anchor" href="#json分析"></a> json分析</h1>
<p>米游社返回的json基本相同，但是精华返回的与其他略有不同。主要为其中一个key不同，精华是<code>posts</code>、其余是<code>list</code></p>
<h2 id="精华"><a class="markdownIt-Anchor" href="#精华"></a> 精华</h2>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;retcode&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;OK&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;posts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;post&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;game_id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;post_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10544616&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;f_forum_id&quot;</span><span class="punctuation">:</span> <span class="number">29</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;179065436&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;subject&quot;</span><span class="punctuation">:</span> <span class="string">&quot;【观测枢】灶王爷锅巴-②&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;逐月节里惹人疼爱的锅巴头像二期来啦~\n一共4张，按照图的顺序分别是：\n①锅锅害羞（这表情就出现过两个瞬间，太少了）\n②锅锅委屈（魈猫猫不理锅！）\n③锅吃窝头（初遇香菱情景）\n④锅锅神像（灶神像）&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/0f0dc49e5b4f3f579119e81c2d98a1c1_61295632854955864.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;view_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1633624612</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;images&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                        <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/c8e8c7e273b31f7e16ce65d5220c18c0_1642884008313599219.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/2897e34888a2ef7ccafa099202432971_149407973314057590.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/0f0dc49e5b4f3f579119e81c2d98a1c1_61295632854955864.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/36eb746e02be4563e086c15571f3f8e3_3412574759048499179.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/affa15e44b7eb4c2359e3464c5549715_874705953357861664.png&quot;</span></span><br><span class="line">                    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;post_status&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;is_top&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_good&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_official&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;topic_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                        <span class="number">53</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="number">105</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="number">439</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="number">559</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="number">761</span></span><br><span class="line">                    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;view_status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;max_floor&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_original&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;republish_authorization&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;reply_time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-10-22 08:03:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_deleted&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_interactive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;structured_content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;structured_content_rows&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;review_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_profit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_in_profit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;forum&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">29</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同人图&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2020/04/05/f8b71f0c5b81976d7e36c8ae014f9e5b.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;game_id&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">53</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同人图&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/09/09/61f2fe15f5fd3d976690855337ba5ba9_7313218117241578974.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_top&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_good&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_interactive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;game_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;content_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">105</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;表情包&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2019/06/27/178fc0552cf615c5c40fd8bb9a1556ab.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_top&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_good&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_interactive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;game_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;content_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">439</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;香菱&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2020/11/25/8a4309c40e68e3e42fb64931e8fad6fc.jpeg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_top&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_good&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_interactive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;game_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;content_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">559</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;头像&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/04/01/d76532e1f634d57646dcbc1852eba6a8_2131217136772532601.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_top&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_good&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_interactive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;game_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;content_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">761</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;来点稿头&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/09/06/e58af9f46cdf0e920386f44dbc089617_4917005110024976346.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_top&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_good&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_interactive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;game_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;content_type&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;179065436&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;nickname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;子旖&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;introduce&quot;</span><span class="punctuation">:</span> <span class="string">&quot;懒癌晚期患者+重度杂食性选手，我只会画大头&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;30015&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;certification&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;观测者、画师&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;level_exp&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;exp&quot;</span><span class="punctuation">:</span> <span class="number">7493</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_following&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_followed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;avatar_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://img-static.mihoyo.com/avatar/avatar30015.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;pendant&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;self_operation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;attitude&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_collected&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;stat&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;view_num&quot;</span><span class="punctuation">:</span> <span class="number">4353</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;reply_num&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;like_num&quot;</span><span class="punctuation">:</span> <span class="number">490</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;bookmark_num&quot;</span><span class="punctuation">:</span> <span class="number">47</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;forward_num&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;help_sys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;top_up&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;top_n&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;answer_num&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/0f0dc49e5b4f3f579119e81c2d98a1c1_61295632854955864.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">2000</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">2000</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;810604&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;crop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_user_set_cover&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;image_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;27423117&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;entity_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IMG_ENTITY_POST&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;entity_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10544616&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image_list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/c8e8c7e273b31f7e16ce65d5220c18c0_1642884008313599219.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">2000</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">2000</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;785773&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;crop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_user_set_cover&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;image_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;27423068&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IMG_ENTITY_POST&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10544616&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/2897e34888a2ef7ccafa099202432971_149407973314057590.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">2000</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">2000</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;818320&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;crop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_user_set_cover&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;image_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;27423098&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IMG_ENTITY_POST&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10544616&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/0f0dc49e5b4f3f579119e81c2d98a1c1_61295632854955864.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">2000</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">2000</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;810604&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;crop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_user_set_cover&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;image_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;27423117&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IMG_ENTITY_POST&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10544616&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/36eb746e02be4563e086c15571f3f8e3_3412574759048499179.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">2000</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">2000</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;889738&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;crop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_user_set_cover&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;image_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;27423123&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IMG_ENTITY_POST&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10544616&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/10/08/179065436/affa15e44b7eb4c2359e3464c5549715_874705953357861664.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">270</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">1080</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;140855&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;crop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_user_set_cover&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;image_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;27423168&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IMG_ENTITY_POST&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10544616&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;is_official_master&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;is_user_master&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hot_reply_exist&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;vote_count&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;last_modify_time&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;recommend_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;collection&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;vod_list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;is_block_on&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;forum_rank_info&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;last_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;is_last&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;next_offset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="其余返回"><a class="markdownIt-Anchor" href="#其余返回"></a> 其余返回</h2>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;retcode&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;OK&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;post&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;game_id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;post_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11794784&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;f_forum_id&quot;</span><span class="punctuation">:</span> <span class="number">49</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;283837710&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;subject&quot;</span><span class="punctuation">:</span> <span class="string">&quot;【cos】往生堂第七十七代堂主就是胡桃我啦！&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;可以说这是我cos过最不像的一个角色了，做胡桃的传说任务觉得她表面活泼可爱 实际上心理又很成熟豁达，还有点小腹黑，这样的反差好难表达，我一点也不可爱，再也不会出了。。。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/11/09/283837710/eaf9376a42d40973d43a90a113828e93_1442388115152832304.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;view_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1636438339</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;images&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                        <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/11/09/283837710/96b35bf328a9884fb15021c5377372ec_53917698238889953.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/11/09/283837710/eaf9376a42d40973d43a90a113828e93_1442388115152832304.jpg&quot;</span></span><br><span class="line">                    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;post_status&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;is_top&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_good&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_official&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;topic_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                        <span class="number">525</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="number">547</span></span><br><span class="line">                    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;view_status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;max_floor&quot;</span><span class="punctuation">:</span> <span class="number">2495</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_original&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;republish_authorization&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;reply_time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-11-12 10:00:12&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_deleted&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_interactive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;structured_content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;structured_content_rows&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;review_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_profit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_in_profit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;forum&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">49</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;COS&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/04/29/0cd5fbc21feccc3dbccf7ddd3a14cded.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;game_id&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">525</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;胡桃&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/02/27/5f567ecb567640f0a9e26775f6aa4942.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_top&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_good&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_interactive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;game_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;content_type&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">547</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cosplay&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/09/09/9a3b4ee5699c95707df85fb77bce39f2_1763133664448316116.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_top&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_good&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_interactive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;game_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;content_type&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;283837710&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;nickname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;小白Nanno&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;introduce&quot;</span><span class="punctuation">:</span> <span class="string">&quot;全网都叫小白Nanno，视频在抖音快手b站               &quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;100061&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;certification&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Coser&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;level_exp&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;exp&quot;</span><span class="punctuation">:</span> <span class="number">10211</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_following&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_followed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;avatar_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://img-static.mihoyo.com/communityweb/upload/a57113d5e6173a05f7980c978c5a2bd6.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;pendant&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;self_operation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;attitude&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_collected&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;stat&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;view_num&quot;</span><span class="punctuation">:</span> <span class="number">529292</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;reply_num&quot;</span><span class="punctuation">:</span> <span class="number">3664</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;like_num&quot;</span><span class="punctuation">:</span> <span class="number">113866</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;bookmark_num&quot;</span><span class="punctuation">:</span> <span class="number">4978</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;forward_num&quot;</span><span class="punctuation">:</span> <span class="number">543</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;help_sys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;top_up&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;top_n&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;answer_num&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/11/09/283837710/eaf9376a42d40973d43a90a113828e93_1442388115152832304.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">4032</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">2268</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4346689&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;crop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;is_user_set_cover&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;image_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;30556208&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;entity_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IMG_ENTITY_POST&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;entity_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11794784&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image_list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/11/09/283837710/96b35bf328a9884fb15021c5377372ec_53917698238889953.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">3865</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">2174</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4443075&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;crop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_user_set_cover&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;image_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;30556207&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IMG_ENTITY_POST&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11794784&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://upload-bbs.mihoyo.com/upload/2021/11/09/283837710/eaf9376a42d40973d43a90a113828e93_1442388115152832304.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">4032</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">2268</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4346689&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;crop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;is_user_set_cover&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;image_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;30556208&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IMG_ENTITY_POST&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;entity_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11794784&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;is_official_master&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;is_user_master&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hot_reply_exist&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;vote_count&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;last_modify_time&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;recommend_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;collection&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;vod_list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;is_block_on&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;forum_rank_info&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;last_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;is_last&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;is_origin&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h1 id="完整代码"><a class="markdownIt-Anchor" href="#完整代码"></a> 完整代码</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum, unique</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Dict</span>, <span class="type">List</span></span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BasicSpider</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        self.base_url = <span class="string">&quot;https://bbs-api.mihoyo.com/post/wapi/&quot;</span></span><br><span class="line">        <span class="comment"># api 地址</span></span><br><span class="line">        self.api = <span class="literal">None</span></span><br><span class="line">        <span class="comment"># 社区 id</span></span><br><span class="line">        self.forum_id = <span class="literal">None</span></span><br><span class="line">        <span class="comment"># 含义未知 似乎是game_id</span></span><br><span class="line">        self.gids = <span class="literal">None</span></span><br><span class="line">        <span class="comment"># 精品</span></span><br><span class="line">        self.is_good = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 热门</span></span><br><span class="line">        self.is_hot = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 游戏名</span></span><br><span class="line">        self.game_name = <span class="literal">None</span></span><br><span class="line">        <span class="comment"># 请求头</span></span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.82 Safari/537.36&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://bbs.mihoyo.com/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;https://bbs.mihoyo.com/&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_params</span>(<span class="params">self, page_size: <span class="built_in">int</span></span>) -&gt; <span class="type">Dict</span>:</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        获取请求参数</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sync_get_urls</span>(<span class="params">self, page_size: <span class="built_in">int</span> = <span class="number">20</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        以同步的方式获取图片地址 默认20张，就算不传page_size也是20</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sync_get</span>(<span class="params">self, params: <span class="built_in">dict</span> = <span class="literal">None</span>, is_good: <span class="built_in">bool</span> = <span class="literal">False</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        以同步的方式获取response</span></span><br><span class="line"><span class="string">        params: 请求参数</span></span><br><span class="line"><span class="string">        is_good: 是否为精华</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        r = httpx.get(self.api, params=params, headers=self.headers)</span><br><span class="line">        <span class="keyword">return</span> self.handle_response(r, is_good=is_good)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_get_urls</span>(<span class="params">self, page_size: <span class="built_in">int</span> = <span class="number">20</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        以异步的方式获取图片地址 默认20张，就算不传page_size也是20</span></span><br><span class="line"><span class="string">        TODO 测试</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_get</span>(<span class="params">self, params: <span class="built_in">dict</span> = <span class="literal">None</span>, is_good: <span class="built_in">bool</span> = <span class="literal">False</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        以异步的方式获取response</span></span><br><span class="line"><span class="string">        params: 请求参数</span></span><br><span class="line"><span class="string">        is_good: 是否为精华</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> httpx.AsyncClient() <span class="keyword">as</span> client:</span><br><span class="line">            r = <span class="keyword">await</span> client.get(self.api, params=params, headers=self.headers)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.handle_response(r, is_good=is_good)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_response</span>(<span class="params">self, response, is_good: <span class="built_in">bool</span> = <span class="literal">False</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        处理返回的请求</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        urls = []</span><br><span class="line">        <span class="keyword">if</span> is_good:</span><br><span class="line">            posts = response.json()[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;posts&quot;</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            posts = response.json()[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;list&quot;</span>]</span><br><span class="line">        <span class="keyword">for</span> post <span class="keyword">in</span> posts:</span><br><span class="line">            images = post[<span class="string">&quot;post&quot;</span>][<span class="string">&quot;images&quot;</span>]</span><br><span class="line">            <span class="keyword">for</span> image <span class="keyword">in</span> images:</span><br><span class="line">                urls.append(image)</span><br><span class="line">        <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_game_name</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="keyword">return</span> self.game_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@unique</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RankType</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    排行榜类型</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 日榜</span></span><br><span class="line">    Daily = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 周榜</span></span><br><span class="line">    Weekly = <span class="number">2</span></span><br><span class="line">    <span class="comment"># 月榜</span></span><br><span class="line">    Monthly = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@unique</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LatestType</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    最新回复或者是最新发帖</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 最新回复</span></span><br><span class="line">    LatestComment = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 最新发帖</span></span><br><span class="line">    LatestPost = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@unique</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GameType</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    游戏类型</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 原神</span></span><br><span class="line">    Genshin = <span class="number">2</span></span><br><span class="line">    <span class="comment"># 崩3</span></span><br><span class="line">    Honkai3rd = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 大别墅 话说大别墅为啥是DBY</span></span><br><span class="line">    DBY = <span class="number">5</span></span><br><span class="line">    <span class="comment"># 星穹铁道</span></span><br><span class="line">    StarRail = <span class="number">6</span></span><br><span class="line">    <span class="comment"># 崩2</span></span><br><span class="line">    Honkai2 = <span class="number">3</span></span><br><span class="line">    <span class="comment"># 未定 这名字真奇怪</span></span><br><span class="line">    TearsOfThemis = <span class="number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@unique</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ForumType</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    社区类型 要与游戏类型一致</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 原神 cos</span></span><br><span class="line">    GenshinCos = <span class="number">49</span></span><br><span class="line">    <span class="comment"># 原神 同人图</span></span><br><span class="line">    GenshinPic = <span class="number">29</span></span><br><span class="line">    <span class="comment"># 崩3 同人图</span></span><br><span class="line">    Honkai3rdPic = <span class="number">4</span></span><br><span class="line">    <span class="comment"># 大别墅 COS</span></span><br><span class="line">    DBYCOS = <span class="number">47</span></span><br><span class="line">    <span class="comment"># 大别墅 同人图</span></span><br><span class="line">    DBYPIC = <span class="number">39</span></span><br><span class="line">    <span class="comment"># 星穹铁道 同人图</span></span><br><span class="line">    StarRailPic = <span class="number">56</span></span><br><span class="line">    <span class="comment"># 崩2 同人图</span></span><br><span class="line">    Honkai2Pic = <span class="number">40</span></span><br><span class="line">    <span class="comment"># 未定 同人图</span></span><br><span class="line">    TearsOfThemisPic = <span class="number">38</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_gids</span>(<span class="params">forum: <span class="built_in">str</span></span>) -&gt; GameType:</span><br><span class="line">    forum2gid = &#123;</span><br><span class="line">        <span class="string">&quot;GenshinCos&quot;</span>: GameType.Genshin,</span><br><span class="line">        <span class="string">&quot;GenshinPic&quot;</span>: GameType.Genshin,</span><br><span class="line">        <span class="string">&quot;Honkai3rdPic&quot;</span>: GameType.Honkai3rd,</span><br><span class="line">        <span class="string">&quot;DBYCOS&quot;</span>: GameType.DBY,</span><br><span class="line">        <span class="string">&quot;DBYPIC&quot;</span>: GameType.DBY,</span><br><span class="line">        <span class="string">&quot;StarRailPic&quot;</span>: GameType.StarRail,</span><br><span class="line">        <span class="string">&quot;Honkai2Pic&quot;</span>: GameType.Honkai2,</span><br><span class="line">        <span class="string">&quot;TearsOfThemisPic&quot;</span>: GameType.TearsOfThemis</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> forum2gid[forum]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Rank</span>(<span class="title class_ inherited__">BasicSpider</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    榜单</span></span><br><span class="line"><span class="string">    url: https://bbs.mihoyo.com/ys/imgRanking/49</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, forum_id: ForumType, <span class="built_in">type</span>: RankType</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.api = parse.urljoin(self.base_url, <span class="string">&quot;getImagePostList&quot;</span>)</span><br><span class="line">        self.forum_id = forum_id.value</span><br><span class="line">        gametype = get_gids(forum_id.name)</span><br><span class="line">        self.gids = gametype.value</span><br><span class="line">        <span class="comment"># 日榜</span></span><br><span class="line">        self.<span class="built_in">type</span> = <span class="built_in">type</span>.value</span><br><span class="line">        self.game_name = gametype.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_params</span>(<span class="params">self, page_size: <span class="built_in">int</span></span>) -&gt; <span class="type">Dict</span>:</span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&quot;forum_id&quot;</span>: self.forum_id,</span><br><span class="line">            <span class="string">&quot;gids&quot;</span>: self.gids,</span><br><span class="line">            <span class="string">&quot;page_size&quot;</span>: page_size,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: self.<span class="built_in">type</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> params</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sync_get_urls</span>(<span class="params">self, page_size: <span class="built_in">int</span> = <span class="number">21</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="keyword">return</span> self.sync_get(self.get_params(page_size))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_get_urls</span>(<span class="params">self, page_size: <span class="built_in">int</span> = <span class="number">20</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> self.async_get(self.get_params(page_size))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Hot</span>(<span class="title class_ inherited__">BasicSpider</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    热门</span></span><br><span class="line"><span class="string">    url: https://bbs.mihoyo.com/ys/home/49?type=hot</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, forum_id: ForumType</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.api = parse.urljoin(self.base_url, <span class="string">&quot;getForumPostList&quot;</span>)</span><br><span class="line">        self.forum_id = forum_id.value</span><br><span class="line">        gametype = get_gids(forum_id.name)</span><br><span class="line">        self.gids = gametype.value</span><br><span class="line">        self.is_hot = <span class="literal">True</span></span><br><span class="line">        self.game_name = gametype.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_params</span>(<span class="params">self, page_size: <span class="built_in">int</span></span>) -&gt; <span class="type">Dict</span>:</span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&quot;forum_id&quot;</span>: self.forum_id,</span><br><span class="line">            <span class="string">&quot;gids&quot;</span>: self.gids,</span><br><span class="line">            <span class="string">&quot;is_good&quot;</span>: self.is_good,</span><br><span class="line">            <span class="string">&quot;is_hot&quot;</span>: self.is_hot,</span><br><span class="line">            <span class="string">&quot;page_size&quot;</span>: page_size</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> params</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sync_get_urls</span>(<span class="params">self, page_size: <span class="built_in">int</span> = <span class="number">20</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="keyword">return</span> self.sync_get(self.get_params(page_size))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_get_urls</span>(<span class="params">self, page_size: <span class="built_in">int</span> = <span class="number">20</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> self.async_get(self.get_params(page_size))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Good</span>(<span class="title class_ inherited__">BasicSpider</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    精华</span></span><br><span class="line"><span class="string">    url: https://bbs.mihoyo.com/ys/home/49?type=good</span></span><br><span class="line"><span class="string">    原神COS精华目录目前为空</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, forum_id: ForumType</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.api = parse.urljoin(self.base_url, <span class="string">&quot;forumGoodPostFullList&quot;</span>)</span><br><span class="line">        self.forum_id = forum_id.value</span><br><span class="line">        gametype = get_gids(forum_id.name)</span><br><span class="line">        self.gids = gametype.value</span><br><span class="line">        self.game_name = gametype.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_params</span>(<span class="params">self, page_size: <span class="built_in">int</span></span>) -&gt; <span class="type">Dict</span>:</span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&quot;forum_id&quot;</span>: self.forum_id,</span><br><span class="line">            <span class="string">&quot;gids&quot;</span>: self.gids,</span><br><span class="line">            <span class="string">&quot;page_size&quot;</span>: page_size</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> params</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sync_get_urls</span>(<span class="params">self, page_size: <span class="built_in">int</span> = <span class="number">20</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="keyword">return</span> self.sync_get(self.get_params(page_size), is_good=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_get_urls</span>(<span class="params">self, page_size: <span class="built_in">int</span> = <span class="number">20</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> self.async_get(self.get_params(page_size), is_good=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Latest</span>(<span class="title class_ inherited__">BasicSpider</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    最新回复和发帖</span></span><br><span class="line"><span class="string">    url: https://bbs.mihoyo.com/ys/home/49?type=1</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, forum_id: ForumType, sort_type: LatestType</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.api = parse.urljoin(self.base_url, <span class="string">&quot;getForumPostList&quot;</span>)</span><br><span class="line">        self.forum_id = forum_id.value</span><br><span class="line">        gametype = get_gids(forum_id.name)</span><br><span class="line">        self.gids = gametype.value</span><br><span class="line">        <span class="comment"># 排序类型</span></span><br><span class="line">        self.sort_type = sort_type.value</span><br><span class="line">        self.game_name = gametype.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_params</span>(<span class="params">self, page_size: <span class="built_in">int</span></span>) -&gt; <span class="type">Dict</span>:</span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&quot;forum_id&quot;</span>: self.forum_id,</span><br><span class="line">            <span class="string">&quot;gids&quot;</span>: self.gids,</span><br><span class="line">            <span class="string">&quot;page_size&quot;</span>: page_size,</span><br><span class="line">            <span class="string">&quot;is_good&quot;</span>: self.is_good,</span><br><span class="line">            <span class="string">&quot;is_hot&quot;</span>: self.is_hot,</span><br><span class="line">            <span class="string">&quot;sort_type&quot;</span>: self.sort_type</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> params</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sync_get_urls</span>(<span class="params">self, page_size: <span class="built_in">int</span> = <span class="number">20</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="keyword">return</span> self.sync_get(self.get_params(page_size))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_get_urls</span>(<span class="params">self, page_size: <span class="built_in">int</span> = <span class="number">20</span></span>) -&gt; <span class="type">List</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> self.async_get(self.get_params(page_size))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    gh = Good(ForumType.Honkai2Pic)</span><br><span class="line">    urls = gh.sync_get_urls()</span><br><span class="line">    <span class="built_in">print</span>(urls)</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>本次完成了带有简单cli的米游社爬虫，并实现了一套简单的同步和异步api。下一步计划进行定时启动任务。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>CMD错误 此时不应有&amp;</title>
    <url>/2021/11/14/cmd-error-was-unexpected/</url>
    <content><![CDATA[<blockquote>
<p>封面《ノラと皇女と野良猫ハート》</p>
</blockquote>
<h1 id="问题描述"><a class="markdownIt-Anchor" href="#问题描述"></a> 问题描述</h1>
<p>打开cmd的时候直接出错，提示“此时不应有&amp;”，英文版应该是“&amp; was unexpected at this time”。问题的实际情况见下图。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.6/error.png" alt="" /></p>
<h1 id="问题解决"><a class="markdownIt-Anchor" href="#问题解决"></a> 问题解决</h1>
<p>幸运的是在stack overflow上能够找到解决方案。首先经过测试<code>cmd.exe /d</code>能够正常运行。<code>cmd.exe /d</code>命令可以阻止注册表中的<code>AutoRun</code>运行。这一点可以在<code>cmd.exe /?</code>中查看有哪些注册表需要检查。</p>
<p>需要查阅的注册表一共有两处</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Command Processor</span><br><span class="line">HKEY_CURRENT_USER\SOFTWARE\Microsoft\Command Processor</span><br></pre></td></tr></table></figure>
<p>使用<code>Win+R</code>并输入<code>regedit</code>打开注册表。查询结果如下</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.6/regedit1.png" alt="" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.6/regedit2.png" alt="" /></p>
<p>可以看到<code>HKEY_CURRENT_USER\SOFTWARE\Microsoft\Command Processor</code>的<code>AutoRun</code>中有一个奇怪的值。这里直接删除即可，或者运行下面的指令。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询所有定义了AutoRun的位置</span></span><br><span class="line"><span class="built_in">Get-ItemProperty</span> <span class="literal">-ea</span> Ignore (<span class="string">&#x27;HKCU:&#x27;</span>, <span class="string">&#x27;HKLM:&#x27;</span> <span class="operator">-replace</span> <span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;\Software\Microsoft\Command Processor&#x27;</span>) AutoRun </span><br><span class="line"><span class="comment"># 查看如果执行了命令会发生什么</span></span><br><span class="line"><span class="built_in">Get-ItemProperty</span> <span class="literal">-ea</span> Ignore (<span class="string">&#x27;HKCU:&#x27;</span>, <span class="string">&#x27;HKLM:&#x27;</span> <span class="operator">-replace</span> <span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;\Software\Microsoft\Command Processor&#x27;</span>) AutoRun | Remove-</span><br><span class="line">ItemProperty <span class="literal">-Name</span> AutoRun <span class="literal">-WhatIf</span></span><br><span class="line"><span class="comment"># 删除 -WhatIf即可执行命令</span></span><br><span class="line"><span class="built_in">Get-ItemProperty</span> <span class="literal">-ea</span> Ignore (<span class="string">&#x27;HKCU:&#x27;</span>, <span class="string">&#x27;HKLM:&#x27;</span> <span class="operator">-replace</span> <span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;\Software\Microsoft\Command Processor&#x27;</span>) AutoRun | Remove-</span><br><span class="line">ItemProperty <span class="literal">-Name</span> AutoRun</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.6/solution.png" alt="运行结果" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.6/result1.png" alt="运行后的注册表" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.6/result2.png" alt="运行后正常的CMD" /></p>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>这个奇葩的小问题有点难受，不知道是哪个软件干的。所幸stack overflow上有问题的定位方法和解决过程。</p>
<h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1>
<p><a href="https://stackoverflow.com/questions/59480657/cmd-exe-throws-error-was-unexpected-at-this-time">cmd.exe throws error “&amp; was unexpected at this time.”</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>do{...}while(0)的用法</title>
    <url>/2021/11/22/do-while-0/</url>
    <content><![CDATA[<h1 id="源码"><a class="markdownIt-Anchor" href="#源码"></a> 源码</h1>
<p>在AliOS-Things中的<code>k_task.c</code>文件中我们可以发现有这样一个函数调用<code>NULL_PARA_CHK(task)</code>。其功能是检查task变量是否为NULL值，完整的函数定义如下。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> NULL_PARA_CHK(para)        \</span></span><br><span class="line"><span class="meta">    do &#123;                           \</span></span><br><span class="line"><span class="meta">        <span class="keyword">if</span> (para == NULL) &#123;        \</span></span><br><span class="line"><span class="meta">            return RHINO_NULL_PTR; \</span></span><br><span class="line"><span class="meta">        &#125;                          \</span></span><br><span class="line"><span class="meta">    &#125; while (0)</span></span><br></pre></td></tr></table></figure>
<p>可以看到该函数就是一个宏定义，那么问题就来了。这样做有什么好处吗，为什么不直接使用大括号呢。</p>
<h1 id="用处"><a class="markdownIt-Anchor" href="#用处"></a> 用处</h1>
<p>这是一个c语言可以使用的构造函数，其在后面加分号也没问题，在if后面加该宏也没问题。这样说可能有点难理解,还是用案例来说比较好。</p>
<p>假设我们有一个宏定义如下</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> f(x) foo(x);bar(x)</span></span><br></pre></td></tr></table></figure>
<p>如果我们如以下方法调用时不会有问题</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">f(x);</span><br><span class="line"><span class="comment">// 实际</span></span><br><span class="line">foo(x);bar(x);</span><br></pre></td></tr></table></figure>
<p>但是如果我们放到if语句里面就会产生问题</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (cond)</span><br><span class="line">    f(x);</span><br><span class="line"><span class="comment">// 实际</span></span><br><span class="line"><span class="keyword">if</span> (cond)</span><br><span class="line">    foo(x);</span><br><span class="line">bar(x);</span><br></pre></td></tr></table></figure>
<p>可以看到if后面使用该宏的时候，bar(x)在if外面显然不是我们想要的。如果我们用大括号括起来呢？重新定义宏如下</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> f(x) &#123;foo(x);bar(x);&#125;</span></span><br></pre></td></tr></table></figure>
<p>显然放到了上面的if环境中没有问题，但是如果我们再加一个else就有问题了。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (cond)</span><br><span class="line">    f(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    other();</span><br><span class="line"><span class="comment">// 实际</span></span><br><span class="line"><span class="keyword">if</span> (cond)</span><br><span class="line">&#123;</span><br><span class="line">    foo(x);</span><br><span class="line">    bar(x);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    other();</span><br></pre></td></tr></table></figure>
<p>可以发现在大括号后面多了一个分号，在该情况下会有语法问题。因此我们重新修改宏定义如下。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> f(x) do&#123;foo(x);bar(x);&#125;while(0)</span></span><br></pre></td></tr></table></figure>
<p>在do…while(0)宏定义中，do…while语句保证了do中的代码一定会被执行一次，而while(0)保证其只被执行一次。且使用这种宏在上述的if else语句中也不会出错。也可以在后面加上分号。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(cond)</span><br><span class="line">    f(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    other();</span><br><span class="line"><span class="comment">// 实际</span></span><br><span class="line"><span class="keyword">if</span>(cond)</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        foo(x);</span><br><span class="line">        bar(x);</span><br><span class="line">    &#125;<span class="keyword">while</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    other();</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>了解到了c语言宏定义一种神奇的使用方法，同时也了解到了do…while语句的一个用处。知识up。</p>
<h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1>
<p><a href="https://stackoverflow.com/questions/154136/why-use-apparently-meaningless-do-while-and-if-else-statements-in-macros">Why use apparently meaningless do-while and if-else statements in macros?</a></p>
]]></content>
      <categories>
        <category>c</category>
      </categories>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>haas100烧录失败问题解决</title>
    <url>/2021/11/16/haas-burn-error/</url>
    <content><![CDATA[<blockquote>
<p>封面《Eスクールライフ》</p>
</blockquote>
<h1 id="问题描述"><a class="markdownIt-Anchor" href="#问题描述"></a> 问题描述</h1>
<p>haas100无法进行烧录，报错<code>Please connect the serial port of the board to the PC,then reset the board.</code>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.5/error-in-burn.png" alt="烧录错误" /></p>
<h1 id="问题解决方案"><a class="markdownIt-Anchor" href="#问题解决方案"></a> 问题解决方案</h1>
<p><code>Please connect the serial port of th board to the PC,then reset the board.</code>这个问题找不到啥解决资料，官方群里问了也没有没人回应。只能自己翻阅一下haas百事通查查有没有类似资源。找到了其中一条信息如下：</p>
<blockquote>
<p>【情形5】: 提示“Please reboot board now”<br />
解决办法：目前发现部分HaaS100/ EDU K1 由于出厂固件中没有二级boot，现象就是一直提名用户please reboot board now；遇到该问题的同学请先参考这个文档请用下面链接中的“Windows GUI”工具烧录即可解决。之后再用vscode + haas studio烧录也不会出现问题。</p>
</blockquote>
<p>由此我们初步猜测可能是二级boot出了问题，导致haas studio无法对haas100进行软重启。因此我们打开<code>&#123;Your Project&#125;\hardware\chip\haas1000\release\write_flash_gui</code>运行其中的<code>haas1000_write_flash_main.exe</code>。结果发现闪退。无法发现明显原因，那么我们从命令行打开，很明显的就能看到错误原因。比较明显是阿里的人员在编译烧录工具出了问题。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.5/error-in-gui.png" alt="gui错误" /></p>
<p>考虑到之前有人使用该工具烧录成功过，且该工具是使用git clone下来的。那么可以去github找找看有哪个版本的是烧录的。</p>
<blockquote>
<p>2021-11-18更新：<em>闪退原因在于缺少<code>productline_cfg.xml</code>文件，下载<a href="https://raw.githubusercontent.com/alibaba/AliOS-Things/dev_3.1.0_haas/platform/mcu/haas1000/release/write_flash_gui/productline_cfg.xml">productline_cfg.xml</a>并放入<code>wirte_flash_gui</code>文件夹即可，不必再下载整份工程</em></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/alibaba/AliOS-Things.git -b dev_3.1.0_haas</span><br></pre></td></tr></table></figure>
<p>执行上面的git命令，打开<code>&#123;your path&#125;/AliOS-Things/platform/mcu/haas1000/release/write_flash_gui</code>目录中的<code>haas1000_write_flash_main.exe</code>。这次可以看到gui工具打开成功了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.5/gui.png" alt="" /></p>
<p>后续的工作就和官方的操作一样了，官方教程链接放在了底下的参考资料中，但是需要注意的是我们不是只升级二级boot，而是全部重新烧写。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.5/gui-burn.png" alt="成功全部烧写" /></p>
<p>最后测试能否烧写我们的工程，烧写结果如下所示。我的代码成功的烧录进了板子中。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.5/burn-success.png" alt="烧录结果" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.5/result.png" alt="运行结果" /></p>
<h1 id="外谈"><a class="markdownIt-Anchor" href="#外谈"></a> 外谈</h1>
<p>运行<code>aos make clean</code>发现出错，错误原因见下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/bin/bash: -c: line 1: syntax error: unexpected end of file</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.5/clean-error.png" alt="" /></p>
<p>这个问题倒是比较常见，因为Windows的EOL(End of Line)是由回车CR和换行LF组成，这也是为什么我们需要在串口输出中加上\r\n才能换行。而Linux中的EOL是LF。因此在Linux中运行Windows中写的文件会有这个问题。<br />
从错误开头的<code>/usr/bin/bash</code>可以发现是Linux的bash，个人推测这个应该是因为我的电脑里面装有wsl2。从makefile看一下需要删除的文件。</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(OS)</span>, Windows_NT)</span><br><span class="line">	<span class="variable">$(CPRE)</span> if exist aos_sdk rmdir /s /q aos_sdk</span><br><span class="line">	<span class="variable">$(CPRE)</span> if exist binary rmdir /s /q binary</span><br><span class="line">	<span class="variable">$(CPRE)</span> if exist out rmdir /s /q out</span><br><span class="line">	<span class="variable">$(CPRE)</span> if exist aos.elf del /f /q aos.elf</span><br><span class="line">	<span class="variable">$(CPRE)</span> if exist aos.map del /f /q aos.map</span><br></pre></td></tr></table></figure>
<p>观察发现aos_sdk文件夹为*.a应该是到时候要链接的类库，EOL是LF。out文件夹里面是*.d，*.o还有bin文件，基本上为编译中间产物和最终文件，EOL为CRLF，aos.elf和aos.map的ROL都是CRLF，同时发现执行<code>aos make clean</code>后就删除了aos_sdk中的内容。</p>
<p>明白了原因就很容易解决该问题了。看makefile中的命令，应该是用cmd运行。因此只需要在makefile的第一行加上一句<code>SHELL := C:\Windows\System32\cmd.exe</code>。指定运行的shell为cmd即可。修改后的运行结果如下。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.5/clean-success.png" alt="" /></p>
<h1 id="外谈2"><a class="markdownIt-Anchor" href="#外谈2"></a> 外谈2</h1>
<blockquote>
<p>没想到吧，还有2。其实是我懒得新建一个文章了。</p>
</blockquote>
<p>本次主要添加一个powershell中激活aos的小脚本。由于我个人不是很喜欢haas这个插件的目前版本。因为他总是在各个目录下启动，并新建一个终端修改环境变量。于是我平时不用haas时就把这个插件禁用了，但是由于我偶尔由需要打开haas工程编译一点点内容，此时需要重新激活插件略微有点麻烦。考虑到haas studio基本上都是使用aos-tools完成，所谓的修改环境变量也只是为了方便找到aos-tools。在熟悉了aos的几个基本命令后，不使用haas studio也能够完成开发，这样只需要临时修改环境变量就可以直接完成工程，而不用使用那烦人haas studio了。</p>
<p>激活脚本如下，和haas的命令一样，将下面的路径改为你的路径。然后只需要将这段代码保存成<code>activate.ps1</code>或者其他你自己命名的文件，但要注意结尾为<code>.ps1</code>。然后在powershell运行就可以临时激活<code>aos</code>了。<code>$Env:Path</code>只是临时修改环境变量，只需要关闭该终端就可以关闭haas，因此就没写deactivate文件。如果说需要任何地方都可以激活的话，也可以将其放在环境变量里面。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 保存成 activate.ps1</span></span><br><span class="line"><span class="variable">$Env:Path</span>=<span class="string">&quot;C:\ProgramData\aos\miniconda3;C:\ProgramData\aos\miniconda3\Scripts;C:\ProgramData\aos\miniconda3\Library\bin;<span class="variable">$Env:Path</span>&quot;</span> ; </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;=&gt; powershell.exe detected, set miniconda env finished.&quot;</span></span><br></pre></td></tr></table></figure>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>在成功烧写后，我玩了一下haas100这块板子，感觉板子还是不错，做的还行。但是这个开发工具实在不行，问题有点多。希望阿里能够完善一下，不然这个工具就会劝退好多人了。</p>
<h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1>
<p><a href="https://blog.csdn.net/HaaSTech/article/details/119028477">如何升级HaaS100 / HaaS EDU K1的二级boot</a></p>
<p><a href="https://help.aliyun.com/document_detail/302383.html">烧录固件</a></p>
]]></content>
      <categories>
        <category>c</category>
      </categories>
      <tags>
        <tag>c</tag>
        <tag>haas</tag>
      </tags>
  </entry>
  <entry>
    <title>U-Net论文笔记</title>
    <url>/2022/01/27/unet-note/</url>
    <content><![CDATA[<blockquote>
<p>封面《湛蓝牢笼 Rail of Möbius》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>因为实验室项目使用了U-Net网络因此读了一下论文来了解一下。</p>
<p>卷积神经网络的典型应用是分类任务，而医学影像需要位置信息，即对每一个像素打标签。此外医学影像的数据集很少。<br />
在U-Net之前Hence,Ciresan等人训练了一种基于滑动窗口的方法，该方法使用一个像素周围的局部区域（patch）的像素来预测该像素的类别。这种方法有两个优点:</p>
<ul>
<li>可以进行类别的定位</li>
<li>每个patch可以视为数据增强增大训练集的数据量。</li>
</ul>
<p>但是这种方法也有两个缺点:</p>
<ul>
<li>速度很慢，因为网络需要计算每个patch，同时每个patch还有大量重叠冗余</li>
<li>需要权衡定位准确度和使用的上下文信息，因为大patch需要更多的池化层，会减少定位的准确度。而小patch只能让网络看到一点内容。</li>
</ul>
<p>对此U-Net提出了新的网络结构。而对于医学影像数据集少，U-Net提出了使用弹性形变来进行数据增强增加数据集。</p>
<h1 id="u-net网络结构"><a class="markdownIt-Anchor" href="#u-net网络结构"></a> U-Net网络结构</h1>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.4/U-Net.png" alt="U-Net结构" /></p>
<p>U-Net的其中一个创新点就是其网络结构，其分为左侧的contrating path和右侧的expansive path。左侧为典型的卷积神经网络，使用两个3×3卷积层，每一个卷积后有一个非线性的RELU，然后用2×2的最大池化层进行下采样，下采样之后将通道数翻倍。右侧的expansive path每一步为使用一个2×2的卷积上采样减半通道数，并将左侧的特征图拼接起来（concat），然后使用通过两个3×3的卷积层，每一个有RELU激活函数。在最后一层使用1×1卷积将通道转换为需要的类别。整个网络一共有23个卷积层。</p>
<p>整个网络是一个encoder-decoder结构，由于形状像U型所以被命名为U-Net。</p>
<h1 id="3d-u-net结构"><a class="markdownIt-Anchor" href="#3d-u-net结构"></a> 3D U-Net结构</h1>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.4/3D_U-Net.png" alt="3D U-Net结构" /><br />
3D U-Net的结构与U-Net基本一致，就是卷积等操作变成三维操作，同时相比U-Net还增加了BatchNorm层，结构图中还可以看出上采样的时候通道数并没有减半。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://arxiv.org/abs/1505.04597">Ronneberger O, Fischer P, Brox T. U-net: Convolutional networks for biomedical image segmentation[C]//International Conference on Medical image computing and computer-assisted intervention. Springer, Cham, 2015: 234-241.</a></p>
<p><a href="https://arxiv.org/abs/1606.06650">Çiçek Ö, Abdulkadir A, Lienkamp S S, et al. 3D U-Net: learning dense volumetric segmentation from sparse annotation[C]//International conference on medical image computing and computer-assisted intervention. Springer, Cham, 2016: 424-432.</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>java全角转半角</title>
    <url>/2022/02/24/sbc2dbc/</url>
    <content><![CDATA[<blockquote>
<p>封面《ハロー・レディ！ -Superior Entelecheia-》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>因为项目中的查询语句使用了“+”号，之前就因为空格的原因碰到了“假空格”，所以就换为“+”号。但是让人没有想到的换成加号也有一样的问题。</p>
<h1 id="问题描述"><a class="markdownIt-Anchor" href="#问题描述"></a> 问题描述</h1>
<p>观察下面两种“+”号，也许不同人看到的结果不一样。不过在我这微信上看到的两种“+”号是一样的。然而在程序中这两种“+”号的编码是不一样的，可以使用这个<a href="https://tool.chinaz.com/tools/unicode.aspx">工具</a>中的中文转unicode的比较，他们分别是\uff0b和\u002b。这就导致有人输入了查询信息但是却没有触发正确的查询。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">＋   \uff0b  #全宽加号</span><br><span class="line">+    \u002b</span><br></pre></td></tr></table></figure>
<p>就其原因还是全角(fullwidth)和半角(Halfwidth)。</p>
<blockquote>
<p>In CJK (Chinese, Japanese and Korean) computing, graphic characters are traditionally classed into fullwidth (in Taiwan and Hong Kong: 全形; in CJK and Japanese: 全角) and halfwidth (in Taiwan and Hong Kong: 半形; in CJK and Japanese: 半角) characters. With fixed-width fonts, a halfwidth character occupies half the width of a fullwidth character, hence the name.<br />
In the days of computer terminals and text mode computing, characters were normally laid out in a grid, often 80 columns by 24 or 25 lines. Each character was displayed as a small dot matrix, often about 8 pixels wide, and an SBCS (single byte character set) was generally used to encode characters of western languages.<br />
For a number of practical and aesthetic reasons, Han characters would need to be twice as wide as these fixed-width SBCS characters. These “fullwidth characters” were typically encoded in a DBCS (double byte character set), although less common systems used other variable-width character sets that used more bytes per character.<br />
Halfwidth and Fullwidth Forms is also the name of a Unicode block U+FF00–FFEF.</p>
</blockquote>
<p>简单来说就是汉字用半角显示太窄了，因此使用全角显示，顺便也就把英文一起全角了。不过系统输入一般都是需要半角</p>
<h1 id="全角与半角转换"><a class="markdownIt-Anchor" href="#全角与半角转换"></a> 全角与半角转换</h1>
<p>我查到的一些资料，称呼全角SBCS、半角DBCS。根据上文中wiki的说法似乎是反的。应该全角是DBCS、半角是SBCS。</p>
<h2 id="转换"><a class="markdownIt-Anchor" href="#转换"></a> 转换</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AsciiUtil</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">char</span> <span class="variable">DBC_SPACE</span> <span class="operator">=</span> <span class="number">12288</span>; <span class="comment">// 全角空格 12288</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">char</span> <span class="variable">SBC_SPACE</span> <span class="operator">=</span> <span class="number">32</span>; <span class="comment">// 半角空格 32</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ASCII character 33-126 &lt;-&gt; unicode 65281-65374</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">char</span> <span class="variable">ASCII_START</span> <span class="operator">=</span> <span class="number">33</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">char</span> <span class="variable">ASCII_END</span> <span class="operator">=</span> <span class="number">126</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">char</span> <span class="variable">UNICODE_START</span> <span class="operator">=</span> <span class="number">65281</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">char</span> <span class="variable">UNICODE_END</span> <span class="operator">=</span> <span class="number">65374</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">char</span> <span class="variable">DBC_SBC_STEP</span> <span class="operator">=</span> <span class="number">65248</span>; <span class="comment">// 全角半角转换间隔</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">sbc2dbc</span><span class="params">(<span class="type">char</span> src)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (src == SBC_SPACE) &#123;</span><br><span class="line">            <span class="keyword">return</span> DBC_SPACE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (src &gt;= ASCII_START &amp;&amp; src &lt;= ASCII_END) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="type">char</span>) (src + DBC_SBC_STEP);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> src;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Convert from SBC case to DBC case 半角到全角</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> DBC case</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">sbc2dbcCase</span><span class="params">(String src)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (src == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span>[] c = src.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; c.length; i++) &#123;</span><br><span class="line">            c[i] = sbc2dbc(c[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">dbc2sbc</span><span class="params">(<span class="type">char</span> src)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (src == DBC_SPACE) &#123;</span><br><span class="line">            <span class="keyword">return</span> SBC_SPACE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (src &lt;= UNICODE_END &amp;&amp; src&gt;=UNICODE_START) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="type">char</span>) (src - DBC_SBC_STEP);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> src;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Convert from DBC case to SBC case. 全角到半角</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> SBC case string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">dbc2sbcCase</span><span class="params">(String src)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (src == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span>[] c = src.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; c.length; i++) &#123;</span><br><span class="line">            c[i] = dbc2sbc(c[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AsciiTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ParameterizedTest</span></span><br><span class="line">    <span class="meta">@CsvSource(&#123;</span></span><br><span class="line"><span class="meta">        &quot;+,＋&quot;,</span></span><br><span class="line"><span class="meta">        &quot;helloworld,ｈｅｌｌｏｗｏｒｌｄ&quot;</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sbcDbcTest</span><span class="params">(String sbc,String dbc)</span>&#123;</span><br><span class="line">        assertEquals(sbc, AsciiUtil.dbc2sbcCase(dbc));</span><br><span class="line">        assertEquals(dbc, AsciiUtil.sbc2dbcCase(sbc));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="感想"><a class="markdownIt-Anchor" href="#感想"></a> 感想</h1>
<p>阅历较少的我没想到会碰到这种问题，“永远不要相信用户的输入”这句话说的很对。</p>
<h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1>
<p><a href="https://codepoints.net/halfwidth_and_fullwidth_forms">Halfwidth and Fullwidth Forms</a></p>
<p><a href="https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms#Half">Halfwidth and fullwidth forms</a></p>
<p><a href="https://www.jianshu.com/p/22000cb102c5">java字符全角半角转换</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>用dart-sass替换node-sass</title>
    <url>/2022/04/09/nodesass2dartsass/</url>
    <content><![CDATA[<blockquote>
<p>封面 《あにまる☆ぱにっく》</p>
</blockquote>
<h1 id="问题描述"><a class="markdownIt-Anchor" href="#问题描述"></a> 问题描述</h1>
<p>使用<code>yarn install</code>命令的时候无法安装依赖，具体问题如下</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.2/error.png" alt="error" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[4/4] Building fresh packages...</span><br><span class="line">[1/4] ⠠ core-js</span><br><span class="line">[2/4] ⠠ node-sass</span><br><span class="line">[-/4] ⠠ waiting...</span><br><span class="line">error D:\Code\zju_project\2021\temp\alsprj_fe\node_modules\node-sass: Command failed.</span><br></pre></td></tr></table></figure>
<p>仔细查看描述可以看到，主要错误是node-sass引起的。查看node-sass的<a href="https://github.com/sass/node-sass">READEME</a>可以看懂node-sass对node的版本有要求。我node16支持的是node-sass 7.0+而原本的是给4.14不支持</p>
<blockquote>
<table>
<thead>
<tr>
<th>NodeJS</th>
<th>Supported node-sass version</th>
<th>Node Module</th>
</tr>
</thead>
<tbody>
<tr>
<td>Node 17</td>
<td>7.0+</td>
<td>102</td>
</tr>
<tr>
<td>Node 16</td>
<td>6.0+</td>
<td>93</td>
</tr>
<tr>
<td>Node 15</td>
<td>5.0+, &lt;7.0</td>
<td>88</td>
</tr>
<tr>
<td>Node 14</td>
<td>4.14+</td>
<td>83</td>
</tr>
<tr>
<td>Node 13</td>
<td>4.13+, &lt;5.0</td>
<td>79</td>
</tr>
<tr>
<td>Node 12</td>
<td>4.12+</td>
<td>72</td>
</tr>
<tr>
<td>Node 11</td>
<td>4.10+, &lt;5.0</td>
<td>67</td>
</tr>
<tr>
<td>Node 10</td>
<td>4.9+, &lt;6.0</td>
<td>64</td>
</tr>
<tr>
<td>Node 8</td>
<td>4.5.3+, &lt;5.0</td>
<td>57</td>
</tr>
<tr>
<td>Node &lt;8</td>
<td>&lt;5.0</td>
<td>&lt;57</td>
</tr>
</tbody>
</table>
</blockquote>
<h1 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h1>
<p>其中一个解决方法是更换node版本,在unix系统上有n这类工具,而windows没有。另一个解决方案就是本次提到的用dart-sass替换node-sass。直接替换还不行，需要改名，因此执行下面的命令即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add node-sass@npm:dart-sass</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.2/result.png" alt="运行结果" /></p>
<p>安装完成，运行<code>yarn start</code>可以看到项目正常运行</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://zhuanlan.zhihu.com/p/168018388">使用dart-sass代替node-sass</a></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>nodejs</tag>
        <tag>sass</tag>
      </tags>
  </entry>
  <entry>
    <title>用python上传文件到微信小程序云存储</title>
    <url>/2022/05/01/wx-cloud-upload/</url>
    <content><![CDATA[<blockquote>
<p>封面 《時計仕掛けのレイライン -朝霧に散る花-》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>小程序上了云托管后不打算继续使用其他图床，而是使用云托管自带的图床。而由于时间紧迫只能在本地使用云托管提供的服务器调用对象存储api</p>
<p>云托管上传文件的文档在这里</p>
<p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/development/storage/service/upload.html">上传文件文档</a></p>
<div class="note info simple"><p>如果你上传带有中文名的文件，或者上传的路径有中文名时，需要修改一下requests库的源码，否则文件上传成功后无法活动下载链接<br />
修改<code>requests/models.py</code>的<code>prepare_body</code>里的<code>complexjson.dumps</code>参数，加一个<code>ensure_ascii=False</code><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.0.1/info.png" alt="修改内容" /></p>
</div>
<h1 id="流程"><a class="markdownIt-Anchor" href="#流程"></a> 流程</h1>
<p>获取小程序总体流程可以简单分为下面几步</p>
<ul>
<li>1、获取调用凭证access_token</li>
<li>2、获取文件上传消息</li>
<li>3、上传文件</li>
<li>4、获取下载文件的链接</li>
</ul>
<h1 id="准备config文件"><a class="markdownIt-Anchor" href="#准备config文件"></a> 准备config文件</h1>
<p>因为access_token每天都有调用上限，且有2小时时限，最好是将access_token缓存下来，因此这里使用简单的json文件来存</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;appid&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span> <span class="comment">// 小程序appid 必填</span></span><br><span class="line">    <span class="attr">&quot;secret&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span> <span class="comment">// app secret 必填</span></span><br><span class="line">    <span class="attr">&quot;env&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span> <span class="comment">// 云托管环境 env</span></span><br><span class="line">    <span class="attr">&quot;create_time&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span> <span class="comment">// token创建时间 自动生成</span></span><br><span class="line">    <span class="attr">&quot;expires_in&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span> <span class="comment">// token过期时间 自动生成</span></span><br><span class="line">    <span class="attr">&quot;access_token&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span> <span class="comment">// token 自动生成</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>然后是config的读取和保存</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">load_config</span>(<span class="params">path=<span class="string">&quot;./config.json&quot;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取配置，主要是读取缓存的access_token</span></span><br><span class="line"><span class="string">    args: 读取路径</span></span><br><span class="line"><span class="string">    return: config</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        config = json.load(f)</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_config</span>(<span class="params">config, path=<span class="string">&quot;./config.json&quot;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    保持配置</span></span><br><span class="line"><span class="string">    args: 读取路径</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        json.dump(config, f, indent=<span class="number">4</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="获取接口调用凭证"><a class="markdownIt-Anchor" href="#获取接口调用凭证"></a> 获取接口调用凭证</h1>
<p>接下来根据我们读取的config来获取access_token</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_access_token</span>(<span class="params">appid: <span class="built_in">str</span>, secret: <span class="built_in">str</span>, config</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取调用凭证</span></span><br><span class="line"><span class="string">    https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        apppid: 小程序appid</span></span><br><span class="line"><span class="string">        secret: 小程序appSecret</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    return: access_token</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 检查本地token</span></span><br><span class="line">    token = config[<span class="string">&quot;access_token&quot;</span>]</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        now = <span class="built_in">int</span>(time.time())</span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span> == token <span class="keyword">or</span> (now - config[<span class="string">&quot;create_time&quot;</span>]) &gt; config[<span class="string">&quot;expires_in&quot;</span>]:</span><br><span class="line">            resp = requests.get(</span><br><span class="line">                <span class="string">&quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&#123;0&#125;&amp;secret=&#123;1&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                    appid, secret</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">            resp = resp.json()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="literal">None</span> == resp[<span class="string">&quot;access_token&quot;</span>]:</span><br><span class="line">                <span class="keyword">raise</span> Exception(resp[<span class="string">&quot;errmsg&quot;</span>])</span><br><span class="line">            <span class="comment"># 缓存处理</span></span><br><span class="line">            config[<span class="string">&quot;access_token&quot;</span>] = resp[<span class="string">&quot;access_token&quot;</span>]</span><br><span class="line">            config[<span class="string">&quot;create_time&quot;</span>] = <span class="built_in">int</span>(time.time())</span><br><span class="line">            config[<span class="string">&quot;expires_in&quot;</span>] = resp[<span class="string">&quot;expires_in&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> config[<span class="string">&quot;access_token&quot;</span>]</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;获取access token失败&quot;</span>)</span><br><span class="line">        <span class="keyword">raise</span> e</span><br></pre></td></tr></table></figure>
<h1 id="获取云存储上传文件消息"><a class="markdownIt-Anchor" href="#获取云存储上传文件消息"></a> 获取云存储上传文件消息</h1>
<p>在正式上传前需要获取上传文件的信息，比如上传路径，签名等</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_upload_file_info</span>(<span class="params">access_token: <span class="built_in">str</span>, env: <span class="built_in">str</span>, path: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    上传文件信息</span></span><br><span class="line"><span class="string">    https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/development/storage/service/upload.html</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        access_token: </span></span><br><span class="line"><span class="string">        env: 云托管的路径</span></span><br><span class="line"><span class="string">        path: 存放位置</span></span><br><span class="line"><span class="string">    return:</span></span><br><span class="line"><span class="string">        json: &#123;</span></span><br><span class="line"><span class="string">            errcode,</span></span><br><span class="line"><span class="string">            errmsg,</span></span><br><span class="line"><span class="string">            url,</span></span><br><span class="line"><span class="string">            token,</span></span><br><span class="line"><span class="string">            authorization,</span></span><br><span class="line"><span class="string">            file_id,</span></span><br><span class="line"><span class="string">            cos_file_id</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">&quot;https://api.weixin.qq.com/tcb/uploadfile?access_token=&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            access_token</span><br><span class="line">        )</span><br><span class="line">        headers = &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json;charset=UTF-8&quot;</span>&#125;</span><br><span class="line">        data = &#123;<span class="string">&quot;env&quot;</span>: env, <span class="string">&quot;path&quot;</span>: path&#125;</span><br><span class="line">        resp = requests.post(url, json=data, headers=headers)</span><br><span class="line">        <span class="comment"># 转json</span></span><br><span class="line">        resp = resp.json()</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> != resp[<span class="string">&quot;errcode&quot;</span>]:</span><br><span class="line">            <span class="built_in">print</span>(resp[<span class="string">&quot;errmsg&quot;</span>])</span><br><span class="line">            <span class="built_in">print</span>(resp)</span><br><span class="line">            <span class="keyword">raise</span> Exception(resp[<span class="string">&quot;errmsg&quot;</span>])</span><br><span class="line">        <span class="comment"># 返回上传文件信息</span></span><br><span class="line">        <span class="keyword">return</span> resp</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;获取文件上传链接失败&quot;</span>)</span><br><span class="line">        <span class="keyword">raise</span> e</span><br></pre></td></tr></table></figure>
<h1 id="上传文件"><a class="markdownIt-Anchor" href="#上传文件"></a> 上传文件</h1>
<p>获取文件上传信息后，需要根据改信息上传文件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">upload_file</span>(<span class="params">url, request_path, authorization, token, file_id, file</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    上传文件</span></span><br><span class="line"><span class="string">    https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/development/storage/service/upload.html</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        url: 上传图片路径 由get_upload获得的url</span></span><br><span class="line"><span class="string">        request_path: 上传路径，和get_upload_file_info内部的一致</span></span><br><span class="line"><span class="string">        authorization: info返回的token</span></span><br><span class="line"><span class="string">        file_id: cos_file_id</span></span><br><span class="line"><span class="string">        file: 文件的二进制数据</span></span><br><span class="line"><span class="string">    return: None</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        form = &#123;</span><br><span class="line">            <span class="string">&quot;key&quot;</span>: request_path,</span><br><span class="line">            <span class="string">&quot;Signature&quot;</span>: authorization,</span><br><span class="line">            <span class="string">&quot;x-cos-security-token&quot;</span>: token,</span><br><span class="line">            <span class="string">&quot;x-cos-meta-fileid&quot;</span>: file_id,</span><br><span class="line">            <span class="string">&quot;file&quot;</span>: file,</span><br><span class="line">        &#125;</span><br><span class="line">        resp = requests.post(url=url, files=form)</span><br><span class="line">        <span class="keyword">return</span> resp</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;上传文件失败&quot;</span>)</span><br><span class="line">        <span class="keyword">raise</span> e</span><br></pre></td></tr></table></figure>
<h1 id="获取文件下载链接"><a class="markdownIt-Anchor" href="#获取文件下载链接"></a> 获取文件下载链接</h1>
<p>上传文件后是没有返回信息的，需要我们根据文件上信息的file_id获取</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_download_link</span>(<span class="params">access_token, env, file_id</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取文件下载链接</span></span><br><span class="line"><span class="string">    https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/development/storage/service/download.html</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        access_token: 调用token</span></span><br><span class="line"><span class="string">        env: 云环境env</span></span><br><span class="line"><span class="string">        file_id: file_id</span></span><br><span class="line"><span class="string">    return: 文件下载链接</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">&quot;https://api.weixin.qq.com/tcb/batchdownloadfile?access_token=&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            access_token</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">#headers = &#123;&quot;Content-Type&quot;: &quot;application/json&quot;&#125;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;env&quot;</span>: env,</span><br><span class="line">            <span class="string">&quot;file_list&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;fileid&quot;</span>: file_id</span><br><span class="line">                    <span class="comment"># max_age</span></span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">        &#125;</span><br><span class="line">        resp = requests.post(url, json=data)</span><br><span class="line">        resp = resp.json()</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> != resp[<span class="string">&quot;errcode&quot;</span>]:</span><br><span class="line">            <span class="built_in">print</span>(resp[<span class="string">&quot;errmsg&quot;</span>])</span><br><span class="line">            <span class="keyword">raise</span> Exception(resp[<span class="string">&quot;errmsg&quot;</span>])</span><br><span class="line">        <span class="keyword">return</span> resp[<span class="string">&quot;file_list&quot;</span>][<span class="number">0</span>][<span class="string">&quot;download_url&quot;</span>]</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;获取下载链接失败&quot;</span>)</span><br><span class="line">        <span class="keyword">raise</span> e</span><br></pre></td></tr></table></figure>
<h1 id="汇总"><a class="markdownIt-Anchor" href="#汇总"></a> 汇总</h1>
<p>各个流程编写完成后简单汇总一下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">wx_upload_file</span>(<span class="params">config, filepath, uploadpath</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    上传文件</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        config: 配置</span></span><br><span class="line"><span class="string">        filepath: 文件的路径</span></span><br><span class="line"><span class="string">        uploadpath: 上传的路径，不能以/开头，以/结尾</span></span><br><span class="line"><span class="string">    return: url</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    realpath = os.path.realpath(filepath)</span><br><span class="line">    filename = os.path.basename(realpath)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(realpath, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line">    <span class="comment"># 获取access_token</span></span><br><span class="line">    token = get_access_token(config[<span class="string">&quot;appid&quot;</span>], config[<span class="string">&quot;secret&quot;</span>], config)</span><br><span class="line">    <span class="comment"># 获取上传文件链接</span></span><br><span class="line">    info = get_upload_file_info(token, config[<span class="string">&quot;env&quot;</span>], uploadpath + filename)</span><br><span class="line">    upload_file(</span><br><span class="line">        info[<span class="string">&quot;url&quot;</span>],</span><br><span class="line">        uploadpath + filename,</span><br><span class="line">        info[<span class="string">&quot;authorization&quot;</span>],</span><br><span class="line">        info[<span class="string">&quot;token&quot;</span>],</span><br><span class="line">        info[<span class="string">&quot;cos_file_id&quot;</span>],</span><br><span class="line">        data,</span><br><span class="line">    )</span><br><span class="line">    download_url = get_download_link(token, config[<span class="string">&quot;env&quot;</span>], info[<span class="string">&#x27;file_id&#x27;</span>])</span><br><span class="line">    <span class="keyword">return</span> (download_url, info[<span class="string">&#x27;file_id&#x27;</span>])</span><br></pre></td></tr></table></figure>
<h1 id="完整代码"><a class="markdownIt-Anchor" href="#完整代码"></a> 完整代码</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_access_token</span>(<span class="params">appid: <span class="built_in">str</span>, secret: <span class="built_in">str</span>, config</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取调用凭证</span></span><br><span class="line"><span class="string">    https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        apppid: 小程序appid</span></span><br><span class="line"><span class="string">        secret: 小程序appSecret</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    return: access_token</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 检查本地token</span></span><br><span class="line">    token = config[<span class="string">&quot;access_token&quot;</span>]</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        now = <span class="built_in">int</span>(time.time())</span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span> == token <span class="keyword">or</span> (now - config[<span class="string">&quot;create_time&quot;</span>]) &gt; config[<span class="string">&quot;expires_in&quot;</span>]:</span><br><span class="line">            resp = requests.get(</span><br><span class="line">                <span class="string">&quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&#123;0&#125;&amp;secret=&#123;1&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                    appid, secret</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">            resp = resp.json()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="literal">None</span> == resp[<span class="string">&quot;access_token&quot;</span>]:</span><br><span class="line">                <span class="keyword">raise</span> Exception(resp[<span class="string">&quot;errmsg&quot;</span>])</span><br><span class="line">            <span class="comment"># 缓存处理</span></span><br><span class="line">            config[<span class="string">&quot;access_token&quot;</span>] = resp[<span class="string">&quot;access_token&quot;</span>]</span><br><span class="line">            config[<span class="string">&quot;create_time&quot;</span>] = <span class="built_in">int</span>(time.time())</span><br><span class="line">            config[<span class="string">&quot;expires_in&quot;</span>] = resp[<span class="string">&quot;expires_in&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> config[<span class="string">&quot;access_token&quot;</span>]</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;获取access token失败&quot;</span>)</span><br><span class="line">        <span class="keyword">raise</span> e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_upload_file_info</span>(<span class="params">access_token: <span class="built_in">str</span>, env: <span class="built_in">str</span>, path: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    上传文件信息</span></span><br><span class="line"><span class="string">    https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/development/storage/service/upload.html</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        access_token: </span></span><br><span class="line"><span class="string">        env: 云托管的路径</span></span><br><span class="line"><span class="string">        path: 存放位置</span></span><br><span class="line"><span class="string">    return:</span></span><br><span class="line"><span class="string">        json: &#123;</span></span><br><span class="line"><span class="string">            errcode,</span></span><br><span class="line"><span class="string">            errmsg,</span></span><br><span class="line"><span class="string">            url,</span></span><br><span class="line"><span class="string">            token,</span></span><br><span class="line"><span class="string">            authorization,</span></span><br><span class="line"><span class="string">            file_id,</span></span><br><span class="line"><span class="string">            cos_file_id</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">&quot;https://api.weixin.qq.com/tcb/uploadfile?access_token=&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            access_token</span><br><span class="line">        )</span><br><span class="line">        headers = &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json;charset=UTF-8&quot;</span>&#125;</span><br><span class="line">        data = &#123;<span class="string">&quot;env&quot;</span>: env, <span class="string">&quot;path&quot;</span>: path&#125;</span><br><span class="line">        resp = requests.post(url, json=data, headers=headers)</span><br><span class="line">        <span class="comment"># 转json</span></span><br><span class="line">        resp = resp.json()</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> != resp[<span class="string">&quot;errcode&quot;</span>]:</span><br><span class="line">            <span class="built_in">print</span>(resp[<span class="string">&quot;errmsg&quot;</span>])</span><br><span class="line">            <span class="built_in">print</span>(resp)</span><br><span class="line">            <span class="keyword">raise</span> Exception(resp[<span class="string">&quot;errmsg&quot;</span>])</span><br><span class="line">        <span class="comment"># 返回上传文件信息</span></span><br><span class="line">        <span class="keyword">return</span> resp</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;获取文件上传链接失败&quot;</span>)</span><br><span class="line">        <span class="keyword">raise</span> e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_file</span>(<span class="params">url, request_path, authorization, token, file_id, file</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    上传文件</span></span><br><span class="line"><span class="string">    https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/development/storage/service/upload.html</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        url: 上传图片路径 由get_upload获得的url</span></span><br><span class="line"><span class="string">        request_path: 上传路径，和get_upload_file_info内部的一致</span></span><br><span class="line"><span class="string">        authorization: info返回的token</span></span><br><span class="line"><span class="string">        file_id: cos_file_id</span></span><br><span class="line"><span class="string">        file: 文件的二进制数据</span></span><br><span class="line"><span class="string">    return: None</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        form = &#123;</span><br><span class="line">            <span class="string">&quot;key&quot;</span>: request_path,</span><br><span class="line">            <span class="string">&quot;Signature&quot;</span>: authorization,</span><br><span class="line">            <span class="string">&quot;x-cos-security-token&quot;</span>: token,</span><br><span class="line">            <span class="string">&quot;x-cos-meta-fileid&quot;</span>: file_id,</span><br><span class="line">            <span class="string">&quot;file&quot;</span>: file,</span><br><span class="line">        &#125;</span><br><span class="line">        resp = requests.post(url=url, files=form)</span><br><span class="line">        <span class="keyword">return</span> resp</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;上传文件失败&quot;</span>)</span><br><span class="line">        <span class="keyword">raise</span> e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_download_link</span>(<span class="params">access_token, env, file_id</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取文件下载链接</span></span><br><span class="line"><span class="string">    https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/development/storage/service/download.html</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        access_token: 调用token</span></span><br><span class="line"><span class="string">        env: 云环境env</span></span><br><span class="line"><span class="string">        file_id: file_id</span></span><br><span class="line"><span class="string">    return: 文件下载链接</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">&quot;https://api.weixin.qq.com/tcb/batchdownloadfile?access_token=&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            access_token</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">#headers = &#123;&quot;Content-Type&quot;: &quot;application/json&quot;&#125;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;env&quot;</span>: env,</span><br><span class="line">            <span class="string">&quot;file_list&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;fileid&quot;</span>: file_id</span><br><span class="line">                    <span class="comment"># max_age</span></span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">        &#125;</span><br><span class="line">        resp = requests.post(url, json=data)</span><br><span class="line">        resp = resp.json()</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> != resp[<span class="string">&quot;errcode&quot;</span>]:</span><br><span class="line">            <span class="built_in">print</span>(resp[<span class="string">&quot;errmsg&quot;</span>])</span><br><span class="line">            <span class="keyword">raise</span> Exception(resp[<span class="string">&quot;errmsg&quot;</span>])</span><br><span class="line">        <span class="keyword">return</span> resp[<span class="string">&quot;file_list&quot;</span>][<span class="number">0</span>][<span class="string">&quot;download_url&quot;</span>]</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;获取下载链接失败&quot;</span>)</span><br><span class="line">        <span class="keyword">raise</span> e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_config</span>(<span class="params">path=<span class="string">&quot;./config.json&quot;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取配置，主要是读取缓存的access_token</span></span><br><span class="line"><span class="string">    args: 读取路径</span></span><br><span class="line"><span class="string">    return: config</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        config = json.load(f)</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_config</span>(<span class="params">config, path=<span class="string">&quot;./config.json&quot;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    保持配置</span></span><br><span class="line"><span class="string">    args: 读取路径</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        json.dump(config, f, indent=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wx_upload_file</span>(<span class="params">config, filepath, uploadpath</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    上传文件</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        config: 配置</span></span><br><span class="line"><span class="string">        filepath: 文件的路径</span></span><br><span class="line"><span class="string">        uploadpath: 上传的路径，不能以/开头，以/结尾</span></span><br><span class="line"><span class="string">    return: url</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    realpath = os.path.realpath(filepath)</span><br><span class="line">    filename = os.path.basename(realpath)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(realpath, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line">    <span class="comment"># 获取access_token</span></span><br><span class="line">    token = get_access_token(config[<span class="string">&quot;appid&quot;</span>], config[<span class="string">&quot;secret&quot;</span>], config)</span><br><span class="line">    <span class="comment"># 获取上传文件链接</span></span><br><span class="line">    info = get_upload_file_info(token, config[<span class="string">&quot;env&quot;</span>], uploadpath + filename)</span><br><span class="line">    upload_file(</span><br><span class="line">        info[<span class="string">&quot;url&quot;</span>],</span><br><span class="line">        uploadpath + filename,</span><br><span class="line">        info[<span class="string">&quot;authorization&quot;</span>],</span><br><span class="line">        info[<span class="string">&quot;token&quot;</span>],</span><br><span class="line">        info[<span class="string">&quot;cos_file_id&quot;</span>],</span><br><span class="line">        data,</span><br><span class="line">    )</span><br><span class="line">    download_url = get_download_link(token, config[<span class="string">&quot;env&quot;</span>], info[<span class="string">&#x27;file_id&#x27;</span>])</span><br><span class="line">    <span class="keyword">return</span> (download_url, info[<span class="string">&#x27;file_id&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    config = load_config(<span class="string">&quot;./config.json&quot;</span>)</span><br><span class="line">    <span class="comment">#print(wx_upload_file(config, &quot;121.jpg&quot;, &quot;temp3/&quot;))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 有url</span></span><br><span class="line">    <span class="comment"># print(wx_upload_file(config,&#x27;./temp.jpg&#x27;,&#x27;temp3/&#x27;))</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># # 无url</span></span><br><span class="line">    path = <span class="string">&quot;./154190339_附件/&quot;</span></span><br><span class="line">    filenames = os.listdir(path)</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">        <span class="built_in">print</span>(filename)</span><br><span class="line">        image = os.path.join(path, filename)</span><br><span class="line">        url = wx_upload_file(config, image, <span class="string">&quot;temp3/&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(url)</span><br><span class="line"></span><br><span class="line">    save_config(config, <span class="string">&quot;./config.json&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>有一说一，腾讯提供的cdn还是比之前自己搭建的要快很多，很舒服，就是花钱很难受。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>conda deactivate报错UnicodeEncodeError</title>
    <url>/2022/05/02/conda-deactivate-error/</url>
    <content><![CDATA[<blockquote>
<p>封面: 《俺の恋天使がポンコツすぎてコワ～い》</p>
</blockquote>
<h1 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h1>
<p>在运行conda deactivate的时候碰到了一个bug</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UnicodeEncodeError: &#x27;gbk&#x27; codec can&#x27;t encode character &#x27;\u03a2&#x27; in position 945: illegal multibyte sequence</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.2/error.png" alt="error" /></p>
<h1 id="错误原因"><a class="markdownIt-Anchor" href="#错误原因"></a> 错误原因</h1>
<p>这是很明显是编码问题，遇到了中文字符。而问题在于哪里出现了中文，因为我在安装编程相关软件时都不会使用中文路径，因此很奇怪这个中文在哪里。然后仔细查看整个记录找到了一处中文，然后发现这个东西在环境变量里面，根据位置查找是<code>微信web开发者工具</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.2/find.png" alt="" /></p>
<h1 id="解决方法"><a class="markdownIt-Anchor" href="#解决方法"></a> 解决方法</h1>
<p>因为我不怎么需要使用微信web开发助手，因此直接从环境遍历里面删除这个环境变量即可。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.2/fix.png" alt="问题解决" /></p>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>现在除了安装路径要注意中文外，还得注意环境变量里有没有中文了555</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>conda</tag>
      </tags>
  </entry>
  <entry>
    <title>mmdetection自定义数据增强</title>
    <url>/2022/05/05/mmdetection-custom-pipelines/</url>
    <content><![CDATA[<blockquote>
<p>封面 《花の野に咲くうたかたの》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>目前的数据集内基本是检测小目标，但是因为小物体检测比较困难，需要想办法提升小目标的检测结果。最近读了一篇《Augmentation for small object detection》的论文，里面讲了一些数据增强的方法来提高小目标的检测效果。</p>
<p>mmdetection是一个基于pytorch的目标检测工具箱，简单易用。本篇博客的主要目的基于mmdetection实现一个数据增强方法。</p>
<h1 id="smallobjectaugmentation"><a class="markdownIt-Anchor" href="#smallobjectaugmentation"></a> SmallObjectAugmentation</h1>
<p><a href="https://arxiv.org/abs/1902.07296">Augmentation for small object detection</a>的论文里面讲述几种小目标增强方法</p>
<h2 id="过采样"><a class="markdownIt-Anchor" href="#过采样"></a> 过采样</h2>
<blockquote>
<p>In the first set of experiments, we investigate the effect of oversampling images containing small objects. We vary the oversampling ratio between two, three and four. Instead of actual stochastic oversampling, we create multiple copies of images with small objects offline for efficiency</p>
</blockquote>
<p>这是一个花费精力比较少且简单的方法，简单来说就是如果图片中有小目标，就在训练集中将这个图片多复制几次。</p>
<h2 id="增强"><a class="markdownIt-Anchor" href="#增强"></a> 增强</h2>
<blockquote>
<p>In the second set of experiments, we investigate the effects of using augmentation on small object detection and segmentation. We copy and paste all small objects in each image once. We also oversample images with small objects to study the interaction between the oversampling and augmentation strategies.</p>
</blockquote>
<p>另一种方法就是在每张图片中，将图片的包含小目标复制粘贴多次。在文中一共提出了三种复制粘贴策略</p>
<ol>
<li>选择一张图中的一个小目标，在随机位置中复制粘贴多次</li>
<li>选择许多小物体，复制粘贴在随机地方</li>
<li>选择每张图片的全部小物体，复制粘贴一次在随机地方</li>
</ol>
<p>后文还提到复制粘贴时需要注意复制粘贴的时候不能和之前的标签重叠</p>
<h1 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h1>
<p>arXiv上的论文并没有给出官方实现，只有社区实现。因此这里直接参考社区的实现方法。</p>
<p>mmdetection的<a href="https://mmdetection.readthedocs.io/en/v2.21.0/">文档</a>中给出了自定义pipelines数据增强的方法，我们只需要实现自己的<code>__init__</code>函数和<code>__call__</code>函数，然后通过<code>@PIPELINES.register_module()</code>注册即可。<code>__call__</code>函数的输入参数和输出参数都是<code>results</code>，这是一个包含了图像、边界框和标签等信息的字典。</p>
<p>官方提供的pipelines如下图所示<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.3/data_pipeline.png" alt="pipeline figure" /></p>
<p>通过阅读源码和观看这张图我们可以得知模型中最后使用的是<code>results['img']</code>、<code>results['gt_bboxes']</code>、<code>results['gt_labels']</code>等，其中<code>gt_bboxes</code>的格式是<code>(list[Tensor])</code>其中每个bbox的格式是<code>[tl_x, tl_y, br_x, br_y]</code>即左上角的点坐标和右下角的点坐标。</p>
<p>知道格式后实现起来就比较简单，源码就放在文末。</p>
<p>在<code>mmdet/datasets/pipelines</code>文件夹内新建<code>SmallObjectAugmentation.py</code>,并写入文末的源码。</p>
<p>导入模块时<code>mmdetection</code>有两种方法</p>
<h2 id="方法一-重新编译"><a class="markdownIt-Anchor" href="#方法一-重新编译"></a> 方法一 重新编译</h2>
<p><a href="https://mmdetection.readthedocs.io/en/v2.21.0/get_started.html#install-mmdetection">参考</a></p>
<p><code>mmdet/datasets/pipelines</code>里的<code>__init__.py</code>文件中添加<code>from .SmallObjectAugmentation import SmallObjectAugmentation</code>,<code>__all__</code>添加<code>'SmallObjectAugmentation'</code>，完整修改见下<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.3/custom_init.png" alt="" /></p>
<p>然后执行下面的命令</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install -r requirements/build.txt</span><br><span class="line">pip install -v -e .  <span class="comment"># or &quot;python setup.py develop&quot;</span></span><br></pre></td></tr></table></figure>
<p>这样就完成了，实际上执行速度很快。这样就可以直接在你的config文件中使用</p>
<h2 id="方法二-修改config"><a class="markdownIt-Anchor" href="#方法二-修改config"></a> 方法二 修改config</h2>
<p><a href="https://mmdetection.readthedocs.io/en/v2.21.0/tutorials/data_pipeline.html#extend-and-use-custom-pipelines">参考</a></p>
<p>这种方法我没有成功，读者可以自己尝试一下</p>
<p>修改config文件，在里面加一条，保证路径是训练脚本的相似路径</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">custom_imports = <span class="built_in">dict</span>(imports=[<span class="string">&#x27;path.to.my_pipeline&#x27;</span>], allow_failed_imports=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<h1 id="查看数据增强效果"><a class="markdownIt-Anchor" href="#查看数据增强效果"></a> 查看数据增强效果</h1>
<p>mmdetection有提供工具让我们看数据增强的效果。<br />
首先先准备一份config文件，我这里直接继承<code>yolox_tiny_8x8_300e_coco.py</code>修改其中的<code>train_pipeline</code>，去除其他的数据增强，只留下我们自己的增强方法。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train_pipeline = [</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;SmallObjectAugmentation&#x27;</span>,all_objects=<span class="literal">True</span>,thresh=<span class="number">400</span>*<span class="number">400</span>,prob=<span class="number">0.7</span>),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;DefaultFormatBundle&#x27;</span>),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;Collect&#x27;</span>, keys=[<span class="string">&#x27;img&#x27;</span>, <span class="string">&#x27;gt_bboxes&#x27;</span>, <span class="string">&#x27;gt_labels&#x27;</span>])</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>然后我们可以使用mmdetection提供的工具来查看我们的效果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运行下面这句话 需要把config的路径改成你的config路径</span></span><br><span class="line">python .\tools\misc\browse_dataset.py your_config_path</span><br></pre></td></tr></table></figure>
<h2 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h2>
<p>为了展示效果，我这里把参数都调的夸张了点</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.3/augmentation1.png" alt="sample1" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.3/augmentation2.png" alt="sample2" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.3/augmentation3.png" alt="sample3" /></p>
<h1 id="训练效果"><a class="markdownIt-Anchor" href="#训练效果"></a> 训练效果</h1>
<p>使用了数据增强前后的对比如下图所示，可以看到实际的训练效果有提高1%，可见效果还是可以的</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.3/old.png" alt="增强前" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.3/new.png" alt="增强后" /></p>
<h1 id="增强源码"><a class="markdownIt-Anchor" href="#增强源码"></a> 增强源码</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> ..builder <span class="keyword">import</span> PIPELINES</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@PIPELINES.register_module(<span class="params"><span class="string">&#x27;SmallObjectAugmentation&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SmallObjectAugmentation</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, thresh=<span class="number">64</span>*<span class="number">64</span>, prob=<span class="number">0.5</span>, copy_times=<span class="number">3</span>, epochs=<span class="number">30</span>, all_objects=<span class="literal">False</span>, one_object=<span class="literal">False</span></span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        SmallObjectAugmentation: https://arxiv.org/abs/1902.07296</span></span><br><span class="line"><span class="string">        https://github.com/zzl-pointcloud/Data_Augmentation_Zoo_for_Object_Detection/blob/master/augmentation_zoo/SmallObjectAugmentation.py</span></span><br><span class="line"><span class="string">        args:</span></span><br><span class="line"><span class="string">            thresh: small object thresh</span></span><br><span class="line"><span class="string">            prob: the probability of whether to augmentation</span></span><br><span class="line"><span class="string">            copy_times: how many times to copy anno</span></span><br><span class="line"><span class="string">            epochs: how many times try to create anno</span></span><br><span class="line"><span class="string">            all_object: copy all object once</span></span><br><span class="line"><span class="string">            one_object: copy one object</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        self.thresh = thresh</span><br><span class="line">        self.prob = prob</span><br><span class="line">        self.copy_times = copy_times</span><br><span class="line">        self.epochs = epochs</span><br><span class="line">        self.all_objects = all_objects</span><br><span class="line">        self.one_object = one_object</span><br><span class="line">        <span class="keyword">if</span> self.all_objects <span class="keyword">or</span> self.one_object:</span><br><span class="line">            self.copy_times = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_is_small_object</span>(<span class="params">self, height, width</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        判断是否为小目标</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> height*width &lt;= self.thresh:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_compute_overlap</span>(<span class="params">self, bbox_a, bbox_b</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        计算重叠</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> bbox_a <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        left_max = <span class="built_in">max</span>(bbox_a[<span class="number">0</span>], bbox_b[<span class="number">0</span>])</span><br><span class="line">        top_max = <span class="built_in">max</span>(bbox_a[<span class="number">1</span>], bbox_b[<span class="number">1</span>])</span><br><span class="line">        right_min = <span class="built_in">min</span>(bbox_a[<span class="number">2</span>], bbox_b[<span class="number">2</span>])</span><br><span class="line">        bottom_min = <span class="built_in">min</span>(bbox_a[<span class="number">3</span>], bbox_b[<span class="number">3</span>])</span><br><span class="line">        inter = <span class="built_in">max</span>(<span class="number">0</span>, (right_min-left_max)) * <span class="built_in">max</span>(<span class="number">0</span>, (bottom_min-top_max))</span><br><span class="line">        <span class="keyword">if</span> inter != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_donot_overlap</span>(<span class="params">self, new_bbox, bboxes</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        是否有重叠</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> bbox <span class="keyword">in</span> bboxes:</span><br><span class="line">            <span class="keyword">if</span> self._compute_overlap(new_bbox, bbox):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_create_copy_annot</span>(<span class="params">self, height, width, bbox, bboxes</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        创建新的标签</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        bbox_h, bbox_w = bbox[<span class="number">3</span>] - bbox[<span class="number">1</span>], bbox[<span class="number">2</span>] - bbox[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(self.epochs):</span><br><span class="line">            random_x, random_y = np.random.randint(<span class="built_in">int</span>(bbox_w / <span class="number">2</span>), <span class="built_in">int</span>(width - bbox_w / <span class="number">2</span>)), \</span><br><span class="line">                np.random.randint(<span class="built_in">int</span>(bbox_h / <span class="number">2</span>), <span class="built_in">int</span>(height - bbox_h / <span class="number">2</span>))</span><br><span class="line">            tl_x, tl_y = random_x - bbox_w/<span class="number">2</span>, random_y-bbox_h/<span class="number">2</span></span><br><span class="line">            br_x, br_y = tl_x + bbox_w, tl_y + bbox_h</span><br><span class="line">            <span class="keyword">if</span> tl_x &lt; <span class="number">0</span> <span class="keyword">or</span> br_x &gt; width <span class="keyword">or</span> tl_y &lt; <span class="number">0</span> <span class="keyword">or</span> tl_y &gt; height:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            new_bbox = np.array([tl_x, tl_y, br_x, br_y], dtype=np.int32)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self._donot_overlap(new_bbox, bboxes):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> new_bbox</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_add_patch_in_img</span>(<span class="params">self, new_bbox, copy_bbox, image</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        复制图像区域</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        copy_bbox = copy_bbox.astype(np.int32)</span><br><span class="line">        image[new_bbox[<span class="number">1</span>]:new_bbox[<span class="number">3</span>], new_bbox[<span class="number">0</span>]:new_bbox[<span class="number">2</span>],</span><br><span class="line">              :] = image[copy_bbox[<span class="number">1</span>]:copy_bbox[<span class="number">3</span>], copy_bbox[<span class="number">0</span>]:copy_bbox[<span class="number">2</span>], :]</span><br><span class="line">        <span class="keyword">return</span> image</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, results</span>):</span><br><span class="line">        <span class="keyword">if</span> self.all_objects <span class="keyword">and</span> self.one_object:</span><br><span class="line">            <span class="keyword">return</span> results</span><br><span class="line">        <span class="keyword">if</span> np.random.rand() &gt; self.prob:</span><br><span class="line">            <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line">        img = results[<span class="string">&#x27;img&#x27;</span>]</span><br><span class="line">        bboxes = results[<span class="string">&#x27;gt_bboxes&#x27;</span>]</span><br><span class="line">        labels = results[<span class="string">&#x27;gt_labels&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        height, width = img.shape[<span class="number">0</span>], img.shape[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        small_object_list = []</span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(bboxes)):</span><br><span class="line">            bbox = bboxes[idx]</span><br><span class="line">            bbox_h, bbox_w = bbox[<span class="number">3</span>] - bbox[<span class="number">1</span>], bbox[<span class="number">2</span>] - bbox[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">if</span> self._is_small_object(bbox_h, bbox_w):</span><br><span class="line">                small_object_list.append(idx)</span><br><span class="line"></span><br><span class="line">        length = <span class="built_in">len</span>(small_object_list)</span><br><span class="line">        <span class="comment"># 无小物体</span></span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> == length:</span><br><span class="line">            <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 随机选择不同的物体复制</span></span><br><span class="line">        copy_object_num = np.random.randint(<span class="number">0</span>, length)</span><br><span class="line">        <span class="keyword">if</span> self.all_objects:</span><br><span class="line">            <span class="comment"># 复制全部物体</span></span><br><span class="line">            copy_object_num = length</span><br><span class="line">        <span class="keyword">if</span> self.one_object:</span><br><span class="line">            <span class="comment"># 只选择一个物体复制</span></span><br><span class="line">            copy_object_num = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        random_list = random.sample(<span class="built_in">range</span>(length), copy_object_num)</span><br><span class="line">        idx_of_small_objects = [small_object_list[idx] <span class="keyword">for</span> idx <span class="keyword">in</span> random_list]</span><br><span class="line">        select_bboxes = bboxes[idx_of_small_objects, :]</span><br><span class="line">        select_labels = labels[idx_of_small_objects]</span><br><span class="line"></span><br><span class="line">        bboxes = bboxes.tolist()</span><br><span class="line">        labels = labels.tolist()</span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(copy_object_num):</span><br><span class="line">            bbox = select_bboxes[idx]</span><br><span class="line">            label = select_labels[idx]</span><br><span class="line"></span><br><span class="line">            bbox_h, bbox_w = bbox[<span class="number">3</span>] - bbox[<span class="number">1</span>], bbox[<span class="number">2</span>] - bbox[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self._is_small_object(bbox_h, bbox_w):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.copy_times):</span><br><span class="line">                new_bbox = self._create_copy_annot(height, width, bbox, bboxes)</span><br><span class="line">                <span class="keyword">if</span> new_bbox <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    img = self._add_patch_in_img(new_bbox, bbox, img)</span><br><span class="line">                    bboxes.append(new_bbox)</span><br><span class="line">                    labels.append(label)</span><br><span class="line">                </span><br><span class="line">        </span><br><span class="line">        results[<span class="string">&#x27;img&#x27;</span>] = img</span><br><span class="line">        results[<span class="string">&#x27;gt_bboxes&#x27;</span>] = np.array(bboxes)</span><br><span class="line">        results[<span class="string">&#x27;gt_labels&#x27;</span>] = np.array(labels)</span><br><span class="line">        <span class="keyword">return</span> results</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>最后感谢<a href="https://infinite-zh.com/">InfiniteZh</a>帮我跑了一下训练。换了电脑还是跑不动大模型5555。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://arxiv.org/abs/1902.07296">Augmentation for small object detection</a></p>
<p><a href="https://github.com/zzl-pointcloud/Data_Augmentation_Zoo_for_Object_Detection">Data_Augmentation_Zoo_for_Object_Detection</a></p>
<p><a href="https://mmdetection.readthedocs.io/en/v2.21.0/">mmdetection doc</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器学习</tag>
        <tag>mmdetection</tag>
        <tag>数据增强</tag>
      </tags>
  </entry>
  <entry>
    <title>使用java反射进行非空检查和转换</title>
    <url>/2022/07/26/java-reflect-check-null/</url>
    <content><![CDATA[<blockquote>
<p>封面《喫茶ステラと死神の蝶》</p>
</blockquote>
<h1 id="问题描述"><a class="markdownIt-Anchor" href="#问题描述"></a> 问题描述</h1>
<p>现在我有一下几个类,需要在<code>UpdateForm</code>和<code>StringModel</code>之间转换。同时对<code>StringModel</code>的部分字段进行一些非空检查。实际的<code>StringModel</code>和<code>UpdateForm</code>字段较多</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseModel</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode(callSuper = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringModel</span> <span class="keyword">extends</span> <span class="title class_">BaseModel</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String choice;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;model &#123;id=&quot;</span> + <span class="built_in">this</span>.getId() +<span class="string">&quot;,name=&quot;</span>+<span class="built_in">this</span>.name+<span class="string">&quot;,choice=&quot;</span>+<span class="built_in">this</span>.choice + <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MultiChoiceForm</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String label;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Boolean selected=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UpdateForm</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;MultiChoiceForm&gt; choice;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="通过反射获取属性"><a class="markdownIt-Anchor" href="#通过反射获取属性"></a> 通过反射获取属性</h1>
<p>在进行一番思考后我决定使用反射来解决这一问题，直接使用<code>getDeclaredFields()</code>函数获取类的所有私有成员</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">( String[] args )</span></span><br><span class="line">    &#123;</span><br><span class="line">        test1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">StringModel</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringModel</span>();</span><br><span class="line">        model.setId(<span class="number">1</span>);</span><br><span class="line">        model.setName(<span class="string">&quot;qxdn&quot;</span>);</span><br><span class="line">        model.setChoice(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;model: %s\n&quot;</span>,model);</span><br><span class="line">        <span class="comment">// 获取public</span></span><br><span class="line">        <span class="comment">//Field[] fields = model.getClass().getFields();</span></span><br><span class="line">        <span class="comment">// 获取所有字段 包含私有</span></span><br><span class="line">        Field[] fields = model.getClass().getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span>(Field field:fields)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;field name:%s,filed value:%s\n&quot;</span>,field.getName(),field.get(model));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalArgumentException | IllegalAccessException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">&quot;model: %s\n&quot;</span>,model);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>直接执行的结果是Exception</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java.lang.IllegalAccessException: class com.qxdn.App cannot access a member of class com.qxdn.model.StringModel with modifiers &quot;private&quot;</span><br></pre></td></tr></table></figure>
<p>这是说明我们没有权限去访问私有成员,稍微修改一下代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">StringModel</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringModel</span>();</span><br><span class="line">        model.setId(<span class="number">1</span>);</span><br><span class="line">        model.setName(<span class="string">&quot;qxdn&quot;</span>);</span><br><span class="line">        model.setChoice(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;model: %s\n&quot;</span>,model);</span><br><span class="line">        <span class="comment">// 获取public</span></span><br><span class="line">        <span class="comment">//Field[] fields = model.getClass().getFields();</span></span><br><span class="line">        <span class="comment">// 获取所有字段 包含私有</span></span><br><span class="line">        Field[] fields = model.getClass().getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span>(Field field:fields)&#123;</span><br><span class="line">            <span class="comment">// 设置访问权限</span></span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;field name:%s,filed value:%s\n&quot;</span>,field.getName(),field.get(model));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalArgumentException | IllegalAccessException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">&quot;model: %s\n&quot;</span>,model);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>运行结果如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model: model &#123;id=1,name=qxdn,choice=123&#125;</span><br><span class="line">field name:name,filed value:qxdn</span><br><span class="line">field name:choice,filed value:123</span><br><span class="line">model: model &#123;id=1,name=qxdn,choice=123&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到这里field没有父类的属性，这是因为<code>getDeclaredFields()</code>只会获取当前class的属性，不包含父类，因此我们需要自定义函数获取包含父类属性在内的所有属性。因此添加<code>getAllFields</code>函数获取包含父类的所有field</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">( String[] args )</span></span><br><span class="line">    &#123;</span><br><span class="line">        test1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Field&gt; <span class="title function_">getAllFields</span><span class="params">(Class clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (clazz == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;Field&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(getAllFields(clazz.getSuperclass()));</span><br><span class="line">        List&lt;Field&gt; fields = Arrays.stream(clazz.getDeclaredFields())</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">        result.addAll(fields);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">StringModel</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringModel</span>();</span><br><span class="line">        model.setId(<span class="number">1</span>);</span><br><span class="line">        model.setName(<span class="string">&quot;qxdn&quot;</span>);</span><br><span class="line">        model.setChoice(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;model: %s\n&quot;</span>,model);</span><br><span class="line">        <span class="comment">// 获取public</span></span><br><span class="line">        <span class="comment">//Field[] fields = model.getClass().getFields();</span></span><br><span class="line">        <span class="comment">// 获取所有字段 包含私有</span></span><br><span class="line">        List&lt;Field&gt; fields = getAllFields(model.getClass());</span><br><span class="line">        <span class="keyword">for</span>(Field field:fields)&#123;</span><br><span class="line">            <span class="comment">// 设置访问权限</span></span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;field name:%s,filed value:%s\n&quot;</span>,field.getName(),field.get(model));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalArgumentException | IllegalAccessException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">&quot;model: %s\n&quot;</span>,model);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model: model &#123;id=1,name=qxdn,choice=123&#125;</span><br><span class="line">field name:id,filed value:1</span><br><span class="line">field name:name,filed value:qxdn</span><br><span class="line">field name:choice,filed value:123</span><br><span class="line">model: model &#123;id=1,name=qxdn,choice=123&#125;</span><br></pre></td></tr></table></figure>
<h1 id="通过反射检测非空"><a class="markdownIt-Anchor" href="#通过反射检测非空"></a> 通过反射检测非空</h1>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkNonNull</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">StringModel</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringModel</span>();</span><br><span class="line">    model.setId(<span class="number">1</span>);</span><br><span class="line">    model.setChoice(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">    System.out.printf(<span class="string">&quot;model: %s\n&quot;</span>, model);</span><br><span class="line">    List&lt;Field&gt; fields = getAllFields(model.getClass());</span><br><span class="line">    <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">        <span class="comment">// 设置访问权限</span></span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == field.get(model)) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;field \&quot;%s\&quot; is null\n&quot;</span>, field.getName());</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException | IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.printf(<span class="string">&quot;model: %s\n&quot;</span>, model);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">model: model &#123;id=<span class="number">1</span>,name=<span class="literal">null</span>,choice=<span class="number">123</span>&#125;</span><br><span class="line">field <span class="string">&quot;name&quot;</span> is <span class="literal">null</span></span><br></pre></td></tr></table></figure>
<h1 id="反射来进行类型转换"><a class="markdownIt-Anchor" href="#反射来进行类型转换"></a> 反射来进行类型转换</h1>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InfoUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">splitText</span> <span class="operator">=</span> <span class="string">&quot;┋&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encodeMultiChoiceForm</span><span class="params">(List&lt;MultiChoiceForm&gt; list)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>  encodeMultiChoiceForm(list,splitText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encodeMultiChoiceForm</span><span class="params">(List&lt;MultiChoiceForm&gt; list,String encoderText)</span>&#123;</span><br><span class="line">        <span class="type">StringJoiner</span> <span class="variable">joiner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringJoiner</span>(encoderText);</span><br><span class="line">        <span class="keyword">for</span> (MultiChoiceForm form:list)&#123;</span><br><span class="line">            <span class="keyword">if</span> (form.getSelected())&#123;</span><br><span class="line">                joiner.add(form.getLabel());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> joiner.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;MultiChoiceForm&gt; <span class="title function_">decodeMultiChoiceForm</span><span class="params">(String raw)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  decodeMultiChoiceForm(raw,splitText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;MultiChoiceForm&gt; <span class="title function_">decodeMultiChoiceForm</span><span class="params">(String raw,String decoderText)</span>&#123;</span><br><span class="line">        List&lt;MultiChoiceForm&gt; forms = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        String[] strs = raw.split(decoderText);</span><br><span class="line">        <span class="keyword">for</span>(String str:strs)&#123;</span><br><span class="line">            forms.add(<span class="keyword">new</span> <span class="title class_">MultiChoiceForm</span>(str,<span class="literal">true</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  forms;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">StringModel</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringModel</span>();</span><br><span class="line">    <span class="type">UpdateForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UpdateForm</span>();</span><br><span class="line">    form.setId(<span class="number">1</span>);</span><br><span class="line">    form.setName(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    List&lt;MultiChoiceForm&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    list.add(<span class="keyword">new</span> <span class="title class_">MultiChoiceForm</span>(<span class="string">&quot;1&quot;</span>, <span class="literal">true</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> <span class="title class_">MultiChoiceForm</span>(<span class="string">&quot;2&quot;</span>, <span class="literal">false</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> <span class="title class_">MultiChoiceForm</span>(<span class="string">&quot;3&quot;</span>, <span class="literal">true</span>));</span><br><span class="line">    form.setChoice(list);</span><br><span class="line">    <span class="type">String</span> <span class="variable">skipName</span> <span class="operator">=</span> <span class="string">&quot;id&quot;</span>; <span class="comment">// skip id</span></span><br><span class="line">    System.out.printf(<span class="string">&quot;model: %s\n&quot;</span>, model);</span><br><span class="line">    System.out.printf(<span class="string">&quot;form: %s\n&quot;</span>, form);</span><br><span class="line">    List&lt;Field&gt; fields = getAllFields(form.getClass());</span><br><span class="line">    <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">        <span class="keyword">if</span> (field.getName().equals(skipName))&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (field.getType().equals(String.class) &amp;&amp; !StrUtil.isBlankIfStr(field.get(form))) &#123;</span><br><span class="line">                <span class="type">Field</span> <span class="variable">modelField</span> <span class="operator">=</span> model.getClass().getDeclaredField(field.getName());</span><br><span class="line">                modelField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                modelField.set(model, field.get(form));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="literal">null</span> != field.get(form) &amp;&amp; !field.getType().equals(String.class)) &#123;</span><br><span class="line">                <span class="type">Field</span> <span class="variable">modelField</span> <span class="operator">=</span> model.getClass().getDeclaredField(field.getName());</span><br><span class="line">                modelField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">if</span> (field.getType().equals(List.class)) &#123;</span><br><span class="line">                    modelField.set(model, InfoUtils.encodeMultiChoiceForm((List&lt;MultiChoiceForm&gt;) field.get(form)));</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    modelField.set(model, field.get(form));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException | IllegalAccessException | NoSuchFieldException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.printf(<span class="string">&quot;model: %s\n&quot;</span>, model);</span><br><span class="line">    System.out.printf(<span class="string">&quot;form: %s\n&quot;</span>, form);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model: model &#123;id=null,name=null,choice=null&#125;</span><br><span class="line">form: UpdateForm(id=1, name=abc, choice=[MultiChoiceForm(label=1, selected=true), MultiChoiceForm(label=2, selected=false), MultiChoiceForm(label=3, selected=true)])</span><br><span class="line">model: model &#123;id=null,name=abc,choice=1┋3&#125;</span><br><span class="line">form: UpdateForm(id=1, name=abc, choice=[MultiChoiceForm(label=1, selected=true), MultiChoiceForm(label=2, selected=false), MultiChoiceForm(label=3, selected=true)])</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>本来是只知道java有反射功能，通常用来做框架，倒是不怎么用。这次在类属性多了之后，且要复杂处理的时候才发现反射的好处。</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>反射</tag>
      </tags>
  </entry>
  <entry>
    <title>ConvNeXt论文笔记</title>
    <url>/2022/08/03/convnext-note/</url>
    <content><![CDATA[<blockquote>
<p>封面 《紅月ゆれる恋あかり》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>年初的时候看到别人推荐了ConvNeXt论文，看到了下面这张图，了解到了ConvNeXt比Swin Transformer效果好，因此读了一下这篇论文，写一下笔记。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.5/compare.png" alt="效果" /></p>
<h1 id="convnext的改进点"><a class="markdownIt-Anchor" href="#convnext的改进点"></a> ConvNeXt的改进点</h1>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.5/Improve.png" alt="总体改进" /></p>
<p>ConvNeXt的总体改进如上所示，各个改进和其效果都可以看的比较明白</p>
<h2 id="macro-design"><a class="markdownIt-Anchor" href="#macro-design"></a> Macro Design</h2>
<h3 id="changing-stage-compute-ratio"><a class="markdownIt-Anchor" href="#changing-stage-compute-ratio"></a> Changing stage compute ratio</h3>
<p>在原先的ResNet中各个stage之间的比例是(3:4:6:4)，而在swin transformer中这个比例是(1:1:3:1)在large模型中这个比例是(1:1:9:1)，因此作者将ResNet各个阶段的比例设置为(3:3:9:3)，准确率从78.8%上升到了79.4%。此外作者还表示这个比例还有优化空间</p>
<h3 id="changing-stem-to-patchify"><a class="markdownIt-Anchor" href="#changing-stem-to-patchify"></a> Changing stem to “Patchify”</h3>
<p>什么是stem？stem简单来说就说第一个下采样，主要的功能是压缩输入，减少计算量<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.5/stem.png" alt="stem" /><br />
在原本的ResNet中，stem层使用的是卷积核大小为7×7，stride=2的卷积核，其结果就是4倍的下采样。而在vit模型中，stem层用的是更加激进的卷积，卷积大小是14或者16，且移动没有重叠的。而在swin中stem使用的是相似的卷积，但是卷积大小是4×4。因此ConvNeXt中使用的是卷积大小4×4，stride=4的卷积。这使得准确率从79.4%上升到79.6%。</p>
<h2 id="resnext-ify"><a class="markdownIt-Anchor" href="#resnext-ify"></a> ResNeXt-ify</h2>
<p>ResNeXt在准确度和FLOPs之间有一个较好的权衡，ResNeXt的block结构如下所示，其结合了Inception的思想。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.5/resnext.png" alt="ResNeXt" /><br />
与原本的ResNeXt block不同的是，在ConvNeXt，ResNeXt的卷积部分使用的Group数和Channel的数量相同。同时，作者还认为depthwise卷积的操作和self-attention类似。这使得准确率下降到了78.3%,但是GFLOPs从4.4下降到了2.4。</p>
<p>此外还将网络的channel改到了和swin一样的96，这使得准确率提高到了80.5%，但是GFLOPs上升到了5.3</p>
<h2 id="inverted-bottleneck"><a class="markdownIt-Anchor" href="#inverted-bottleneck"></a> Inverted Bottleneck</h2>
<p>Transformer block的MLP层与MobileNetV2的反转瓶颈层很像，因此ConvNeXt也设计了一个反转瓶颈层即中间粗两边细的结构。在Transformer中MLP的隐藏层的维度都是4倍于输入维度，因此反转瓶颈层的中间层也是四倍缩放。下图中(a)是ResNet的block，而(b)是ConvNeXt建立的反转瓶颈层，©是降空间depthwise的层上移。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.5/InvertedBottleneck.png" alt="Inverted Bottleneck" /></p>
<p>使用反转瓶颈后，小模型中准确率从80.5%上升到80.6%，大模型的准确率从81.9%上升到82.6%，且FLOPs都减小。</p>
<h2 id="large-kernel-sizes"><a class="markdownIt-Anchor" href="#large-kernel-sizes"></a> Large Kernel Sizes</h2>
<h3 id="moving-up-depthwise-conv-layer"><a class="markdownIt-Anchor" href="#moving-up-depthwise-conv-layer"></a> Moving up depthwise conv layer</h3>
<p>因为在transformer模型上，MSA(Multi head self-attetion)是在MLP前面的，因此在反转瓶颈的时候，将depthwise卷积放到前面，即Inverted Bottleneck中的(b)到©。此外中间的1×1的卷积在代码里面是使用全连接层来实现的，因为1×1卷积和全连接几乎等价。</p>
<p>这使得FLOPs下降到4.1G，准确率到79.1%</p>
<h3 id="increasing-the-kernel-size"><a class="markdownIt-Anchor" href="#increasing-the-kernel-size"></a> Increasing the kernel size</h3>
<p>作者尝试增大卷积核的大小，可以看到卷积核加到7×7之后趋于饱和，因此选择在每个block中使用7×7的卷积核作为depthwise卷积。准确率上升到了80.6%。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.5/filter.png" alt="kernel size" /></p>
<h2 id="micro-design"><a class="markdownIt-Anchor" href="#micro-design"></a> Micro Design</h2>
<h3 id="replacing-relu-with-gelu"><a class="markdownIt-Anchor" href="#replacing-relu-with-gelu"></a> Replacing ReLU with GELU</h3>
<p>大多数卷积网络使用的是RELU激活，而transformer大多使用GELU激活，因此使用GELU激活，这对准确率没有什么影响</p>
<h3 id="fewer-activation-functions"><a class="markdownIt-Anchor" href="#fewer-activation-functions"></a> Fewer activation functions</h3>
<p>相较于ResNet，transformer拥有更少的激活函数。每一个transformer block中只有1个激活函数在MLP层之中，因此ConvNeXt也做类似，每个block在两个1×1之间加GELU激活。其结构如下图所示。这使得准确率从80.6%提升到了81.3%。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.5/block.png" alt="ConvNeXt Block" /></p>
<h3 id="fewer-normalization-layers"><a class="markdownIt-Anchor" href="#fewer-normalization-layers"></a> Fewer normalization layers</h3>
<p>transformer block中也是拥有较少的norm层，因此作者只保留了1×1卷积前面的BN层，这使得准确率到了81.4%，超过了Swin-T。需要注意的是作者尝试把BN加在Block前面，但是效果没有什么提升。</p>
<h3 id="substituting-bn-with-ln"><a class="markdownIt-Anchor" href="#substituting-bn-with-ln"></a> Substituting BN with LN</h3>
<p>在Transformer中经常使用LN，因此作者使用LN替换原来的BN，这使得准确率上升到了81.5%。</p>
<h3 id="separate-downsampling-layers"><a class="markdownIt-Anchor" href="#separate-downsampling-layers"></a> Separate downsampling layers</h3>
<p>在ResNet中空间下采样是在每个block stage的开头完成，通过使用3×3卷积stride=2，shortcut部分使用1×1卷积stride=2实现。而在swin transformer中在每个stage之间使用一个单独下采样层。因此作者使用2×2，stride=2的单独下采样层来实现。同时在下采样的卷积前使用layernorm可以帮助其收敛，而在stem层的layernorm加在卷积后面。这使得准确率提高到了82.0%，超过了Swin。</p>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>以上就是一直拖着没更新的ConvNeXt了，这是一个纯卷积神经网络，实现起来比较容易，且效果要好于Swin-T。是个不错的网络。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://stackoverflow.com/questions/68258188/why-does-cnns-usually-have-a-stem">Why does CNNs usually have a stem?</a></p>
<p><a href="https://arxiv.org/abs/1611.05431v2">Aggregated Residual Transformations for Deep Neural Networks</a></p>
<p><a href="https://arxiv.org/abs/2201.03545">A ConvNet for the 2020s</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>进程与线程</title>
    <url>/2022/10/06/process-and-thread/</url>
    <content><![CDATA[<blockquote>
<p>封面 《サクラノ詩 －櫻の森の上を舞う－》</p>
</blockquote>
<h1 id="进程"><a class="markdownIt-Anchor" href="#进程"></a> 进程</h1>
<h2 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h2>
<blockquote>
<p>进程是一个独立执行的程序，是操作系统进行资源分配和调度的基本概念，操作系统进行资源分配和调度的一个独立单位。</p>
</blockquote>
<h2 id="进程组成部分"><a class="markdownIt-Anchor" href="#进程组成部分"></a> 进程组成部分</h2>
<p>进程实体=程序段+数据段+进程控制块(process control block，PCB)</p>
<ul>
<li>程序段： 程序代码存放程序段</li>
<li>数据段： 程序运行时使用、产生的运算数据。如全局变量、局部变量、宏定义的常量就存放在数据段内</li>
<li>PCB: 操作系统通过PCB来管理进程,因此PCB中应该包含操作系统对其进行管理所需的各种信息</li>
</ul>
<h3 id="pcb的组成部分"><a class="markdownIt-Anchor" href="#pcb的组成部分"></a> PCB的组成部分</h3>
<ul>
<li>进程描述信息
<ul>
<li>进程唯一的标记符，类似唯一id</li>
<li>用户标识符，进程归属的用户，用户标识符主要为共享和保护服务</li>
</ul>
</li>
<li>进程控制和管理信息
<ul>
<li>进程当前状态，比如运行、就绪、阻塞等，作为处理机分配调度的依据</li>
<li>进程优先级，描述进程抢占处理机的优先级，优先级高的进程可以优先获得处理机</li>
</ul>
</li>
<li>资源分配清单
<ul>
<li>用于说明有关内存地址空间或虚拟地址空间的状况，所打开文件的列表和所使用的输入/输出设备信息</li>
</ul>
</li>
<li>CPU 相关信息
<ul>
<li>指 CPU 中各寄存器值，当进程被切换时，CPU状态信息都必须保存在相应的 PCB中，以便进程重新执行时，能再从断点继续执行。</li>
</ul>
</li>
</ul>
<h2 id="进程的状态"><a class="markdownIt-Anchor" href="#进程的状态"></a> 进程的状态</h2>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.6/process-state.png" alt="进程状态切换 图源见水印" /></p>
<ul>
<li>创建态（new）：进程正在被创建</li>
<li>就绪态（Ready）：可运行，但因为其他进程正在运行而暂停停止</li>
<li>运行态（Runing）：时刻进程占用 CPU</li>
<li>结束态（Exit）：进程正在从系统中消失时的状态</li>
<li>阻塞状态（Blocked）：该进程等待某个事件（比如IO读取）停止运行，这时，即使给它CPU控制权，它也无法运行</li>
</ul>
<h2 id="进程的上下文切换"><a class="markdownIt-Anchor" href="#进程的上下文切换"></a> 进程的上下文切换</h2>
<p>进程的任何操作都是在操作系统内核的支持下运行的，进程切换发生在内核态。</p>
<p>进程切换就是把前一个进程的CPU上下文保存起来，然后加载当前任务的CPU上下文，最后跳转到程序计数器所指的新位置，运行任务</p>
<h2 id="进程通信"><a class="markdownIt-Anchor" href="#进程通信"></a> 进程通信</h2>
<h3 id="通信作用"><a class="markdownIt-Anchor" href="#通信作用"></a> 通信作用</h3>
<p>进程的数据空间是独立的，私有的，不能相互访问，但是在某些情况下进程之间需要通信来实现某功能或交换数据，包括：</p>
<ul>
<li>数据传输：一个进程需要将它的数据发送给另一个进程。</li>
<li>共享数据：多个进程想要操作共享数据，一个进程对共享数据的修改，别的进程应该立刻看到。</li>
<li>通知事件：一个进程需要向另一个或一组进程发送消息，通知它（它们）发生了某种事件（如通知进程退出）。</li>
<li>进程控制：一个进程希望控制另一个进程的运行。</li>
</ul>
<h3 id="进程通信-2"><a class="markdownIt-Anchor" href="#进程通信-2"></a> 进程通信</h3>
<p>进程通信（Inter Process Communication）有两种形式：</p>
<ul>
<li>LPC（local procedure call）：信号量、管道、消息队列、共享内存、socket等</li>
<li>RPC（remote procedure call）：基于网络协议封装</li>
</ul>
<p>进程通信的方式大概分为六种。</p>
<ul>
<li>管道：包括无名管道（pipe）及命名管道（named pipe），无名管道可用于具有父进程和子进程之间的通信。命名管道克服了管道没有名字的限制，因此，除具有管道所具有的功能外，它还允许无亲缘关系进程间的通信。</li>
<li>消息队列（message）：进程可以向队列中添加消息，其它的进程则可以读取队列中的消息。</li>
<li>信号（signal）：信号用于通知其它进程有某种事件发生。</li>
<li>共享内存（shared memory）：多个进程可以访问同一块内存空间。</li>
<li>信号量（semaphore）：也叫信号灯，用于进程之间对共享资源进行加锁。</li>
<li>套接字（socket）：可用于不同计算机之间的进程间通信。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.6/IPC.png" alt="" /></p>
<h1 id="线程"><a class="markdownIt-Anchor" href="#线程"></a> 线程</h1>
<h2 id="定义-2"><a class="markdownIt-Anchor" href="#定义-2"></a> 定义</h2>
<blockquote>
<p>线程是进程的子任务，是CPU调度和分派的基本单位，用于保证程序的实时性，实现进程内部的并发；线程是操作系统可识别的最小执行和调度单位。每个线程都独自占用一个虚拟处理器：独自的寄存器组，指令计数器和处理器状态。每个线程完成不同的任务，但是共享同一地址空间（也就是同样的动态内存，映射文件，目标代码等等），打开的文件队列和其他内核资源。</p>
</blockquote>
<p>一个进程内可以有许多线程，线程不拥有自己的资源，线程与其他线程共享进程内的资源</p>
<p>与进程类似，线程也有TCB(Thread Control Block)</p>
<h2 id="线程的类别"><a class="markdownIt-Anchor" href="#线程的类别"></a> 线程的类别</h2>
<ul>
<li>用户级线程<br />
内核意识不到用户级线程的存在，使用线程库设计多线程程序，对于一个进程来说，一个线程阻塞，整个进程都会被阻塞。</li>
<li>内核级线程<br />
由操作系统层面实现线程，应用程序没有实现线程管理，但是切换的代价要比用户级线程大</li>
</ul>
<h2 id="多线程模型"><a class="markdownIt-Anchor" href="#多线程模型"></a> 多线程模型</h2>
<p>有些系统同时支持用户线程和内核线程由此产生了不同的多线程模型，即实现用户级线程和内核级线程的连接方式。</p>
<ul>
<li>多对一模型： 多个用户及线程映射到一个内核级线程。每个用户进程只对应一个内核级线程
<ul>
<li>优点:用户级线程的切换在用户空间即可完成，不需要切换到核心态，线程管理的系统开销小，效率高</li>
<li>缺点:当一个用户级线程被阻塞后，整个进程都会被阻塞，并发度不高。多个线程不可在多核处理机上并行运行</li>
</ul>
</li>
<li>一对一模型： 一个用户及线程映射到一个内核级线程。每个用户进程有与用户级线程同数量的内核级线程
<ul>
<li>优点:当一个线程被阻塞后，别的线程还可以继续执行，并发能力强。多线程可在多核处理机上并行执行。</li>
<li>缺点:一个用户进程会占用多个内核级线程，线程切换由操作系统内核完成，需要切换到核心态，因此线程管理的成本高，开销大。</li>
</ul>
</li>
<li>多对多模型:n用户及线程映射到m个内核级线程(n &gt;= m）。每个用户进程对应m个内核级线程
<ul>
<li>克服了多对一模型并发度不高的缺点，又克服了一对一模型中一个用户进程占用太多内核级线程，开销太大的缺点</li>
</ul>
</li>
</ul>
<h1 id="进程与线程的区别"><a class="markdownIt-Anchor" href="#进程与线程的区别"></a> 进程与线程的区别</h1>
<table>
<thead>
<tr>
<th></th>
<th>进程</th>
<th>线程</th>
</tr>
</thead>
<tbody>
<tr>
<td>定义</td>
<td>资源分配的基本单位</td>
<td>CPU执行的基本单位</td>
</tr>
<tr>
<td>切换开销</td>
<td>大</td>
<td>小</td>
</tr>
<tr>
<td>包含关系</td>
<td>进程内可以有多个线程</td>
<td>线程生存在进程内</td>
</tr>
<tr>
<td>影响关系</td>
<td>一个进程崩溃后，在保护模式下不会对其他进程产生影响</td>
<td>一个线程崩溃整个进程都死掉</td>
</tr>
<tr>
<td>资源</td>
<td>独立的代码空间和内存空间</td>
<td>独立的运行栈和程序计数器</td>
</tr>
<tr>
<td>通信</td>
<td>进程通信</td>
<td>直接读写数据段</td>
</tr>
</tbody>
</table>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://cloud.tencent.com/developer/article/1688297">进程和线程的概念、区别及进程线程间通信</a></p>
<p><a href="https://mp.weixin.qq.com/s/jhOSjVyRA6rNKqVT2pKMIQ">进程、线程与协程傻傻分不清？一文带你吃透！</a></p>
<p><a href="https://freecplus.net/d95f4eaf18eb46d19b82383519126dec.html">C语言技术网</a></p>
<p><a href="https://mp.weixin.qq.com/s/iHQGe2J-4C405CYzBIqXNg">三分钟基础：用户级线程和内核级线程有什么区别？</a></p>
]]></content>
      <categories>
        <category>OS</category>
      </categories>
      <tags>
        <tag>面经</tag>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>死锁</title>
    <url>/2022/10/19/dead-lock/</url>
    <content><![CDATA[<blockquote>
<p>封面《絆きらめく恋いろは》</p>
</blockquote>
<h1 id="死锁的概念"><a class="markdownIt-Anchor" href="#死锁的概念"></a> 死锁的概念</h1>
<blockquote>
<p>死锁是指多个进程因竞争资源而造成的一种僵局（互相等待），若无外力作用，这些进程都将无法向前推进</p>
</blockquote>
<h1 id="死锁产生的原因"><a class="markdownIt-Anchor" href="#死锁产生的原因"></a> 死锁产生的原因</h1>
<ul>
<li>系统资源不足</li>
<li>程序执行的顺序有问题</li>
<li>资源分配不当等</li>
</ul>
<h1 id="死锁产生的必要条件"><a class="markdownIt-Anchor" href="#死锁产生的必要条件"></a> 死锁产生的必要条件</h1>
<blockquote>
<p>产生死锁必须满足四个必要条件，任意一个条件不成立，死锁就不会发生。</p>
</blockquote>
<h2 id="互斥条件"><a class="markdownIt-Anchor" href="#互斥条件"></a> 互斥条件</h2>
<p>在某一段时间内，资源仅被一个进程占有。若有其他进程请求该资源，则请求进程只能等待。</p>
<h2 id="不剥夺条件"><a class="markdownIt-Anchor" href="#不剥夺条件"></a> 不剥夺条件</h2>
<p>进程所获得的资源在未使用完之前，不能被其他进程强行夺走，只能由获得该资源的进程自己来释放。</p>
<h2 id="请求并保持条件"><a class="markdownIt-Anchor" href="#请求并保持条件"></a> 请求并保持条件</h2>
<p>进程已经保持了至少一个资源，但又提出了新的资源请求，而该资源已经被其他进程占有，此时请求进程被阻塞，但对自己获得的资源保持不放。</p>
<h2 id="循环等待条件"><a class="markdownIt-Anchor" href="#循环等待条件"></a> 循环等待条件</h2>
<p>存在一种进程资源的循环等待链，链中每个进程已获得的资源同时被链中下一个进程所请求。</p>
<h1 id="处理死锁"><a class="markdownIt-Anchor" href="#处理死锁"></a> 处理死锁</h1>
<h2 id="死锁预防"><a class="markdownIt-Anchor" href="#死锁预防"></a> 死锁预防</h2>
<blockquote>
<p>破坏死锁的4个必要条件</p>
</blockquote>
<h3 id="破坏互斥条件"><a class="markdownIt-Anchor" href="#破坏互斥条件"></a> 破坏互斥条件</h3>
<p>有些资源必须互斥使用，因此无法破坏互斥条件。</p>
<h3 id="破坏不剥夺条件"><a class="markdownIt-Anchor" href="#破坏不剥夺条件"></a> 破坏不剥夺条件</h3>
<p>当进程请求新资源得不到满足时，必须释放已经持有的资源，重新申请。这个策略实现起来比较复杂，反复的申请和释放会导致系统开销增加，降低系统吞吐量。这种方式适用于容易保存和恢复的资源，例如CPU的寄存器和内存资源，一般不能用于打印机之类的资源。</p>
<h3 id="破坏请求与保持条件"><a class="markdownIt-Anchor" href="#破坏请求与保持条件"></a> 破坏请求与保持条件</h3>
<p>采用预先静态分配方法，进程在运行之前申请完它所需的所有资源，在使用过程中，这些资源一直归它所有。</p>
<p>容易发生两个问题：1.导致部分进程饥饿现象，永远申请不满资源。2.导致资源浪费，有些资源只在运行初期或者结束时候使用。</p>
<h3 id="破坏循环等待条件"><a class="markdownIt-Anchor" href="#破坏循环等待条件"></a> 破坏循环等待条件</h3>
<p>为了破坏循环等待条件，可以采用顺序资源分配法。给资源编号，进程按照编号递增的顺序请求资源。</p>
<p>容易造成资源使用的浪费和用户编程的麻烦。</p>
<h2 id="死锁避免"><a class="markdownIt-Anchor" href="#死锁避免"></a> 死锁避免</h2>
<blockquote>
<p>在使用前进行判断，只允许不会产生死锁的进程申请资源<br />
死锁避免是利用额外的检验信息，在分配资源时判断是否会出现死锁，只在不会出现死锁的情况下才分配资源<br />
各种死锁防止方法能够防止发生死锁，但必然会降低系统并发性，导致低效的资源利用率</p>
</blockquote>
<h3 id="安全状态"><a class="markdownIt-Anchor" href="#安全状态"></a> 安全状态</h3>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.7/safe-state.png" alt="安全状态" /></p>
<p>图 a 的第二列 Has 表示已拥有的资源数，第三列 Max 表示总共需要的资源数，Free 表示还有可以使用的资源数。从图 a 开始出发，先让 B 拥有所需的所有资源（图 b），运行结束后释放 B，此时 Free 变为 5（图 c）；接着以同样的方式运行 C 和 A，使得所有进程都能成功运行，因此可以称图 a 所示的状态时安全的。</p>
<p>定义：如果没有死锁发生，并且即使所有进程突然请求对资源的最大需求，也仍然存在某种调度次序能够使得每一个进程运行完毕，则称该状态是安全的。</p>
<h3 id="银行家算法"><a class="markdownIt-Anchor" href="#银行家算法"></a> 银行家算法</h3>
<p>银行家算法的主要思想是避免死锁进入不安全状态。每次进行资源分配时，它先检查系统是否有足够的资源满足要求，若有则先进行分配，并对分配后的新状态进行安全性检查。若新状态安全，则正是分配上述资源，否则拒绝分配上述资源。然后回收已分配的资源，进行下一轮分配。这样能保证资源始终处于安全状态，从而避免死锁发生。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.7/bank-unsafe.png" alt="" /><br />
上图c为不安全状态，因此算法会拒绝进入图c请求</p>
<h2 id="死锁检测与恢复"><a class="markdownIt-Anchor" href="#死锁检测与恢复"></a> 死锁检测与恢复</h2>
<h3 id="死锁检测"><a class="markdownIt-Anchor" href="#死锁检测"></a> 死锁检测</h3>
<h4 id="资源分配图"><a class="markdownIt-Anchor" href="#资源分配图"></a> 资源分配图</h4>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.7/rag.jpg" alt="资源分配图" /></p>
<ul>
<li>圆圈代表进程</li>
<li>方框代表一类资源</li>
<li>进程到资源的有向边代表请求资源边</li>
<li>资源到进程的有向边代表资源分配边<br />
如图所示，P1进程分得两个R1资源，又请求一个R2资源；P2进程分得一个R1资源和R2资源，又请求了一个R1资源。</li>
</ul>
<h4 id="简化资源分配图"><a class="markdownIt-Anchor" href="#简化资源分配图"></a> 简化资源分配图</h4>
<p>简化资源分配图步骤</p>
<ol>
<li>找一个非孤立、且只有分配边的进程节点，去掉分配边，将其变为孤立节点</li>
<li>再把相应的资源分配给一个等待该资源的进程，即将该进程的申请边变为分配边</li>
<li>重复1、2</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.7/rag2.jpg" alt="化简" /></p>
<ul>
<li>(1)到(2): R2剩余1个资源，分配给P1，释放P1</li>
<li>(2)到(3): R1剩余2个资源，分配给P2，释放P2</li>
</ul>
<p>若能消去所有的边，则该图是可完全简化的，死锁的条件是当且仅当S状态的资源分配图是不可完全简化的</p>
<h3 id="死锁恢复"><a class="markdownIt-Anchor" href="#死锁恢复"></a> 死锁恢复</h3>
<ul>
<li>资源剥夺法。挂起某些死锁进程并抢夺它的资源，直到死锁接触。但要防止被挂起的进程长时间得不到资源而饥饿。</li>
<li>撤销进程法。强制撤销部分、甚至全部死锁进程并剥夺这些资源。</li>
<li>进程回退法。让一个或多个进程回退到足以回避死锁的地步。要求保持进程的历史信息，设置还原点。</li>
</ul>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p><a href="https://www.nowcoder.com/questionTerminal/09b51b00891543d6b08ace80c0704b01">什么是死锁(deadlock)</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/25677118">死锁产生的原因及四个必要条件</a></p>
<p><a href="https://blog.csdn.net/zhangpower1993/article/details/89518780">死锁的四个必要条件、预防和避免办法</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/61221667">​死锁的产生、防止、避免、检测和解除</a></p>
]]></content>
      <categories>
        <category>OS</category>
      </categories>
      <tags>
        <tag>面经</tag>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>golang垃圾回收</title>
    <url>/2022/10/21/go-gc/</url>
    <content><![CDATA[<blockquote>
<p>封面《pieces/渡り鳥のソムニウム》</p>
</blockquote>
<h1 id="go-v13-标记-清除算法"><a class="markdownIt-Anchor" href="#go-v13-标记-清除算法"></a> GO V1.3 标记-清除算法</h1>
<p>此算法主要有两个主要的步骤：</p>
<ul>
<li>标记(Mark phase)</li>
<li>清除(Sweep phase)</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.10/mark-sweep.jpg" alt="mark-sweep" /></p>
<ol>
<li>STW(stop the world), 找出不可达的对象，然后做上标记。</li>
<li>开始标记，程序找出它所有可达的对象，并做上标记。</li>
<li>标记完了之后，然后开始清除未标记的对象。</li>
<li>停止暂停，让程序继续跑。然后循环重复这个过程，直到process程序生命周期结束。</li>
</ol>
<p>所以Go V1.3版本之前就是以上来实施的,在执行GC的基本流程就是首先启动STW暂停，然后执行标记，再执行数据回收，最后停止STW<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.10/before1_3.png" alt="GOv1.3以前" /></p>
<p>Go V1.3 做了简单的优化,将STW提前, 减少STW暂停的时间范围。将STW的步骤提前了一步，因为在Sweep清除的时候，可以不需要STW停止，因为这些对象已经是不可达对象了，不会出现回收写冲突等问题。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.10/after1_3.png" alt="GOv1.3以后" /></p>
<h2 id="缺点"><a class="markdownIt-Anchor" href="#缺点"></a> 缺点：</h2>
<ul>
<li>STW，stop the world；让程序暂停，程序出现卡顿(重要问题)</li>
<li>标记需要扫描整个heap</li>
<li>清除数据会产生heap碎片</li>
</ul>
<p>无论如何mark-sweep都会暂停整个程序，为了解决这个问题在GOv1.5版本引入了三色并发标记法来优化</p>
<h1 id="go-v15-三色标记法"><a class="markdownIt-Anchor" href="#go-v15-三色标记法"></a> GO v1.5 三色标记法</h1>
<p>Golang中的垃圾回收主要应用三色标记法，GC过程和其他用户goroutine可并发运行，但需要一定时间的STW(stop the world)</p>
<h2 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h2>
<ul>
<li>黑色：检测到有被引用，并且已经遍历完它所有直接引用的对象或者属性</li>
<li>白色：还没检测到有引用的对象（检测开始前，所有对象都是白色，检测结束后，没有被引用的对象都是白色，会被清查掉）</li>
<li>灰色：检测到有被引用，但是他的属性还没有被遍历完，等遍历完后也会变成黑色</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.10/tri-color-marking.png" alt="三色标记法流程" /></p>
<p>如果不使用STW，这种方式会造成标记不准确的问题，下面两种情况是不希望发生的</p>
<ul>
<li>一个白色对象被黑色对象引用</li>
<li>白色对象又被某个灰色（或者上级有灰色对象）对象取消引用。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.10/non-stw.jpg" alt="没有STW的三色标记法" /></p>
<p>为了防止上面的现象发生，最简单的方式就是使用STW，直接禁止掉其他用户程序对对象引用关系的干扰，但是STW的过程有明显的资源浪费，对所有的用户程序都有很大影响。因此Go的方法是使用插入屏障和删除屏障</p>
<h2 id="屏障机制"><a class="markdownIt-Anchor" href="#屏障机制"></a> 屏障机制</h2>
<h3 id="强-弱三色不等式"><a class="markdownIt-Anchor" href="#强-弱三色不等式"></a> ”强-弱“三色不等式</h3>
<ol>
<li>强三色不等式</li>
</ol>
<blockquote>
<p>不存在黑色对象引用到白色对象的指针<br />
强三色不变色实际上是强制性的不允许黑色对象引用白色对象，这样就不会出现有白色对象被误删的情况</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.10/strong-tri.png" alt="强三色不等式" /></p>
<ol start="2">
<li>弱三色不等式</li>
</ol>
<blockquote>
<p>所有被黑色对象引用的白色对象都处于灰色保护状态<br />
弱三色不变式强调，黑色对象可以引用白色对象，但是这个白色对象必须存在其他灰色对象对它的引用，或者可达它的链路上游存在灰色对象。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.10/weak-tri.png" alt="弱三色不等式" /></p>
<h3 id="插入屏障"><a class="markdownIt-Anchor" href="#插入屏障"></a> 插入屏障</h3>
<p><strong>具体操作：</strong> 在A对象引用B对象的时候，B对象被标记为灰色。(将B挂在A下游，B必须被标记为灰色)</p>
<p><strong>满足：</strong> 强三色不变式. (不存在黑色对象引用白色对象的情况了， 因为白色会强制变成灰色)</p>
<blockquote>
<p>色对象的内存槽有两种位置, 栈和堆. 栈空间的特点是容量小,但是要求相应速度快,因为函数调用弹出频繁使用, 所以“插入屏障”机制,在栈空间的对象操作中不使用. 而仅仅使用在堆空间对象的操作中<br />
对于栈的部分使用STW保护</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.10/insert.jpg" alt="插入屏障" /></p>
<h3 id="删除屏障"><a class="markdownIt-Anchor" href="#删除屏障"></a> 删除屏障</h3>
<p><strong>具体操作:</strong> 被删除的对象，如果自身为灰色或者白色，那么被标记为灰色。</p>
<p><strong>满足:</strong> 弱三色不变式. (保护灰色对象到白色对象的路径不会断)</p>
<blockquote>
<p>这种方式的回收精度低，一个对象即使被删除了最后一个指向它的指针也依旧可以活过这一轮，在下一轮GC中被清理掉。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.10/delete.jpg" alt="删除屏障" /></p>
<h1 id="go-v18-混合写屏障hybrid-write-barrier机制"><a class="markdownIt-Anchor" href="#go-v18-混合写屏障hybrid-write-barrier机制"></a> GO v1.8 混合写屏障(hybrid write barrier)机制</h1>
<h2 id="插入写屏障和删除写屏障的缺点"><a class="markdownIt-Anchor" href="#插入写屏障和删除写屏障的缺点"></a> 插入写屏障和删除写屏障的缺点</h2>
<ul>
<li>插入写屏障：结束时需要STW来重新扫描栈，标记栈上引用的白色对象的存活；</li>
<li>删除写屏障：回收精度低，GC开始时STW扫描堆栈来记录初始快照，这个过程会保护开始时刻的所有存活对象。</li>
</ul>
<p>Go V1.8版本引入了混合写屏障机制（hybrid write barrier），避免了对栈re-scan的过程，极大的减少了STW的时间。结合了两者的优点。</p>
<h2 id="混合写屏障"><a class="markdownIt-Anchor" href="#混合写屏障"></a> 混合写屏障</h2>
<p><strong>具体操作：</strong></p>
<ol>
<li>GC开始将栈上的对象全部扫描并标记为黑色(之后不再进行第二次重复扫描，无需STW)，</li>
<li>GC期间，任何在栈上创建的新对象，均为黑色。</li>
<li>被删除的对象标记为灰色。</li>
<li>被添加的对象标记为灰色。</li>
</ol>
<blockquote>
<p>需要注意屏障技术是不在栈上应用的，因为要保证栈的运行效率<br />
混合写屏障是GC的一种屏障机制，所以只是当程序执行GC的时候，才会触发这种机制。</p>
</blockquote>
<p>Golang中的混合写屏障满足弱三色不变式，结合了删除写屏障和插入写屏障的优点，只需要在开始时并发扫描各个goroutine的栈，使其变黑并一直保持，这个过程不需要STW，而标记结束后，因为栈在扫描后始终是黑色的，也无需再进行re-scan操作了，减少了STW的时间</p>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>GoV1.3- 普通标记清除法，整体过程需要启动STW，效率极低。</p>
<p>GoV1.5- 三色标记法， 堆空间启动写屏障，栈空间不启动，全部扫描之后，需要重新扫描一次栈(需要STW)，效率普通</p>
<p>GoV1.8-三色标记法，混合写屏障机制， 栈空间不启动，堆空间启动。整个过程几乎不需要STW，效率较高。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p><a href="https://www.yuque.com/aceld/golang/zhzanb#2a81bdfb">Golang三色标记混合写屏障GC模式全分析</a></p>
<p><a href="https://www.jianshu.com/p/4c5a303af470">[典藏版]Golang三色标记、混合写屏障GC模式图文全分析</a></p>
]]></content>
      <categories>
        <category>面经</category>
      </categories>
      <tags>
        <tag>面经</tag>
        <tag>golang</tag>
        <tag>gc</tag>
      </tags>
  </entry>
  <entry>
    <title>Java垃圾回收</title>
    <url>/2022/10/21/java-gc/</url>
    <content><![CDATA[<blockquote>
<p>封面 《Golden Marriage》</p>
</blockquote>
<h1 id="判断对象是否可以回收"><a class="markdownIt-Anchor" href="#判断对象是否可以回收"></a> 判断对象是否可以回收</h1>
<h2 id="引用计数算法reference-counting-collector"><a class="markdownIt-Anchor" href="#引用计数算法reference-counting-collector"></a> 引用计数算法(Reference Counting Collector)</h2>
<blockquote>
<p>通过在对象头中分配一个空间来保存该对象被引用的次数（Reference Count）。如果该对象被其它对象引用，则它的引用计数加 1，如果删除对该对象的引用，那么它的引用计数就减 1，当该对象的引用计数为 0 时，那么该对象就会被回收</p>
</blockquote>
<ul>
<li>优点：引用计数收集器执行简单，判定效率高，交织在程序运行中。对程序不被长时间打断的实时环境比较有利。</li>
<li>缺点： 难以检测出对象之间的循环引用。同时，引用计数器增加了程序执行的开销。所以Java语言并没有选择这种算法进行垃圾回收。</li>
</ul>
<p>下面是一个循环引用的例子，在这个例子中使用引用计数法导致两个对象虽然被设置为null但是各自引用对方导致引用计数器无法被设置0，从而导致无法被回收。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReferenceCountingGC</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object instance;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ReferenceCountingGC</span><span class="params">(String name)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testGC</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">ReferenceCountingGC</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReferenceCountingGC</span>(<span class="string">&quot;objA&quot;</span>);</span><br><span class="line">    <span class="type">ReferenceCountingGC</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReferenceCountingGC</span>(<span class="string">&quot;objB&quot;</span>);</span><br><span class="line"></span><br><span class="line">    a.instance = b;</span><br><span class="line">    b.instance = a;</span><br><span class="line"></span><br><span class="line">    a = <span class="literal">null</span>;</span><br><span class="line">    b = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/cycle-reference.png" alt="循环引用" /></p>
<h2 id="可达性分析算法reachability-analysis"><a class="markdownIt-Anchor" href="#可达性分析算法reachability-analysis"></a> 可达性分析算法(Reachability Analysis)</h2>
<blockquote>
<p>可达性分析算法（Reachability Analysis）的基本思路是，通过一些被称为引用链（GC Roots）的对象作为起点，从这些节点开始向下搜索，搜索走过的路径被称为（Reference Chain)，当一个对象到 GC Roots 没有任何引用链相连时（即从 GC Roots 节点到该节点不可达），则证明该对象是不可用的。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/reachability-analysis.png" alt="可达性分析" /></p>
<p>可以作为GC ROOT的对象</p>
<ul>
<li>虚拟机栈（栈帧中的本地变量表）中引用的对象</li>
<li>方法区中类静态属性引用的对象</li>
<li>方法区中常量引用的对象</li>
<li>本地方法栈中 JNI（即一般说的 Native 方法）引用的对象</li>
<li>JVM 内部的引用</li>
<li>所有被同步锁（synchronized 关键字）持有的对象<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/gc-root.png" alt="GC ROOT" /></li>
</ul>
<h3 id="虚拟机栈栈帧中的本地变量表中引用的对象"><a class="markdownIt-Anchor" href="#虚拟机栈栈帧中的本地变量表中引用的对象"></a> 虚拟机栈（栈帧中的本地变量表）中引用的对象</h3>
<p>此时的 s，即为 GC Root，当 s 置空时，localParameter 对象也断掉了与 GC Root 的引用链，将被回收。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StackLocalParameter</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">StackLocalParameter</span><span class="params">(String name)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testGC</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">StackLocalParameter</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StackLocalParameter</span>(<span class="string">&quot;localParameter&quot;</span>);</span><br><span class="line">    s = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="方法区中类静态属性引用的对象"><a class="markdownIt-Anchor" href="#方法区中类静态属性引用的对象"></a> 方法区中类静态属性引用的对象</h3>
<p>s 为 GC Root，s 置为 null，经过 GC 后，s 所指向的 properties 对象由于无法与 GC Root 建立关系被回收。而 m 作为类的静态属性，也属于 GC Root，parameter 对象依然与 GC root 建立着连接，所以此时 parameter 对象并不会被回收。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodAreaStaicProperties</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> MethodAreaStaicProperties m;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MethodAreaStaicProperties</span><span class="params">(String name)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testGC</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">MethodAreaStaicProperties</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MethodAreaStaicProperties</span>(<span class="string">&quot;properties&quot;</span>);</span><br><span class="line">    s.m = <span class="keyword">new</span> <span class="title class_">MethodAreaStaicProperties</span>(<span class="string">&quot;parameter&quot;</span>);</span><br><span class="line">    s = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="方法区中常量引用的对象"><a class="markdownIt-Anchor" href="#方法区中常量引用的对象"></a> 方法区中常量引用的对象</h3>
<p>m 即为方法区中的常量引用，也为 GC Root，s 置为 null 后，final 对象也不会因没有与 GC Root 建立联系而被回收。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodAreaStaicProperties</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">MethodAreaStaicProperties</span> <span class="variable">m</span> <span class="operator">=</span> MethodAreaStaicProperties(<span class="string">&quot;final&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MethodAreaStaicProperties</span><span class="params">(String name)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testGC</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">MethodAreaStaicProperties</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MethodAreaStaicProperties</span>(<span class="string">&quot;staticProperties&quot;</span>);</span><br><span class="line">    s = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="本地方法栈中-jni即一般说的-native-方法引用的对象"><a class="markdownIt-Anchor" href="#本地方法栈中-jni即一般说的-native-方法引用的对象"></a> 本地方法栈中 JNI（即一般说的 Native 方法）引用的对象</h3>
<p>任何 Native 接口都会使用某种本地方法栈，实现的本地方法接口是使用 C 连接模型的话，那么它的本地方法栈就是 C 栈。当线程调用 Java 方法时，虚拟机会创建一个新的栈帧并压入 Java 栈。然而当它调用的是本地方法时，虚拟机会保持 Java 栈不变，不再在线程的 Java 栈中压入新的帧，虚拟机只是简单地动态连接并直接调用指定的本地方法。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/JNI.png" alt="GC ROOT" /></p>
<h1 id="四种引用状态"><a class="markdownIt-Anchor" href="#四种引用状态"></a> 四种引用状态</h1>
<ul>
<li>强引用(StrongReference):普通的引用都是强引用.<strong>如果一个对象具有强引用，那垃圾回收器不会回收</strong></li>
<li>软引用(SoftReference): <strong>描述有些还有用但并非必需的对象。在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围进行二次回收。</strong> 如果这次回收还没有足够的内存，才会抛出内存溢出异常。Java中的类SoftReference表示软引用。</li>
<li>弱引用(WeakReference): <strong>描述非必需对象。被弱引用关联的对象只能生存到下一次垃圾回收之前，垃圾收集器工作之后，无论当前内存是否足够，都会回收掉只被弱引用关联的对象。</strong> Java中的类WeakReference表示弱引用。</li>
<li>虚引用(PhantomReference): <strong>这个引用存在的唯一目的就是在这个对象被收集器回收时收到一个系统通知，被虚引用关联的对象，和其生存时间完全没关系。</strong> 如果一个对象仅持有虚引用，那么它就和没有任何引用一样，在任何时候都可能被垃圾回收器回收。Java中的类PhantomReference表示虚引用。虚引用必须和引用队列 （ReferenceQueue）联合使用。当垃圾回收器准备回收一个对象时，如果发现它还有虚引用，就会在回收对象的内存之前，把这个虚引用加入到与之关联的引用队列中。</li>
</ul>
<h1 id="垃圾回收算法"><a class="markdownIt-Anchor" href="#垃圾回收算法"></a> 垃圾回收算法</h1>
<h2 id="标记-清除法mark-sweep"><a class="markdownIt-Anchor" href="#标记-清除法mark-sweep"></a> 标记-清除法(Mark-Sweep)</h2>
<blockquote>
<p>先采用标记确定可回收的对象，然后再根据标记清除内容</p>
</blockquote>
<ul>
<li>优点:速度快。</li>
<li>缺点:容易产生大量的内存碎片，无法满足大对象的内存分配。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/mark-sweep.jpg" alt="mark-sweep" /></li>
</ul>
<h2 id="复制算法coping"><a class="markdownIt-Anchor" href="#复制算法coping"></a> 复制算法(Coping)</h2>
<blockquote>
<p>将内存分为等大小的两个区域，每一次只使用一块区域。当进行垃圾回收时，将不被回收的对象复制到另一块内存区域，清扫当前区域</p>
</blockquote>
<ul>
<li>优点:不会产生内存碎片</li>
<li>缺点:占用双倍内存，可用内存减半<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/copying.jpg" alt="copying" /></li>
</ul>
<h2 id="标记-整理法mark-compact"><a class="markdownIt-Anchor" href="#标记-整理法mark-compact"></a> 标记-整理法(Mark-Compact)</h2>
<blockquote>
<p>先进行标记，将不被回收的内存空间进行移动排序。</p>
</blockquote>
<ul>
<li>优点:不会产生内存碎片。</li>
<li>缺点:效率低，要进行内存的移动，且要进行程序内存地址的改变。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/mark-compact.jpg" alt="mark-compact" /></li>
</ul>
<h2 id="分代收集算法generational-collection"><a class="markdownIt-Anchor" href="#分代收集算法generational-collection"></a> 分代收集算法(Generational Collection)</h2>
<blockquote>
<p>将内存分为新生代和老年代<br />
新生代与老年代区域的比为1：2<br />
新生代分为三个区域分别是Eden、S0、S1，他们的比例是8：1：1</p>
</blockquote>
<p>为什么要分代收集呢，这是因为在JVM中使用标记整理法效率较低，而根据分析大多数时候许多对象的存活的时间较少<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/why-generational.gif" alt="" /></p>
<p>JVM虚拟机的堆结构如下图所示<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/jvm-heap.png" alt="jvm heap" /></p>
<ul>
<li>新生代:新分配内存的对象，当年轻代满了会引起minor gc，minor gc发生的比较频繁</li>
<li>STOP THE WORLD EVENT(STW): 所有的minor gc都是STOP THE WORLD EVENT，所有的应用线程都会停止直到操作完成</li>
<li>老年代:老年代存一些长期存活的对象，当老年代需要被垃圾回收的时候会触发major gc事件</li>
<li>永久代: 存放JVM超参数，classes和method等</li>
</ul>
<h3 id="算法流程"><a class="markdownIt-Anchor" href="#算法流程"></a> 算法流程</h3>
<ol>
<li>所有新对象被分配的时候都放入eden区，两个survivor区在开始的时候都为空<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/gc-step1.png" alt="step 1" /></li>
<li>当eden区满的时候触发一次minor gc<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/gc-step2.png" alt="step 2" /></li>
<li>仍然有被引用的对象放入第一个survivor区S0，eden区内无被引用的对象被清空<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/gc-step3.png" alt="step 3" /></li>
<li>下一次minor gc时，eden区做法相同，但是此时仍然有被引用的对象移动到第二个survivor区S1，此外S0内无被引用的对象删除，仍有被引用的对象放到S1区。此时S0和eden区都是空的，S1区中的一些对象有不同的年龄(age)<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/gc-step4.png" alt="step 4" /></li>
<li>下一次minor gc时，重复同样的操作，不过此时互换两个survivor区，被引用的对象移动区域同时增加年龄<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/gc-step5.png" alt="step 5" /></li>
<li>在多次minor gc后，当一个对象的年龄到达阈值(假设是8)，此时将这个对象从年轻代移动到老年代<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/gc-step6.png" alt="step 6" /></li>
<li>minor gc会把一些对象放到老年代的区域<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/gc-step7.png" alt="step 7" /></li>
<li>老年代快满的时候会发起major gc，对老年代进行清理并重组。老年代使用的是标记重组法<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.8/gc-step8.png" alt="step 8" /></li>
</ol>
<h2 id="老年代"><a class="markdownIt-Anchor" href="#老年代"></a> 老年代</h2>
<p>以下几种情况会进入老年代</p>
<h3 id="大对象"><a class="markdownIt-Anchor" href="#大对象"></a> 大对象</h3>
<p>大对象指需要大量连续内存空间的对象，即使eden为空也会进入老年代，这样做主要是为了避免在Eden区及2个Survivor区之间发生大量的内存复制。</p>
<h3 id="长期存活对象"><a class="markdownIt-Anchor" href="#长期存活对象"></a> 长期存活对象</h3>
<p>对象在Eden,Survivor区中每经历一次Minor GC，年龄就增加1岁。当年龄增加到15岁时，这时候就会被转移到老年代。这里的15可以调整。（Marked Word里面有一个字段存储age，为4位）</p>
<h3 id="动态对象年龄"><a class="markdownIt-Anchor" href="#动态对象年龄"></a> 动态对象年龄</h3>
<p>如果Survivor空间中相同年龄所有对象大小的总合大于Survivor空间的一半，年龄大于等于该年龄的对象就可以直接进去老年区，无需等你“成年”。</p>
<h1 id="垃圾回收器"><a class="markdownIt-Anchor" href="#垃圾回收器"></a> 垃圾回收器</h1>
<p>垃圾回收器类型</p>
<ul>
<li>Serial Garbage Collector</li>
<li>Parallel Garbage Collector</li>
<li>CMS Garbage Collector</li>
<li>G1 Garbage Collector</li>
<li>Z Garbage Collector</li>
</ul>
<h2 id="串行垃圾回收器serial-garbage-collector"><a class="markdownIt-Anchor" href="#串行垃圾回收器serial-garbage-collector"></a> 串行垃圾回收器(Serial Garbage Collector)</h2>
<ul>
<li>单线程，采用复制算法。</li>
<li>收集器进行垃圾回收时，必须暂停其他所有的工作线程（STW），并采用单独的的线程进行 GC</li>
<li>适用于单 CPU、并且对应用程序的暂停时间要求不高的情况，所以不太适合当前的生产环境。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -XX:+UseSerialGC -jar Application.java</span><br></pre></td></tr></table></figure>
<h2 id="并行垃圾回收器parallel-garbage-collector"><a class="markdownIt-Anchor" href="#并行垃圾回收器parallel-garbage-collector"></a> 并行垃圾回收器(Parallel Garbage Collector)</h2>
<ul>
<li>多线程</li>
<li>相较于串行垃圾回收器而言性能稍有提升，它也是需要STW</li>
<li>并行垃圾回收器适用于多CPU的服务器、并且能接受短暂的应用暂停的程序。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -XX:+UseParallelGC -jar Application.java</span><br></pre></td></tr></table></figure>
<h2 id="cms收集器"><a class="markdownIt-Anchor" href="#cms收集器"></a> CMS收集器</h2>
<blockquote>
<p>一种以获取最短响应时间为目标的老年代收集器。CMS收集器的内存回收过程是与用户线程一起并发执行的</p>
</blockquote>
<ul>
<li>特点</li>
</ul>
<p>基于标记-清除算法实现。并发收集、低停顿，但是会产生内存碎片</p>
<ul>
<li>应用场景</li>
</ul>
<p>适用于注重服务的响应速度，希望系统停顿时间最短，给用户带来更好的体验等场景下。如web程序、b/s服务。</p>
<ul>
<li>运行过程
<ul>
<li>初始标记：标记GC Roots能直接到的对象。速度很快但是仍存在Stop The World问题</li>
<li>并发标记：进行GC Roots Tracing 的过程，找出存活对象且用户线程可并发执行</li>
<li>重新标记：为了修正并发标记期间因用户程序继续运行而导致标记产生变动的那一部分对象的标记记录。仍然存在Stop The World问题</li>
<li>并发清除：对标记的对象进行清除回收（标记清除算法）</li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># java9标为deprecad java14被完全删除 </span></span><br><span class="line">java -XX:+UseConcMarkSweepGC -jar Application.java</span><br></pre></td></tr></table></figure>
<h2 id="g1收集器garbage-first-garbage-collector"><a class="markdownIt-Anchor" href="#g1收集器garbage-first-garbage-collector"></a> G1收集器(Garbage First Garbage Collector)</h2>
<blockquote>
<p>jdk1.7以后才引入，替代了CMS<br />
G1并没有将内存进行物理划分，它只是将堆内存划分为一个个等大的Region</p>
</blockquote>
<ul>
<li>适用场景
<ul>
<li>同时注重吞吐量和低延迟（响应时间）</li>
<li>超大堆内存（内存大的），会将堆内存划分为多个大小相等的区域（Region），每个区域都可以作为Eden、Survivor、Old、H</li>
<li>区域内部是标记-整理算法，两个区域之间是复制算法</li>
</ul>
</li>
<li>G1 收集器在后台维护了一个优先列表，每次根据允许的收集时间，优先选择回收价值最大的 Region(这也就是它的名字 Garbage-First 的由来)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -XX:+UseG1GC -jar Application.java</span><br></pre></td></tr></table></figure>
<h2 id="z收集器z-garbage-collectors"><a class="markdownIt-Anchor" href="#z收集器z-garbage-collectors"></a> Z收集器(Z Garbage Collectors)</h2>
<p>Z收集器是一个低延时收集器，在java11中作为实验性质引入</p>
<ul>
<li>应用线程停止时间不超过10ms</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># java15以前</span></span><br><span class="line">java -XX:+UnlockExperimentalVMOptions -XX:+UseZGC Application.java</span><br><span class="line"><span class="comment"># java15以后</span></span><br><span class="line">java -XX:+UseZGC Application.java</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p><a href="https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html">Java Garbage Collection Basics</a></p>
<p><a href="https://www.infoq.cn/article/zoyqri4c-bfkmubmzmkn">咱们从头到尾说一次 Java 垃圾回收</a></p>
<p><a href="https://blog.csdn.net/u012988901/article/details/99317272">Java四种引用类型: 强引用、弱引用、软引用、虚引用</a></p>
<p><a href="https://bbs.huaweicloud.com/blogs/296981">万字长文！深入详解Java垃圾回收（GC）机制</a></p>
<p><a href="https://www.baeldung.com/jvm-garbage-collectors">JVM Garbage Collectors</a></p>
]]></content>
      <categories>
        <category>面经</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>面经</tag>
        <tag>gc</tag>
      </tags>
  </entry>
  <entry>
    <title>dubbo尝试</title>
    <url>/2022/11/20/dubbo-starter/</url>
    <content><![CDATA[<blockquote>
<p>封面《golden marriage》</p>
</blockquote>
<h1 id="dubbo"><a class="markdownIt-Anchor" href="#dubbo"></a> dubbo</h1>
<p>Dubbo是阿里开发的一个RPC服务框架，用于解决微服务架构下的服务治理与通信问题。后来捐献给了Apache，现在是Apache Dubbo。</p>
<h1 id="dubbo架构"><a class="markdownIt-Anchor" href="#dubbo架构"></a> dubbo架构</h1>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.4.11/architecture.png" alt="" /></p>
<table>
<thead>
<tr>
<th>节点</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Provider</code></td>
<td>暴露服务的服务提供方</td>
</tr>
<tr>
<td><code>Consumer</code></td>
<td>调用远程服务的服务消费方</td>
</tr>
<tr>
<td><code>Registry</code></td>
<td>服务注册与发现的注册中心</td>
</tr>
<tr>
<td><code>Monitor</code></td>
<td>统计服务的调用次数和调用时间的监控中心</td>
</tr>
<tr>
<td><code>Container</code></td>
<td>服务运行容器</td>
</tr>
</tbody>
</table>
<ol start="0">
<li>服务容器负责启动，加载，运行服务提供者。</li>
<li>服务提供者在启动时，向注册中心注册自己提供的服务。</li>
<li>服务消费者在启动时，向注册中心订阅自己所需的服务。</li>
<li>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。</li>
<li>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</li>
<li>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</li>
</ol>
<h1 id="demo结构"><a class="markdownIt-Anchor" href="#demo结构"></a> demo结构</h1>
<p>在这次demo的结构如下，通过<code>tree</code>命令输出如下。其中<code>dubbo-demo-api</code>是服务提供端和消费端公用的api，<code>dubbo-demo-consumer</code>和<code>dubbo-demo-provider</code>分别是服务的消费端和提供端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">│  .gitignore</span><br><span class="line">│  pom.xml</span><br><span class="line">├─dubbo-demo-api</span><br><span class="line">│  │  pom.xml</span><br><span class="line">│  │</span><br><span class="line">│  └─src</span><br><span class="line">│      └─main</span><br><span class="line">│          └─java</span><br><span class="line">│              └─com</span><br><span class="line">│                  └─qxdn</span><br><span class="line">│                      └─demo</span><br><span class="line">│                          └─dubbo</span><br><span class="line">│                              └─api</span><br><span class="line">│                                      HelloService.java</span><br><span class="line">│</span><br><span class="line">├─dubbo-demo-consumer</span><br><span class="line">│  │  pom.xml</span><br><span class="line">│  │</span><br><span class="line">│  └─src</span><br><span class="line">│      └─main</span><br><span class="line">│          ├─java</span><br><span class="line">│          │  └─com</span><br><span class="line">│          │      └─qxdn</span><br><span class="line">│          │          └─demo</span><br><span class="line">│          │              └─dubbo</span><br><span class="line">│          │                  └─consumer</span><br><span class="line">│          │                          ConsumerApplication.java</span><br><span class="line">│          │</span><br><span class="line">│          └─resources</span><br><span class="line">│                  application.yml</span><br><span class="line">│                  log4j.properties</span><br><span class="line">│</span><br><span class="line">└─dubbo-demo-provider</span><br><span class="line">    │  pom.xml</span><br><span class="line">    │</span><br><span class="line">    └─src</span><br><span class="line">        └─main</span><br><span class="line">            ├─java</span><br><span class="line">            │  └─com</span><br><span class="line">            │      └─qxdn</span><br><span class="line">            │          └─demo</span><br><span class="line">            │              └─dubbo</span><br><span class="line">            │                  └─provider</span><br><span class="line">            │                          EmbeddedZooKeeper.java</span><br><span class="line">            │                          HelloServiceImpl.java</span><br><span class="line">            │                          ProviderApplication.java</span><br><span class="line">            │</span><br><span class="line">            └─resources</span><br><span class="line">                    application.yml</span><br><span class="line">                    log4j.properties</span><br></pre></td></tr></table></figure>
<h1 id="父级pom"><a class="markdownIt-Anchor" href="#父级pom"></a> 父级POM</h1>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qxdn.demo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.3.16.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dubbo.version</span>&gt;</span>3.0.7<span class="tag">&lt;/<span class="name">dubbo.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slf4j-log4j12.version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">slf4j-log4j12.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.7.5<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>dubbo-demo-api<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>dubbo-demo-provider<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>dubbo-demo-consumer<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Spring Boot --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-bom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;dubbo.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-dependencies-zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;dubbo.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j-log4j12.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.24<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h1 id="接口"><a class="markdownIt-Anchor" href="#接口"></a> 接口</h1>
<h2 id="pom"><a class="markdownIt-Anchor" href="#pom"></a> POM</h2>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qxdn.demo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-demo-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">skip_maven_deploy</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skip_maven_deploy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="接口-2"><a class="markdownIt-Anchor" href="#接口-2"></a> 接口</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// HelloService.java</span></span><br><span class="line"><span class="keyword">package</span> com.qxdn.demo.dubbo.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CompletableFuture;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">HelloService</span> &#123;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">sayHello</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span> CompletableFuture&lt;String&gt; <span class="title function_">sayHelloAsync</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> CompletableFuture.completedFuture(sayHello(name));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="服务提供者"><a class="markdownIt-Anchor" href="#服务提供者"></a> 服务提供者</h1>
<h2 id="pom-2"><a class="markdownIt-Anchor" href="#pom-2"></a> POM</h2>
<p>这里使用zookeeper作为注册中心</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qxdn.demo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-demo-provider<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qxdn.demo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-demo-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.parent.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- dubbo --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-dependencies-zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- dubbo starter --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring starter --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2>
<h3 id="applicationyml"><a class="markdownIt-Anchor" href="#applicationyml"></a> application.yml</h3>
<p>服务注册中心选择自己的zookeeper的地址</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">dubbo:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo-demo-provider</span></span><br><span class="line">  <span class="attr">protocol:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">zk-registry</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">zookeeper://127.0.0.1:2181</span></span><br><span class="line">  <span class="attr">config-center:</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">zookeeper://127.0.0.1:2181</span></span><br><span class="line">  <span class="attr">metadata-report:</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">zookeeper://127.0.0.1:2181</span></span><br></pre></td></tr></table></figure>
<h3 id="log4jproperties"><a class="markdownIt-Anchor" href="#log4jproperties"></a> log4j.properties</h3>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">###set log levels###</span></span><br><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">info, stdout</span></span><br><span class="line"><span class="comment">###output to the console###</span></span><br><span class="line"><span class="attr">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.Target</span>=<span class="string">System.out</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout.ConversionPattern</span>=<span class="string">[%d&#123;dd/MM/yy HH:mm:ss:SSS z&#125;] %t %5p %c&#123;2&#125;: %m%n</span></span><br></pre></td></tr></table></figure>
<h2 id="provider"><a class="markdownIt-Anchor" href="#provider"></a> Provider</h2>
<h3 id="impl"><a class="markdownIt-Anchor" href="#impl"></a> Impl</h3>
<p>这里完成RPC服务的实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//HelloServiceImpl.java</span></span><br><span class="line"><span class="keyword">package</span> com.qxdn.demo.dubbo.provider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.qxdn.demo.dubbo.api.HelloService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.DubboService;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.rpc.RpcContext;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@DubboService</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">HelloService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;Hello &quot;</span> + name + <span class="string">&quot;, request from consumer: &quot;</span> + RpcContext.getServiceContext().getRemoteAddressString());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello &quot;</span> + name + <span class="string">&quot;from: &quot;</span>  + RpcContext.getServiceContext().getLocalAddressString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="zookeeper"><a class="markdownIt-Anchor" href="#zookeeper"></a> zookeeper</h3>
<p>zookeeper可以到apache的官网<a href="https://zookeeper.apache.org/releases.html">下载</a></p>
<p>这里我们使用别人的embedzookeeper,源码在<a href="https://github.com/spring-attic/spring-xd/blob/v1.3.1.RELEASE/spring-xd-dirt/src/main/java/org/springframework/xd/dirt/zookeeper/ZooKeeperUtils.java">github</a></p>
<h3 id="application"><a class="markdownIt-Anchor" href="#application"></a> Application</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qxdn.demo.dubbo.provider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.spring.context.annotation.EnableDubbo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDubbo</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProviderApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">EmbeddedZooKeeper</span>(<span class="number">2181</span>, <span class="literal">false</span>).start();</span><br><span class="line"></span><br><span class="line">        SpringApplication.run(ProviderApplication.class, args);</span><br><span class="line">        log.info(<span class="string">&quot;dubbo service started&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="服务消费者"><a class="markdownIt-Anchor" href="#服务消费者"></a> 服务消费者</h1>
<h2 id="pom-3"><a class="markdownIt-Anchor" href="#pom-3"></a> POM</h2>
<p>这里使用zookeeper作为注册中心</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qxdn.demo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-demo-consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qxdn.demo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-demo-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.parent.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- dubbo --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-dependencies-zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- dubbo starter --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring starter --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="配置-2"><a class="markdownIt-Anchor" href="#配置-2"></a> 配置</h2>
<h3 id="applicationyml-2"><a class="markdownIt-Anchor" href="#applicationyml-2"></a> application.yml</h3>
<p>服务注册中心选择自己的zookeeper的地址</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">dubbo:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo-springboot-demo-consumer</span></span><br><span class="line">  <span class="attr">protocol:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">zk-registry</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">zookeeper://127.0.0.1:2181</span></span><br><span class="line">  <span class="attr">config-center:</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">zookeeper://127.0.0.1:2181</span></span><br><span class="line">  <span class="attr">metadata-report:</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">zookeeper://127.0.0.1:2181</span></span><br></pre></td></tr></table></figure>
<h3 id="log4jproperties-2"><a class="markdownIt-Anchor" href="#log4jproperties-2"></a> log4j.properties</h3>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">###set log levels###</span></span><br><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">info, stdout</span></span><br><span class="line"><span class="comment">###output to the console###</span></span><br><span class="line"><span class="attr">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.Target</span>=<span class="string">System.out</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout.ConversionPattern</span>=<span class="string">[%d&#123;dd/MM/yy HH:mm:ss:SSS z&#125;] %t %5p %c&#123;2&#125;: %m%n</span></span><br></pre></td></tr></table></figure>
<h2 id="consumer"><a class="markdownIt-Anchor" href="#consumer"></a> Consumer</h2>
<p><code>@DubboReference</code>中的<code>loadbalance</code>是负载均很的方案，这里选择随机，此外注解也可以使用<code>version</code>进行服务的过滤</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qxdn.demo.dubbo.consumer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.qxdn.demo.dubbo.api.HelloService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.common.constants.LoadbalanceRules;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.DubboReference;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.spring.context.annotation.EnableDubbo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@EnableDubbo</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConsumerApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DubboReference(loadbalance = LoadbalanceRules.RANDOM)</span></span><br><span class="line">    <span class="keyword">private</span> HelloService helloService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">ConfigurableApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> SpringApplication.run(ConsumerApplication.class, args);</span><br><span class="line">        <span class="type">ConsumerApplication</span> <span class="variable">application</span> <span class="operator">=</span> context.getBean(ConsumerApplication.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> application.doSayHello(<span class="string">&quot;java&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;result: &quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">doSayHello</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helloService.sayHello(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h1>
<h2 id="服务提供者的输出"><a class="markdownIt-Anchor" href="#服务提供者的输出"></a> 服务提供者的输出</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">[20/11/22 03:22:54:208 CST] NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181  INFO server.NIOServerCnxnFactory: Accepted socket connection from /127.0.0.1:51634</span><br><span class="line">[20/11/22 03:22:54:208 CST] NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181  INFO server.ZooKeeperServer: Client attempting to establish new session at /127.0.0.1:51634</span><br><span class="line">[20/11/22 03:22:54:209 CST] SyncThread:0  INFO server.ZooKeeperServer: Established session 0x1000cab1b92000a with negotiated timeout 60000 for client /127.0.0.1:51634</span><br><span class="line">[20/11/22 03:22:54:352 CST] NettyServerWorker-3-9  INFO netty4.NettyServerHandler:  [DUBBO] The connection of /192.168.31.35:51635 -&gt; /192.168.31.35:20880 is established., dubbo version: 3.0.7, current host: 192.168.31.35</span><br><span class="line">[20/11/22 03:22:54:455 CST] NettyServerWorker-3-9  INFO netty4.NettyServerHandler:  [DUBBO] The connection of /192.168.31.35:51635 -&gt; /192.168.31.35:20880 is disconnected., dubbo version: 3.0.7, current host: 192.168.31.35</span><br><span class="line">[20/11/22 03:22:54:493 CST] ProcessThread(sid:0 cport:2181):  INFO server.PrepRequestProcessor: Got user-level KeeperException when processing sessionid:0x1000cab1b92000a type:create cxid:0x3 zxid:0x4e txntype:-1 reqpath:n/a Error Path:/services/dubbo-demo-provider Error:KeeperErrorCode = NodeExists for /services/dubbo-demo-provider</span><br><span class="line">[20/11/22 03:22:55:081 CST] DubboServerHandler-192.168.31.35:20880-thread-25  INFO provider.HelloServiceImpl: Hello java, request from consumer: 192.168.31.35:51631</span><br><span class="line">[20/11/22 03:37:05:560 CST] Dubbo-framework-cache-refreshing-scheduler-thread-1  INFO metadata.AbstractCacheManager$CacheRefreshTask:  [DUBBO] Dumping mapping caches, latest entries 0, dubbo version: 3.0.7, current host: 192.168.31.35</span><br></pre></td></tr></table></figure>
<h2 id="服务消费者的输出"><a class="markdownIt-Anchor" href="#服务消费者的输出"></a> 服务消费者的输出</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">2 03:22:54:588 CST] main  INFO metadata.MetadataInfo:  [DUBBO] metadata revision changed: null -&gt; 0ef9521ed22939bb2e1da2ea8012f84d, app: dubbo-springboot-demo-consumer, services: 1, dubbo version: 3.0.7, current host: 192.168.31.35</span><br><span class="line">[20/11/22 03:22:55:063 CST] main  INFO deploy.DefaultApplicationDeployer:  [DUBBO] Dubbo Application[1.1](dubbo-springboot-demo-consumer) is ready., dubbo version: 3.0.7, current host: 192.168.31.35</span><br><span class="line">[20/11/22 03:22:55:068 CST] main  INFO consumer.ConsumerApplication: Started ConsumerApplication in 3.234 seconds (JVM running for 4.244)</span><br><span class="line">[20/11/22 03:22:55:071 CST] pool-1-thread-1  INFO event.AwaitingNonWebApplicationListener:  [Dubbo] Current Spring Boot Application is await...</span><br><span class="line">[20/11/22 03:22:55:084 CST] main  INFO consumer.ConsumerApplication: result: Hello javafrom: 192.168.31.35:20880</span><br><span class="line">[20/11/22 03:32:53:388 CST] Dubbo-framework-cache-refreshing-scheduler-thread-1  INFO metadata.AbstractCacheManager$CacheRefreshTask:  [DUBBO] Dumping mapping caches, latest entries 1, dubbo version: 3.0.7, current host: 192.168.31.35</span><br><span class="line">[20/11/22 03:32:54:201 CST] Dubbo-framework-cache-refreshing-scheduler-thread-1  INFO metadata.AbstractCacheManager$CacheRefreshTask:  [DUBBO] Dumping meta caches, latest entries 1, dubbo version: 3.0.7, current host: 192.168.31.35</span><br></pre></td></tr></table></figure>
<p>可以看到两边都有调用结果的输出</p>
<h1 id="可能的问题"><a class="markdownIt-Anchor" href="#可能的问题"></a> 可能的问题</h1>
<h2 id="dependencymanagement"><a class="markdownIt-Anchor" href="#dependencymanagement"></a> <dependencyManagement/></h2>
<p>启动程序时候出现问题如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: org/springframework/core/metrics/ApplicationStartup</span><br><span class="line">	at org.springframework.boot.SpringApplication.&lt;init&gt;(SpringApplication.java:251)</span><br><span class="line">	at org.springframework.boot.SpringApplication.&lt;init&gt;(SpringApplication.java:264)</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1311)</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)</span><br><span class="line">	at com.example.simple.dubbo_demo_provider.ProviderApplication.main(ProviderApplication.java:10)</span><br><span class="line">Caused by: java.lang.ClassNotFoundException: org.springframework.core.metrics.ApplicationStartup</span><br><span class="line">	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)</span><br><span class="line">	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span><br><span class="line">	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)</span><br><span class="line">	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span><br><span class="line">	... 5 more</span><br></pre></td></tr></table></figure>
<p>经过查找<a href="https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/maven_dependencymanagement%E5%A4%9A%E6%A8%A1%E5%9D%97%E8%A6%86%E7%9B%96%E9%97%AE%E9%A2%98/">资料</a>发现是因为父POM的<code>parent</code>里是<code>spring-boot-parent</code>而且还自定义了<code>&lt;dependencyManagement/&gt;</code>使得子模块里找不到对应的依赖module。</p>
<p>解决方法就是在原先的父POM<code>&lt;dependencyManagement/&gt;</code>里面加上</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="slf4j-class-path-contains-multiple-slf4j-bindings"><a class="markdownIt-Anchor" href="#slf4j-class-path-contains-multiple-slf4j-bindings"></a> SLF4J: Class path contains multiple SLF4J bindings</h2>
<p>SLF4J绑定多个实现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding in [jar:file:/C:/Users/qianx/.m2/repository/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: Found binding in [jar:file:/C:/Users/qianx/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.</span><br><span class="line">SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]</span><br></pre></td></tr></table></figure>
<p>这是因为项目中SLF4J有多种实现，可以通过下面的命令或者IDE的依赖分析来找到，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn dependency:tree</span><br></pre></td></tr></table></figure>
<p>结果如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># result</span><br><span class="line">[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ dubbo-demo-provider ---</span><br><span class="line">[INFO] com.qxdn.demo:dubbo-demo-provider:jar:0.0.1-SNAPSHOT</span><br><span class="line">[INFO] +- com.qxdn.demo:dubbo-demo-api:jar:0.0.1-SNAPSHOT:compile</span><br><span class="line">[INFO] +- org.apache.dubbo:dubbo:jar:3.0.7:compile</span><br><span class="line">[INFO] |  +- org.springframework:spring-context:jar:5.3.23:compile</span><br><span class="line">[INFO] |  |  +- org.springframework:spring-aop:jar:5.3.23:compile</span><br><span class="line">[INFO] |  |  +- org.springframework:spring-beans:jar:5.3.23:compile</span><br><span class="line">[INFO] |  |  \- org.springframework:spring-expression:jar:5.3.23:compile</span><br><span class="line">[INFO] |  +- com.alibaba.spring:spring-context-support:jar:1.0.8:compile</span><br><span class="line">[INFO] |  +- org.javassist:javassist:jar:3.28.0-GA:compile</span><br><span class="line">[INFO] |  +- io.netty:netty-all:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-buffer:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec-dns:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec-haproxy:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec-http:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec-http2:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec-memcache:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec-mqtt:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec-redis:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec-smtp:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec-socks:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec-stomp:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-codec-xml:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-common:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-handler:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-transport-native-unix-common:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-handler-proxy:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-resolver:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-resolver-dns:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-transport:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-transport-rxtx:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-transport-sctp:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-transport-udt:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-transport-classes-epoll:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-transport-classes-kqueue:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-resolver-dns-classes-macos:jar:4.1.84.Final:compile</span><br><span class="line">[INFO] |  |  +- io.netty:netty-transport-native-epoll:jar:linux-x86_64:4.1.84.Final:runtime</span><br><span class="line">[INFO] |  |  +- io.netty:netty-transport-native-epoll:jar:linux-aarch_64:4.1.84.Final:runtime</span><br><span class="line">[INFO] |  |  +- io.netty:netty-transport-native-kqueue:jar:osx-x86_64:4.1.84.Final:runtime</span><br><span class="line">[INFO] |  |  +- io.netty:netty-transport-native-kqueue:jar:osx-aarch_64:4.1.84.Final:runtime</span><br><span class="line">[INFO] |  |  +- io.netty:netty-resolver-dns-native-macos:jar:osx-x86_64:4.1.84.Final:runtime</span><br><span class="line">[INFO] |  |  \- io.netty:netty-resolver-dns-native-macos:jar:osx-aarch_64:4.1.84.Final:runtime</span><br><span class="line">[INFO] |  +- com.google.code.gson:gson:jar:2.9.1:compile</span><br><span class="line">[INFO] |  +- org.yaml:snakeyaml:jar:1.30:compile</span><br><span class="line">[INFO] |  \- com.alibaba:fastjson:jar:1.2.70:compile</span><br><span class="line">[INFO] +- org.apache.dubbo:dubbo-dependencies-zookeeper:pom:3.0.7:compile</span><br><span class="line">[INFO] |  +- org.apache.curator:curator-x-discovery:jar:4.2.0:compile</span><br><span class="line">[INFO] |  |  +- org.apache.curator:curator-recipes:jar:4.2.0:compile</span><br><span class="line">[INFO] |  |  |  \- org.apache.curator:curator-framework:jar:4.2.0:compile</span><br><span class="line">[INFO] |  |  |     \- org.apache.curator:curator-client:jar:4.2.0:compile</span><br><span class="line">[INFO] |  |  |        \- com.google.guava:guava:jar:27.0.1-jre:compile</span><br><span class="line">[INFO] |  |  |           +- com.google.guava:failureaccess:jar:1.0.1:compile</span><br><span class="line">[INFO] |  |  |           +- com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava:compile</span><br><span class="line">[INFO] |  |  |           +- org.checkerframework:checker-qual:jar:2.5.2:compile</span><br><span class="line">[INFO] |  |  |           +- com.google.errorprone:error_prone_annotations:jar:2.2.0:compile</span><br><span class="line">[INFO] |  |  |           +- com.google.j2objc:j2objc-annotations:jar:1.1:compile</span><br><span class="line">[INFO] |  |  |           \- org.codehaus.mojo:animal-sniffer-annotations:jar:1.17:compile</span><br><span class="line">[INFO] |  |  \- com.fasterxml.jackson.core:jackson-databind:jar:2.13.4.2:compile</span><br><span class="line">[INFO] |  |     +- com.fasterxml.jackson.core:jackson-annotations:jar:2.13.4:compile</span><br><span class="line">[INFO] |  |     \- com.fasterxml.jackson.core:jackson-core:jar:2.13.4:compile</span><br><span class="line">[INFO] |  \- org.apache.zookeeper:zookeeper:jar:3.4.14:compile</span><br><span class="line">[INFO] |     +- com.github.spotbugs:spotbugs-annotations:jar:3.1.9:compile</span><br><span class="line">[INFO] |     |  \- com.google.code.findbugs:jsr305:jar:3.0.2:compile</span><br><span class="line">[INFO] |     +- jline:jline:jar:0.9.94:compile</span><br><span class="line">[INFO] |     \- org.apache.yetus:audience-annotations:jar:0.5.0:compile</span><br><span class="line">[INFO] +- org.apache.dubbo:dubbo-spring-boot-starter:jar:3.0.7:compile</span><br><span class="line">[INFO] |  \- org.apache.dubbo:dubbo-spring-boot-autoconfigure:jar:3.0.7:compile</span><br><span class="line">[INFO] |     \- org.apache.dubbo:dubbo-spring-boot-autoconfigure-compatible:jar:3.0.7:compile</span><br><span class="line">[INFO] +- org.springframework.boot:spring-boot-starter:jar:2.7.5:compile</span><br><span class="line">[INFO] |  +- org.springframework.boot:spring-boot:jar:2.7.5:compile</span><br><span class="line">[INFO] |  +- org.springframework.boot:spring-boot-starter-logging:jar:2.7.5:compile</span><br><span class="line">[INFO] |  |  +- ch.qos.logback:logback-classic:jar:1.2.11:compile</span><br><span class="line">[INFO] |  |  |  \- ch.qos.logback:logback-core:jar:1.2.11:compile</span><br><span class="line">[INFO] |  |  +- org.apache.logging.log4j:log4j-to-slf4j:jar:2.17.2:compile</span><br><span class="line">[INFO] |  |  |  \- org.apache.logging.log4j:log4j-api:jar:2.17.2:compile</span><br><span class="line">[INFO] |  |  \- org.slf4j:jul-to-slf4j:jar:1.7.36:compile</span><br><span class="line">[INFO] |  +- jakarta.annotation:jakarta.annotation-api:jar:1.3.5:compile</span><br><span class="line">[INFO] |  \- org.springframework:spring-core:jar:5.3.23:compile</span><br><span class="line">[INFO] |     \- org.springframework:spring-jcl:jar:5.3.23:compile</span><br><span class="line">[INFO] +- org.springframework.boot:spring-boot-autoconfigure:jar:2.7.5:compile</span><br><span class="line">[INFO] +- org.slf4j:slf4j-api:jar:1.7.36:compile</span><br><span class="line">[INFO] +- org.slf4j:slf4j-log4j12:jar:1.7.25:compile</span><br><span class="line">[INFO] +- log4j:log4j:jar:1.2.17:compile</span><br><span class="line">[INFO] \- org.projectlombok:lombok:jar:1.18.24:provided</span><br><span class="line">[INFO]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>找到依赖后修改</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="failed-to-execute-goal-on-project-xxx"><a class="markdownIt-Anchor" href="#failed-to-execute-goal-on-project-xxx"></a> Failed to execute goal on project xxx</h2>
<p>执行<code>mvn dependency:tree</code>的时候错误如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Failed to execute goal on project dubbo-demo-provider: Could not resolve dependencies for project com.qxdn.demo:dubbo-demo-provider:jar:0.0.1-SNAPSHOT: Could not find artifact com.qxdn.demo:dubbo-demo-api:jar:0.0.1-SNAPSHOT</span><br></pre></td></tr></table></figure>
<p>运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn clean install</span><br></pre></td></tr></table></figure>
<h1 id="完整代码"><a class="markdownIt-Anchor" href="#完整代码"></a> 完整代码</h1>
<p>完整代码地址在<a href="https://github.com/qxdn/dubbo-demo">github</a></p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://dubbo.apache.org/zh/">dubbo文档</a></p>
<p><a href="https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/maven_dependencymanagement%E5%A4%9A%E6%A8%A1%E5%9D%97%E8%A6%86%E7%9B%96%E9%97%AE%E9%A2%98/">Maven_dependencyManagement多模块覆盖问题</a></p>
<p><a href="https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html">Introduction to the Dependency Mechanism</a></p>
<p><a href="https://github.com/apache/dubbo/issues/6316">quick start fails</a></p>
<p><a href="https://stackoverflow.com/questions/33071002/spring-boot-multiple-slf4j-bindings">Spring Boot: multiple SLF4J bindings</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>dubbo</tag>
        <tag>rpc</tag>
      </tags>
  </entry>
  <entry>
    <title>java-volatile</title>
    <url>/2022/12/05/java-volatile/</url>
    <content><![CDATA[<blockquote>
<p>封面《千の刃濤、桃花染の皇姫》</p>
</blockquote>
<blockquote>
<p>在同步执行不重要的时候，编译器、运行时刻和处理器会进行一些优化，虽然这些优化通常是有益的，但是有时候会有一些微妙的问题<br />
缓存和指令重排是并发中容易出问题的优化，在Java和JVM中提供了许多方法来控制内存顺序，volatile关键字便是其中之一</p>
</blockquote>
<h1 id="多处理器结构"><a class="markdownIt-Anchor" href="#多处理器结构"></a> 多处理器结构</h1>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.0/cpu.png" alt="" /></p>
<p>计算机执行程序的时候每条指令都是在CPU中执行的，而执行指令过程中，势必涉及到数据的读取和写入。由于程序运行过程中的临时数据是存放在主存（物理内存）当中的，这时就存在一个问题，由于CPU执行速度很快，而从内存读取数据和向内存写入数据的过程跟CPU执行指令的速度比起来要慢的多，因此如果任何时候对数据的操作都要通过和内存的交互来进行，会大大降低指令执行的速度。因此在CPU里面就有了高速缓存。</p>
<p>当程序在运行过程中，会将运算需要的数据从主存复制一份到CPU的高速缓存当中，那么CPU进行计算时就可以直接从它的高速缓存读取数据和向其中写入数据，当运算结束之后，再将高速缓存中的数据刷新到主存当中。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SharedObj</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// Changes made to sharedVar in one thread</span></span><br><span class="line">   <span class="comment">// may not immediately reflect in other thread</span></span><br><span class="line">   <span class="keyword">static</span> <span class="type">int</span> <span class="variable">sharedVar</span> <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>举个例子，假设有两个线程使用<code>SharedObj</code>，如果两个线程运行在两个不同的处理器上（如下图所示），那么每个线程有一份本地的<code>sharedVariable</code>缓存。如果其中一个线程改变其变量，可能不会马上反映到主线程中，另一个线程不会注意到数据改变了，导致了数据的不一致。关于缓存一致性可以读<a href="https://en.wikipedia.org/wiki/Cache_coherence">这篇</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.0/shared-memory.png" alt="" /></p>
<h1 id="volatile作用"><a class="markdownIt-Anchor" href="#volatile作用"></a> volatile作用</h1>
<h2 id="内存可见性"><a class="markdownIt-Anchor" href="#内存可见性"></a> 内存可见性</h2>
<p>可见性问题主要指一个线程修改了共享变量值，而另一个线程却看不到。引起可见性问题的主要原因是每个线程拥有自己的一个高速缓存区——线程工作内存。volatile关键字能有效的解决这个问题。</p>
<p>让我们来看下面这个例子</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> num;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">readerThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (temp != num) &#123;</span><br><span class="line">                    temp = num;</span><br><span class="line">                    System.out.println(<span class="string">&quot;reader: value of num = &quot;</span> + num);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">writerThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                num++;</span><br><span class="line">                System.out.println(<span class="string">&quot;writer: changed value to = &quot;</span> + num);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 退出程序，否则readerThread会一直等</span></span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        readerThread.start();</span><br><span class="line">        writerThread.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reader: value of num = 1</span><br><span class="line">writer: changed value to = 1</span><br><span class="line">writer: changed value to = 2</span><br><span class="line">writer: changed value to = 3</span><br><span class="line">writer: changed value to = 4</span><br><span class="line">writer: changed value to = 5</span><br></pre></td></tr></table></figure>
<p>没加volatile的时候reader只读到0-1的变化。</p>
<p>接下来修改代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">volatile</span> <span class="keyword">static</span> <span class="type">int</span> num;</span><br></pre></td></tr></table></figure>
<p>输出如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">writer: changed value to = 1</span><br><span class="line">reader: value of num = 1</span><br><span class="line">writer: changed value to = 2</span><br><span class="line">reader: value of num = 2</span><br><span class="line">writer: changed value to = 3</span><br><span class="line">reader: value of num = 3</span><br><span class="line">writer: changed value to = 4</span><br><span class="line">reader: value of num = 4</span><br><span class="line">writer: changed value to = 5</span><br><span class="line">reader: value of num = 5</span><br></pre></td></tr></table></figure>
<p>可以看到输出reader可以读到num的变化，volatile指示编译器，这个变量是共享的且不稳定，每次要到主程序中读取。</p>
<h2 id="禁止指令重排"><a class="markdownIt-Anchor" href="#禁止指令重排"></a> 禁止指令重排</h2>
<p>一般来说，处理器为了提高程序运行效率，可能会对输入代码进行优化，它不保证程序中各个语句的执行先后顺序同代码中的顺序一致，但是它会保证程序最终执行结果和代码顺序执行的结果是一致的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;    <span class="comment">//语句1</span></span><br><span class="line"><span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> <span class="number">2</span>;    <span class="comment">//语句2</span></span><br><span class="line">a = a + <span class="number">3</span>;    <span class="comment">//语句3</span></span><br><span class="line">r = a*a;     <span class="comment">//语句4</span></span><br></pre></td></tr></table></figure>
<p>这段代码有4个语句，那么可能的一个执行顺序是：<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.0/reorder.jpg" alt="" /><br />
但是执行顺序不可能是:语句2-语句1-语句4-语句3。因为处理器在进行重排序时是会考虑指令之间的数据依赖性，如果一个指令Instruction 2必须用到Instruction 1的结果，那么处理器会保证Instruction 1会在Instruction 2之前执行。</p>
<p>虽然重排不影响单线程内程序执行结果，但是多线程中会有影响</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//线程1:</span></span><br><span class="line">context = loadContext();   <span class="comment">//语句1</span></span><br><span class="line">inited = <span class="literal">true</span>;             <span class="comment">//语句2</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//线程2:</span></span><br><span class="line"><span class="keyword">while</span>(!inited )&#123;</span><br><span class="line">  sleep()</span><br><span class="line">&#125;</span><br><span class="line">doSomethingwithconfig(context);</span><br></pre></td></tr></table></figure>
<p>上面代码中，由于语句1和语句2没有数据依赖性，因此可能会被重排序。假如发生了重排序，在线程1执行过程中先执行语句2，而此是线程2会以为初始化工作已经完成，那么就会跳出while循环，去执行doSomethingwithconfig(context)方法，而此时context并没有被初始化，就会导致程序出错。</p>
<blockquote>
<p>在Java中，volatile关键字除了可以保证变量的可见性，还有一个重要的作用就是防止JVM的指令重排序。如果我们将变量声明为volatile，在对这个变量进行读写操作的时候，会通过插入特定的内存屏障的方式来禁止指令重排序。</p>
</blockquote>
<h1 id="volatile不保证原子性"><a class="markdownIt-Anchor" href="#volatile不保证原子性"></a> volatile不保证原子性</h1>
<p>volatile关键字保证变量的可见性，但是不保证对变量操作是原子性。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">volatile</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">threadPool</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            threadPool.execute(()-&gt;&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">500</span>;j++)&#123;</span><br><span class="line">                    num++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 等5秒保证执行完上面代码</span></span><br><span class="line">        Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        System.out.println(num);</span><br><span class="line">        threadPool.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以上代码按照预期应该是输出2500，然而实际的输出结果不一定是2500，比如2136。<br />
这是因为<code>num++</code>不是原子性的，其包含三步</p>
<ul>
<li>读取num的值。</li>
<li>对num加1。</li>
<li>将num的值写回内存。</li>
</ul>
<p>改进也很简单，使用<code>synchronized</code>、<code>Lock</code>或者<code>JUC</code>即可。</p>
<h2 id="synchronized"><a class="markdownIt-Anchor" href="#synchronized"></a> synchronized</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">volatile</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">increase</span><span class="params">()</span>&#123;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">threadPool</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">5</span>);</span><br><span class="line">        <span class="type">Demo</span> <span class="variable">demo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            threadPool.execute(()-&gt;&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">500</span>;j++)&#123;</span><br><span class="line">                    demo.increase();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 等5秒保证执行完上面代码</span></span><br><span class="line">        Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        System.out.println(num);</span><br><span class="line">        threadPool.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="juc"><a class="markdownIt-Anchor" href="#juc"></a> JUC</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">AtomicInteger</span> <span class="variable">num</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">increase</span><span class="params">()</span>&#123;</span><br><span class="line">        num.getAndIncrement();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">threadPool</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">5</span>);</span><br><span class="line">        <span class="type">Demo</span> <span class="variable">demo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            threadPool.execute(()-&gt;&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">500</span>;j++)&#123;</span><br><span class="line">                    demo.increase();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 等5秒保证执行完上面代码</span></span><br><span class="line">        Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        System.out.println(num);</span><br><span class="line">        threadPool.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="lock"><a class="markdownIt-Anchor" href="#lock"></a> Lock</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">Lock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">increase</span><span class="params">()</span>&#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        num++;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">threadPool</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">5</span>);</span><br><span class="line">        <span class="type">Demo</span> <span class="variable">demo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            threadPool.execute(()-&gt;&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">500</span>;j++)&#123;</span><br><span class="line">                    demo.increase();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 等5秒保证执行完上面代码</span></span><br><span class="line">        Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        System.out.println(num);</span><br><span class="line">        threadPool.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="java和cc中volatile的区别"><a class="markdownIt-Anchor" href="#java和cc中volatile的区别"></a> Java和C/C++中volatile的区别</h1>
<p>Java和C/C++中的volatile关键字不一样，在java中volatile告诉编译器变量不能缓存该值，需要到主存中去读取</p>
<p>C/C++中，开发嵌入式设备需要volatile，需要读取和写入内存映射的硬件设备，其值可能随时变化，所以用volatile告诉编译器不要将其优化。</p>
<h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1>
<p><a href="https://www.baeldung.com/java-volatile">Guide to the Volatile Keyword in Java</a></p>
<p><a href="https://www.cnblogs.com/dolphin0520/p/3920373.html">Java并发编程：volatile关键字解析</a></p>
<p><a href="https://www.geeksforgeeks.org/volatile-keyword-in-java/">volatile Keyword in Java</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>并发</tag>
      </tags>
  </entry>
  <entry>
    <title>python实现依赖注入</title>
    <url>/2022/12/15/python-dependency-injection/</url>
    <content><![CDATA[<blockquote>
<p>封面《彼女は高天に祈らない -quantum girlfriend-》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>因为在写<code>nonebot</code>插件的时候觉得<code>nonebot</code>的依赖注入非常的神奇，就读了一下源码，发现其实原理很简单，但是与Java的Spring框架相比还是不太一样，因此就写一下笔记并自己实现一下核心代码。</p>
<h1 id="nonebot中的依赖注入"><a class="markdownIt-Anchor" href="#nonebot中的依赖注入"></a> nonebot中的依赖注入</h1>
<p>在<code>nonebot2</code>中我们对于一个插件部分的响应函数一般这样写</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@repeat_matcher.handle(<span class="params">[Cooldown(<span class="params"><span class="number">2</span></span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">repeat_message</span>(<span class="params">bot:Bot,event:GroupMessageEvent</span>):</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>
<p>在运行过程中，<code>nonebot2</code>框架在收到消息时会根据事件参数生成<code>Event</code>，收到消息的机器人id生成<code>Bot</code>参数，然后按照优先级遍历<code>matcher</code>执行函数。此时会将<code>Bot</code>、<code>Event</code>等参数注入到我们自己定义的函数中，除了框架自己定义的依赖以外还有<code>Depends</code>函数来包装用户自己定义的依赖。</p>
<p>今天主要讲的是<code>nonebot2</code>是怎么实现这个依赖注入了</p>
<h1 id="nonebot流程"><a class="markdownIt-Anchor" href="#nonebot流程"></a> nonebot流程</h1>
<p><code>nonebot2</code>框架流程如下所示</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.1/handle-event.png" alt="流程图" /></p>
<p>下面以<code>fastapi</code>作为驱动器和<code>onebotV11</code>作为适配器来具体讲一下具体的依赖注入流程，此处只考虑依赖注入相关内容，不探讨参数校=校验、<code>Rule</code>、<code>Permission</code>等</p>
<p>初始化的模板首先是执行<code>nonebot.init()</code>，这里初始化<code>driver</code>，默认的<code>driver</code>是<code>fastapi</code>，然后给<code>driver</code>注册<code>adapter</code>。<code>adapter</code>中通过<code>_setup(self)</code>方法来注册<code>http</code>、<code>websocket</code>的响应函数。</p>
<p>事件的响应函数流程主要如下,此处省去了一些参数检查、token检查、Bot和Event参数生成、Rule检查、权限检查还有一些前处理后处理的hook函数</p>
<blockquote>
<p><code>adapter._handle_ws(self, websocket: WebSocket)</code> -&gt; <code>bot.handle_event(event)</code> -&gt; <code>message.handle_event(bot,event)</code> -&gt; <code>message._check_matcher(priority, matcher, bot, event, stack, dependency_cache)</code> -&gt; <code>message._run_matcher(Matcher, bot, event, state, stack, dependency_cache)</code> -&gt; <code>matcher.run(bot, event, state, stack, dependency_cache)</code> -&gt; <code>matcher.simple_run(bot, event, state, stack, dependency_cache)</code> -&gt; <code>Dependent.__call__(matcher,bot,event,state,stack,dependency_cache)</code></p>
</blockquote>
<p>因此可以看到抛开许多参数的预处理，nonebot解决依赖注入的核心代码在<code>Dependent</code>的<code>__call__</code>函数中</p>
<blockquote>
<p>需要注意的是在<code>message._check_matcher(priority, matcher, bot, event, stack, dependency_cache)</code>这一步中已经将全部预先定义好的参数传入函数，这里不包含用户定义的Depends，用户定义的Depends要到Dependent.solve时解决</p>
</blockquote>
<h1 id="nonebot依赖注入核心"><a class="markdownIt-Anchor" href="#nonebot依赖注入核心"></a> nonebot依赖注入核心</h1>
<h2 id="依赖注入容器"><a class="markdownIt-Anchor" href="#依赖注入容器"></a> 依赖注入容器</h2>
<p><code>nonebot2</code>的依赖注入容器是<code>Dependent</code>类，先来看其中的核心函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dependent</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse_param</span>(<span class="params">self, name: <span class="built_in">str</span>, param: inspect.Parameter</span>) -&gt; Param:</span><br><span class="line">        <span class="keyword">for</span> allow_type <span class="keyword">in</span> self.allow_types:</span><br><span class="line">            field_info = allow_type._check_param(self, name, param)</span><br><span class="line">            <span class="keyword">if</span> field_info:</span><br><span class="line">                <span class="keyword">return</span> field_info</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(</span><br><span class="line">                <span class="string">f&quot;Unknown parameter <span class="subst">&#123;name&#125;</span> for function <span class="subst">&#123;self.call&#125;</span> with type <span class="subst">&#123;param.annotation&#125;</span>&quot;</span></span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params"></span></span><br><span class="line"><span class="params">        cls: <span class="type">Type</span>[T],</span></span><br><span class="line"><span class="params">        *,</span></span><br><span class="line"><span class="params">        call: <span class="type">Callable</span>[..., <span class="type">Any</span>],</span></span><br><span class="line"><span class="params">        parameterless: <span class="type">Optional</span>[<span class="type">List</span>[<span class="type">Any</span>]] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">        allow_types: <span class="type">Optional</span>[<span class="type">List</span>[<span class="type">Type</span>[Param]]] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">    </span>) -&gt; T:</span><br><span class="line">        signature = get_typed_signature(call)</span><br><span class="line">        params = signature.parameters</span><br><span class="line">        dependent = cls(</span><br><span class="line">            call=call,</span><br><span class="line">            allow_types=allow_types,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> param_name, param <span class="keyword">in</span> params.items():</span><br><span class="line">            default_value = Required</span><br><span class="line">            <span class="keyword">if</span> param.default != param.empty:</span><br><span class="line">                default_value = param.default</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(default_value, Param):</span><br><span class="line">                field_info = default_value</span><br><span class="line">                default_value = field_info.default</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                field_info = dependent.parse_param(param_name, param)</span><br><span class="line">                default_value = field_info.default</span><br><span class="line"></span><br><span class="line">            annotation: <span class="type">Any</span> = <span class="type">Any</span></span><br><span class="line">            required = default_value == Required</span><br><span class="line">            <span class="keyword">if</span> param.annotation != param.empty:</span><br><span class="line">                annotation = param.annotation</span><br><span class="line">            annotation = get_annotation_from_field_info(</span><br><span class="line">                annotation, field_info, param_name</span><br><span class="line">            )</span><br><span class="line">            dependent.params.append(</span><br><span class="line">                ModelField(</span><br><span class="line">                    name=param_name,</span><br><span class="line">                    type_=annotation,</span><br><span class="line">                    class_validators=<span class="literal">None</span>,</span><br><span class="line">                    model_config=CustomConfig,</span><br><span class="line">                    default=<span class="literal">None</span> <span class="keyword">if</span> required <span class="keyword">else</span> default_value,</span><br><span class="line">                    required=required,</span><br><span class="line">                    field_info=field_info,</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">        parameterless_params = [</span><br><span class="line">            dependent.parse_parameterless(param) <span class="keyword">for</span> param <span class="keyword">in</span> (parameterless <span class="keyword">or</span> [])</span><br><span class="line">        ]</span><br><span class="line">        dependent.parameterless.extend(parameterless_params)</span><br><span class="line"></span><br><span class="line">        logger.trace(</span><br><span class="line">            <span class="string">f&quot;Parsed dependent with call=<span class="subst">&#123;call&#125;</span>, &quot;</span></span><br><span class="line">            <span class="string">f&quot;params=<span class="subst">&#123;[param.field_info <span class="keyword">for</span> param <span class="keyword">in</span> dependent.params]&#125;</span>, &quot;</span></span><br><span class="line">            <span class="string">f&quot;parameterless=<span class="subst">&#123;dependent.parameterless&#125;</span>&quot;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dependent</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, **kwargs: <span class="type">Any</span></span>) -&gt; R:</span><br><span class="line">            values = <span class="keyword">await</span> self.solve(**kwargs)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> is_coroutine_callable(self.call):</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">await</span> self.call(**values)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">await</span> run_sync(self.call)(**values)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">solve</span>(<span class="params"></span></span><br><span class="line"><span class="params">            self,</span></span><br><span class="line"><span class="params">            **params: <span class="type">Any</span>,</span></span><br><span class="line"><span class="params">        </span>) -&gt; <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="type">Any</span>]:</span><br><span class="line">            values: <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="type">Any</span>] = &#123;&#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> checker <span class="keyword">in</span> self.pre_checkers:</span><br><span class="line">                <span class="keyword">await</span> checker._solve(**params)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> param <span class="keyword">in</span> self.parameterless:</span><br><span class="line">                <span class="keyword">await</span> param._solve(**params)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> field <span class="keyword">in</span> self.params:</span><br><span class="line">                field_info = field.field_info</span><br><span class="line">                <span class="keyword">assert</span> <span class="built_in">isinstance</span>(field_info, Param), <span class="string">&quot;Params must be subclasses of Param&quot;</span></span><br><span class="line">                value = <span class="keyword">await</span> field_info._solve(**params)</span><br><span class="line">                <span class="keyword">if</span> value <span class="keyword">is</span> Undefined:</span><br><span class="line">                    value = field.get_default()</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    values[field.name] = check_field_type(field, value)</span><br><span class="line">                <span class="keyword">except</span> TypeMisMatch:</span><br><span class="line">                    logger.debug(</span><br><span class="line">                        <span class="string">f&quot;<span class="subst">&#123;field_info&#125;</span> &quot;</span></span><br><span class="line">                        <span class="string">f&quot;type <span class="subst">&#123;<span class="built_in">type</span>(value)&#125;</span> not match depends <span class="subst">&#123;self.call&#125;</span> &quot;</span></span><br><span class="line">                        <span class="string">f&quot;annotation <span class="subst">&#123;field._type_display()&#125;</span>, ignored&quot;</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">raise</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> values</span><br></pre></td></tr></table></figure>
<p>在运行之前，先对要注入的函数执行<code>parse</code>函数，首先通过反射来获取函数的签名和参数。然后生成一个<code>Dependent</code>容器。遍历参数，该函数的所有参数包装成<code>Param</code>的子类，这里的<code>Param</code>是我们依赖注入的最小单元会在后面讲。并且加到<code>Dependent</code>容器的<code>params</code>里面。</p>
<blockquote>
<p>函数参数中带的 * 会使得 * 后面的参数只能通过指定参数名的形式传</p>
</blockquote>
<p>再看<code>solve</code>函数,定义了一个字典，key是参数名，value是参数值。该函数通过遍历自己的<code>params</code>参数，通过<code>param</code>的<code>_solve</code>函数来提取对应参数名的参数值。然后将提取到的参数值填充到字典中，这样虽然传进来了许多参数，但是实际执行的注入的参数是函数所拥有的部分。</p>
<h2 id="依赖注入核心"><a class="markdownIt-Anchor" href="#依赖注入核心"></a> 依赖注入核心</h2>
<p>上面我们说了<code>nonebot2</code>中依赖注入的核心是<code>Param</code>类</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Param</span>(abc.ABC, FieldInfo):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;依赖注入的基本单元 —— 参数。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    继承自 `pydantic.fields.FieldInfo`，用于描述参数信息（不包括参数名）。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_check_param</span>(<span class="params"></span></span><br><span class="line"><span class="params">        cls, dependent: <span class="string">&quot;Dependent&quot;</span>, name: <span class="built_in">str</span>, param: inspect.Parameter</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="type">Optional</span>[<span class="string">&quot;Param&quot;</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_check_parameterless</span>(<span class="params"></span></span><br><span class="line"><span class="params">        cls, dependent: <span class="string">&quot;Dependent&quot;</span>, value: <span class="type">Any</span></span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="type">Optional</span>[<span class="string">&quot;Param&quot;</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @abc.abstractmethod</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">_solve</span>(<span class="params">self, **kwargs: <span class="type">Any</span></span>) -&gt; <span class="type">Any</span>:</span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BotParam</span>(<span class="title class_ inherited__">Param</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;&#123;ref&#125;`nonebot.adapters.Bot` 参数&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_check_param</span>(<span class="params"></span></span><br><span class="line"><span class="params">        cls, dependent: Dependent, name: <span class="built_in">str</span>, param: inspect.Parameter</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="type">Optional</span>[<span class="string">&quot;BotParam&quot;</span>]:</span><br><span class="line">        <span class="keyword">from</span> nonebot.adapters <span class="keyword">import</span> Bot</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> param.default == param.empty:</span><br><span class="line">            <span class="keyword">if</span> generic_check_issubclass(param.annotation, Bot):</span><br><span class="line">                <span class="keyword">if</span> param.annotation <span class="keyword">is</span> <span class="keyword">not</span> Bot:</span><br><span class="line">                    dependent.pre_checkers.append(</span><br><span class="line">                        _BotChecker(</span><br><span class="line">                            Required,</span><br><span class="line">                            field=ModelField(</span><br><span class="line">                                name=name,</span><br><span class="line">                                type_=param.annotation,</span><br><span class="line">                                class_validators=<span class="literal">None</span>,</span><br><span class="line">                                model_config=CustomConfig,</span><br><span class="line">                                default=<span class="literal">None</span>,</span><br><span class="line">                                required=<span class="literal">True</span>,</span><br><span class="line">                            ),</span><br><span class="line">                        )</span><br><span class="line">                    )</span><br><span class="line">                <span class="keyword">return</span> cls(Required)</span><br><span class="line">            <span class="keyword">elif</span> param.annotation == param.empty <span class="keyword">and</span> name == <span class="string">&quot;bot&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> cls(Required)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">_solve</span>(<span class="params">self, bot: <span class="string">&quot;Bot&quot;</span>, **kwargs: <span class="type">Any</span></span>) -&gt; <span class="type">Any</span>:</span><br><span class="line">        <span class="keyword">return</span> bot</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DependParam</span>(<span class="title class_ inherited__">Param</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;子依赖参数&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_check_param</span>(<span class="params"></span></span><br><span class="line"><span class="params">        cls,</span></span><br><span class="line"><span class="params">        dependent: Dependent,</span></span><br><span class="line"><span class="params">        name: <span class="built_in">str</span>,</span></span><br><span class="line"><span class="params">        param: inspect.Parameter,</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="type">Optional</span>[<span class="string">&quot;DependParam&quot;</span>]:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(param.default, DependsInner):</span><br><span class="line">            dependency: T_Handler</span><br><span class="line">            <span class="keyword">if</span> param.default.dependency <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">assert</span> param.annotation <span class="keyword">is</span> <span class="keyword">not</span> param.empty, <span class="string">&quot;Dependency cannot be empty&quot;</span></span><br><span class="line">                dependency = param.annotation</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dependency = param.default.dependency</span><br><span class="line">            sub_dependent = Dependent[<span class="type">Any</span>].parse(</span><br><span class="line">                call=dependency,</span><br><span class="line">                allow_types=dependent.allow_types,</span><br><span class="line">            )</span><br><span class="line">            dependent.pre_checkers.extend(sub_dependent.pre_checkers)</span><br><span class="line">            sub_dependent.pre_checkers.clear()</span><br><span class="line">            <span class="keyword">return</span> cls(</span><br><span class="line">                Required, use_cache=param.default.use_cache, dependent=sub_dependent</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_check_parameterless</span>(<span class="params"></span></span><br><span class="line"><span class="params">        cls, dependent: <span class="string">&quot;Dependent&quot;</span>, value: <span class="type">Any</span></span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="type">Optional</span>[<span class="string">&quot;Param&quot;</span>]:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(value, DependsInner):</span><br><span class="line">            <span class="keyword">assert</span> value.dependency, <span class="string">&quot;Dependency cannot be empty&quot;</span></span><br><span class="line">            dependent = Dependent[<span class="type">Any</span>].parse(</span><br><span class="line">                call=value.dependency, allow_types=dependent.allow_types</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">return</span> cls(Required, use_cache=value.use_cache, dependent=dependent)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">_solve</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        stack: <span class="type">Optional</span>[AsyncExitStack] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">        dependency_cache: <span class="type">Optional</span>[T_DependencyCache] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">        **kwargs: <span class="type">Any</span>,</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="type">Any</span>:</span><br><span class="line">        use_cache: <span class="built_in">bool</span> = self.extra[<span class="string">&quot;use_cache&quot;</span>]</span><br><span class="line">        dependency_cache = &#123;&#125; <span class="keyword">if</span> dependency_cache <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">else</span> dependency_cache</span><br><span class="line"></span><br><span class="line">        sub_dependent: Dependent = self.extra[<span class="string">&quot;dependent&quot;</span>]</span><br><span class="line">        sub_dependent.call = cast(<span class="type">Callable</span>[..., <span class="type">Any</span>], sub_dependent.call)</span><br><span class="line">        call = sub_dependent.call</span><br><span class="line"></span><br><span class="line">        <span class="comment"># solve sub dependency with current cache</span></span><br><span class="line">        sub_values = <span class="keyword">await</span> sub_dependent.solve(</span><br><span class="line">            stack=stack,</span><br><span class="line">            dependency_cache=dependency_cache,</span><br><span class="line">            **kwargs,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># run dependency function</span></span><br><span class="line">        task: asyncio.Task[<span class="type">Any</span>]</span><br><span class="line">        <span class="keyword">if</span> use_cache <span class="keyword">and</span> call <span class="keyword">in</span> dependency_cache:</span><br><span class="line">            solved = <span class="keyword">await</span> dependency_cache[call]</span><br><span class="line">        <span class="keyword">elif</span> is_gen_callable(call) <span class="keyword">or</span> is_async_gen_callable(call):</span><br><span class="line">            <span class="keyword">assert</span> <span class="built_in">isinstance</span>(</span><br><span class="line">                stack, AsyncExitStack</span><br><span class="line">            ), <span class="string">&quot;Generator dependency should be called in context&quot;</span></span><br><span class="line">            <span class="keyword">if</span> is_gen_callable(call):</span><br><span class="line">                cm = run_sync_ctx_manager(contextmanager(call)(**sub_values))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                cm = asynccontextmanager(call)(**sub_values)</span><br><span class="line">            task = asyncio.create_task(stack.enter_async_context(cm))</span><br><span class="line">            dependency_cache[call] = task</span><br><span class="line">            solved = <span class="keyword">await</span> task</span><br><span class="line">        <span class="keyword">elif</span> is_coroutine_callable(call):</span><br><span class="line">            task = asyncio.create_task(call(**sub_values))</span><br><span class="line">            dependency_cache[call] = task</span><br><span class="line">            solved = <span class="keyword">await</span> task</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            task = asyncio.create_task(run_sync(call)(**sub_values))</span><br><span class="line">            dependency_cache[call] = task</span><br><span class="line">            solved = <span class="keyword">await</span> task</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> solved</span><br></pre></td></tr></table></figure>
<p><code>Param</code>是一个抽象类，为了方便解释我们放两个具体的实现类，我们主要关注两个函数，<code>_check_param</code>和<code>_solve</code>，<code>_check_param</code>函数将符合<code>Param</code>的参数包装成<code>Param</code>返回否则返回<code>None</code>，比如<code>BotParam</code>只处理<code>Bot</code>类，<code>DependParam</code>只处理<code>DependInner</code>，同时<code>_check_param</code>不仅可以通过<code>annotation</code>注入也可以通过参数名注入。<code>_solve</code>函数则是从<code>**kwargs</code>中获取对应的值，对于实现已经预定好的<code>bot</code>参数因为参数名和参数值都是确定的所以很简单，而<code>DependParam</code>因为是用户自己定义的类型包装且需要处理嵌套的子<code>Dependent</code>，相对处理起来麻烦。</p>
<h2 id="处理流程图"><a class="markdownIt-Anchor" href="#处理流程图"></a> 处理流程图</h2>
<p>干说有点枯燥，还是来一张流程图吧<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.1/DI-flow.png" alt="依赖注入流程图" /></p>
<h1 id="实现依赖注入"><a class="markdownIt-Anchor" href="#实现依赖注入"></a> 实现依赖注入</h1>
<p>提取<code>nonebot2</code>中依赖注入的核心代码，去除了一些参数检查、matcher选择和hook，只保留了参数注入部分。</p>
<p>完整代码在<a href="https://github.com/qxdn/dependency-injection">github</a></p>
<h2 id="exceptionpy"><a class="markdownIt-Anchor" href="#exceptionpy"></a> <a href="http://exception.py">exception.py</a></h2>
<p>主要为解析过程中会遇到的异常</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TypeMisMatch</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    参数类型不匹配</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<h2 id="modelpy"><a class="markdownIt-Anchor" href="#modelpy"></a> <a href="http://model.py">model.py</a></h2>
<p>主要为预先定义好的一定会出现的参数类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestObj</span>:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    预先定义好的模型TestObj</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,<span class="built_in">id</span>:<span class="built_in">int</span></span>):</span><br><span class="line">        self.<span class="built_in">id</span> = <span class="built_in">id</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    预先定义好的模型Person</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name:<span class="built_in">str</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        self.name = name</span><br></pre></td></tr></table></figure>
<h2 id="utilspy"><a class="markdownIt-Anchor" href="#utilspy"></a> <a href="http://utils.py">utils.py</a></h2>
<p>主要为一些工具，检查<code>override</code>，获取函数参数，检查是否子类等</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> inspect</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> TypeVar,<span class="type">Callable</span>,<span class="type">Any</span>,<span class="type">Dict</span>,<span class="type">Union</span>,<span class="type">Type</span>,<span class="type">Tuple</span>,TypeVar</span><br><span class="line"><span class="keyword">from</span> pydantic.typing <span class="keyword">import</span> ForwardRef,evaluate_forwardref</span><br><span class="line"><span class="keyword">from</span> pydantic.fields <span class="keyword">import</span> ModelField</span><br><span class="line"><span class="keyword">from</span> typing_extensions <span class="keyword">import</span> get_args, get_origin</span><br><span class="line"><span class="keyword">from</span> pydantic.typing <span class="keyword">import</span> is_union, is_none_type</span><br><span class="line"><span class="keyword">from</span> dependencies.exception <span class="keyword">import</span> TypeMisMatch</span><br><span class="line"></span><br><span class="line">T_Wrapped = TypeVar(<span class="string">&quot;T_Wrapped&quot;</span>,bound=<span class="type">Callable</span>)</span><br><span class="line">V = TypeVar(<span class="string">&quot;V&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">overrides</span>(<span class="params">InterfaceClass:<span class="built_in">object</span></span>)-&gt; <span class="type">Callable</span>[[T_Wrapped],T_Wrapped]:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    检查一个方法是否为父类的实现</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decorator</span>(<span class="params">func:T_Wrapped</span>):</span><br><span class="line">        <span class="keyword">assert</span> func.__name__ <span class="keyword">in</span> <span class="built_in">dir</span>(InterfaceClass),<span class="string">f&quot;Error! method:<span class="subst">&#123;func.__name__&#125;</span> not in class:<span class="subst">&#123;InterfaceClass&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">return</span> func</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> decorator</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_typed_signature</span>(<span class="params">call: <span class="type">Callable</span>[..., <span class="type">Any</span>]</span>) -&gt; inspect.Signature:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;获取可调用对象签名&quot;&quot;&quot;</span></span><br><span class="line">    signature = inspect.signature(call)</span><br><span class="line">    globalns = <span class="built_in">getattr</span>(call, <span class="string">&quot;__globals__&quot;</span>, &#123;&#125;)</span><br><span class="line">    typed_params = [</span><br><span class="line">        inspect.Parameter(</span><br><span class="line">            name=param.name,</span><br><span class="line">            kind=param.kind,</span><br><span class="line">            default=param.default,</span><br><span class="line">            annotation=get_typed_annotation(param, globalns),</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">for</span> param <span class="keyword">in</span> signature.parameters.values()</span><br><span class="line">    ]</span><br><span class="line">    typed_signature = inspect.Signature(typed_params)</span><br><span class="line">    <span class="keyword">return</span> typed_signature</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_typed_annotation</span>(<span class="params">param: inspect.Parameter, globalns: <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="type">Any</span>]</span>) -&gt; <span class="type">Any</span>:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    获得参数的类型注解</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    annotation = param.annotation</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(annotation, <span class="built_in">str</span>):</span><br><span class="line">        annotation = ForwardRef(annotation)</span><br><span class="line">        annotation = evaluate_forwardref(annotation, globalns, globalns)</span><br><span class="line">    <span class="keyword">return</span> annotation</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generic_check_issubclass</span>(<span class="params"></span></span><br><span class="line"><span class="params">    cls: <span class="type">Any</span>, class_or_tuple: <span class="type">Union</span>[<span class="type">Type</span>[<span class="type">Any</span>], <span class="type">Tuple</span>[<span class="type">Type</span>[<span class="type">Any</span>], ...]]</span></span><br><span class="line"><span class="params"></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;检查 cls 是否是 class_or_tuple 中的一个类型子类。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    特别的，如果 cls 是 `typing.Union` 或 `types.UnionType` 类型，</span></span><br><span class="line"><span class="string">    则会检查其中的类型是否是 class_or_tuple 中的一个类型子类。（None 会被忽略）</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">issubclass</span>(cls, class_or_tuple)</span><br><span class="line">    <span class="keyword">except</span> TypeError:</span><br><span class="line">        origin = get_origin(cls)</span><br><span class="line">        <span class="keyword">if</span> is_union(origin):</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">all</span>(</span><br><span class="line">                is_none_type(type_) <span class="keyword">or</span> generic_check_issubclass(type_, class_or_tuple)</span><br><span class="line">                <span class="keyword">for</span> type_ <span class="keyword">in</span> get_args(cls)</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">elif</span> origin:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">issubclass</span>(origin, class_or_tuple)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_field_type</span>(<span class="params">field: ModelField, value: V</span>) -&gt; V:</span><br><span class="line">    _, errs_ = field.validate(value, &#123;&#125;, loc=())</span><br><span class="line">    <span class="keyword">if</span> errs_:</span><br><span class="line">        <span class="keyword">raise</span> TypeMisMatch(field, value)</span><br><span class="line">    <span class="keyword">return</span> value</span><br></pre></td></tr></table></figure>
<h2 id="paramspy"><a class="markdownIt-Anchor" href="#paramspy"></a> <a href="http://params.py">params.py</a></h2>
<p>主要为依赖注入组件的定义、容器的定义以及对用户自定义类型的包装</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pydantic.fields <span class="keyword">import</span> FieldInfo, ModelField, Required, Undefined</span><br><span class="line"><span class="keyword">from</span> pydantic.schema <span class="keyword">import</span> get_annotation_from_field_info</span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseConfig</span><br><span class="line"><span class="keyword">import</span> abc</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> (</span><br><span class="line">    TYPE_CHECKING,</span><br><span class="line">    <span class="type">Optional</span>,</span><br><span class="line">    <span class="type">Callable</span>,</span><br><span class="line">    <span class="type">Any</span>,</span><br><span class="line">    <span class="type">List</span>,</span><br><span class="line">    <span class="type">Type</span>,</span><br><span class="line">    <span class="type">Dict</span>,</span><br><span class="line">    cast,</span><br><span class="line">)</span><br><span class="line"><span class="keyword">from</span> dependencies.utils <span class="keyword">import</span> (</span><br><span class="line">    get_typed_signature,</span><br><span class="line">    overrides,</span><br><span class="line">    generic_check_issubclass,</span><br><span class="line">    check_field_type,</span><br><span class="line">)</span><br><span class="line"><span class="keyword">from</span> dependencies.exception <span class="keyword">import</span> TypeMisMatch</span><br><span class="line"><span class="keyword">import</span> inspect</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> TYPE_CHECKING:</span><br><span class="line">    <span class="keyword">from</span> dependencies.model <span class="keyword">import</span> TestObj, Person</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomConfig</span>(<span class="title class_ inherited__">BaseConfig</span>):</span><br><span class="line">    arbitrary_types_allowed = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Param</span>(abc.ABC, FieldInfo):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    依赖注入单元 参数</span></span><br><span class="line"><span class="string">    继承自 `pydantic.fields.FieldInfo`，用于描述参数信息（不包括参数名）。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;self.__class__.__name__&#125;</span>(<span class="subst">&#123;self.default&#125;</span>)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_check_param</span>(<span class="params"></span></span><br><span class="line"><span class="params">        cls, dependent: <span class="string">&quot;Dependent&quot;</span>, name: <span class="built_in">str</span>, param: inspect.Parameter</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="type">Optional</span>[<span class="string">&quot;Param&quot;</span>]:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        解析出Param</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @abc.abstractmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_solve</span>(<span class="params">self, **kwargs: <span class="type">Any</span></span>) -&gt; <span class="type">Any</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        从**kwargs中提取出Param对应value</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestParam</span>(<span class="title class_ inherited__">Param</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    TestObj对应的包装</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_check_param</span>(<span class="params"></span></span><br><span class="line"><span class="params">        cls, dependent: <span class="string">&quot;Dependent&quot;</span>, name: <span class="built_in">str</span>, param: inspect.Parameter</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="type">Optional</span>[<span class="string">&quot;Param&quot;</span>]:</span><br><span class="line">        <span class="keyword">from</span> dependencies.model <span class="keyword">import</span> TestObj</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> param.default == param.empty:</span><br><span class="line">            <span class="keyword">if</span> generic_check_issubclass(param.annotation, TestObj):</span><br><span class="line">                <span class="comment"># 可以加子类检查，按照类型注入</span></span><br><span class="line">                <span class="keyword">return</span> cls(Required)</span><br><span class="line">            <span class="keyword">elif</span> param.annotation == param.empty <span class="keyword">and</span> name == <span class="string">&quot;test&quot;</span>:</span><br><span class="line">                <span class="comment"># 没有标注但是变量名是test，按照名字注入</span></span><br><span class="line">                <span class="keyword">return</span> cls(Required)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @overrides(<span class="params">Param</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_solve</span>(<span class="params">self, test: <span class="string">&quot;TestObj&quot;</span>, **kwargs: <span class="type">Any</span></span>) -&gt; <span class="type">Any</span>:</span><br><span class="line">        <span class="keyword">return</span> test</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PersonParam</span>(<span class="title class_ inherited__">Param</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Person对应的包装</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_check_param</span>(<span class="params"></span></span><br><span class="line"><span class="params">        cls, dependent: <span class="string">&quot;Dependent&quot;</span>, name: <span class="built_in">str</span>, param: inspect.Parameter</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="type">Optional</span>[<span class="string">&quot;Param&quot;</span>]:</span><br><span class="line">        <span class="keyword">from</span> dependencies.model <span class="keyword">import</span> Person</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> param.default == param.empty:</span><br><span class="line">            <span class="keyword">if</span> generic_check_issubclass(param.annotation, Person):</span><br><span class="line">                <span class="comment"># 可以加子类检查，按照类型注入</span></span><br><span class="line">                <span class="keyword">return</span> cls(Required)</span><br><span class="line">            <span class="keyword">elif</span> param.annotation == param.empty <span class="keyword">and</span> name == <span class="string">&quot;person&quot;</span>:</span><br><span class="line">                <span class="comment"># 没有标注但是变量名是person，按照名字注入</span></span><br><span class="line">                <span class="keyword">return</span> cls(Required)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @overrides(<span class="params">Param</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_solve</span>(<span class="params">self, person: <span class="string">&quot;Person&quot;</span>, **kwargs: <span class="type">Any</span></span>) -&gt; <span class="type">Any</span>:</span><br><span class="line">        <span class="keyword">return</span> person</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DependsInner</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    对用户自定义依赖的包装</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, dependency: <span class="type">Optional</span>[<span class="type">Callable</span>[..., <span class="type">Any</span>]]</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        self.dependency = dependency</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DependParam</span>(<span class="title class_ inherited__">Param</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    子依赖参数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_check_param</span>(<span class="params"></span></span><br><span class="line"><span class="params">        cls, dependent: <span class="string">&quot;Dependent&quot;</span>, name: <span class="built_in">str</span>, param: inspect.Parameter</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="type">Optional</span>[<span class="string">&quot;Param&quot;</span>]:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(param.default, DependsInner):</span><br><span class="line">            dependency: <span class="type">Callable</span>[..., <span class="type">Any</span>]</span><br><span class="line">            <span class="keyword">if</span> param.default.dependency <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">assert</span> param.annotation <span class="keyword">is</span> <span class="keyword">not</span> param.empty, <span class="string">&quot;Dependency cannot be empty&quot;</span></span><br><span class="line">                dependency = param.annotation</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dependency = param.default.dependency</span><br><span class="line">            sub_dependent = Dependent.parse(call=dependency)</span><br><span class="line">            <span class="keyword">return</span> cls(Required, dependent=sub_dependent)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @overrides(<span class="params">Param</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_solve</span>(<span class="params">self, **kwargs: <span class="type">Any</span></span>) -&gt; <span class="type">Any</span>:</span><br><span class="line">        <span class="comment"># 子依赖</span></span><br><span class="line">        sub_dependent: Dependent = self.extra[<span class="string">&quot;dependent&quot;</span>]</span><br><span class="line">        sub_dependent.call = cast(<span class="type">Callable</span>[..., <span class="type">Any</span>], sub_dependent.call)</span><br><span class="line">        call = sub_dependent.call</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 解析出嵌套依赖的返回值</span></span><br><span class="line">        sub_values = sub_dependent.solve(**kwargs)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 解析当前的返回值</span></span><br><span class="line">        solved = call(**sub_values)</span><br><span class="line">        <span class="keyword">return</span> solved</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dependent</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    依赖注入容器</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    ALL_TYPES: <span class="type">List</span>[<span class="type">Type</span>[Param]] = [TestParam, PersonParam, DependParam]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        call: <span class="type">Optional</span>[<span class="type">Callable</span>[..., <span class="type">Any</span>]],</span></span><br><span class="line"><span class="params">        *,</span></span><br><span class="line"><span class="params">        params: <span class="type">Optional</span>[<span class="type">List</span>[ModelField]] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        self.call = call</span><br><span class="line">        self.params = params <span class="keyword">or</span> []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse_param</span>(<span class="params">self, name: <span class="built_in">str</span>, param: inspect.Parameter</span>) -&gt; Param:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        将未知参数转为依赖注入Param</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> types <span class="keyword">in</span> self.ALL_TYPES:</span><br><span class="line">            field_info = types._check_param(self, name, param)</span><br><span class="line">            <span class="keyword">if</span> field_info:</span><br><span class="line">                <span class="keyword">return</span> field_info</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(</span><br><span class="line">                <span class="string">f&quot;Unknown parameter <span class="subst">&#123;name&#125;</span> for function <span class="subst">&#123;self.call&#125;</span> with type <span class="subst">&#123;param.annotation&#125;</span>&quot;</span></span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">cls, *, call: <span class="type">Callable</span>[..., <span class="type">Any</span>]</span>) -&gt; <span class="string">&quot;Dependent&quot;</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        对Callable解析出容器</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        signature = get_typed_signature(call=call)  <span class="comment"># 获取函数签名</span></span><br><span class="line">        params = signature.parameters  <span class="comment"># 获取函数参数信息</span></span><br><span class="line">        dependent = cls(call=call)  <span class="comment"># 创建容器</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> param_name, param <span class="keyword">in</span> params.items():</span><br><span class="line">            default_value = Required</span><br><span class="line">            <span class="keyword">if</span> param.default != param.empty:</span><br><span class="line">                default_value = param.default</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(default_value, Param):</span><br><span class="line">                <span class="comment"># param 本身就是FieldInfo</span></span><br><span class="line">                field_info = default_value</span><br><span class="line">                default_value = field_info.default</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 不是 Param 类型的需要打包成Param</span></span><br><span class="line">                field_info = dependent.parse_param(param_name, param)</span><br><span class="line">                default_value = field_info.default</span><br><span class="line"></span><br><span class="line">            annotation: <span class="type">Any</span> = <span class="type">Any</span></span><br><span class="line">            required = default_value == Required</span><br><span class="line">            <span class="keyword">if</span> param.annotation != param.empty:</span><br><span class="line">                annotation = param.annotation</span><br><span class="line">            annotation = get_annotation_from_field_info(  <span class="comment"># 验证annotation</span></span><br><span class="line">                annotation, field_info, param_name</span><br><span class="line">            )</span><br><span class="line">            dependent.params.append(  <span class="comment"># 将解析出的Param添加到容器的依赖中</span></span><br><span class="line">                ModelField(</span><br><span class="line">                    name=param_name,</span><br><span class="line">                    type_=annotation,</span><br><span class="line">                    class_validators=<span class="literal">None</span>,</span><br><span class="line">                    model_config=CustomConfig,</span><br><span class="line">                    default=<span class="literal">None</span> <span class="keyword">if</span> required <span class="keyword">else</span> default_value,</span><br><span class="line">                    required=required,</span><br><span class="line">                    field_info=field_info,</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dependent</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">solve</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        **params: <span class="type">Any</span>,</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="type">Any</span>]:</span><br><span class="line">        values: <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="type">Any</span>] = &#123;&#125;  <span class="comment"># 解析出的 name:param_value</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> field <span class="keyword">in</span> self.params:</span><br><span class="line">            field_info = field.field_info</span><br><span class="line">            <span class="keyword">assert</span> <span class="built_in">isinstance</span>(field_info, Param), <span class="string">&quot;Params must be subclasses of Param&quot;</span></span><br><span class="line">            value = field_info._solve(**params)  <span class="comment"># 解析出当前参数对应的值</span></span><br><span class="line">            <span class="keyword">if</span> value <span class="keyword">is</span> Undefined:</span><br><span class="line">                value = field.get_default()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                values[field.name] = check_field_type(field, value) <span class="comment"># 检查类型和值是否对应，并添加到字典中</span></span><br><span class="line">            <span class="keyword">except</span> TypeMisMatch:</span><br><span class="line">                <span class="built_in">print</span>(</span><br><span class="line">                    <span class="string">f&quot;<span class="subst">&#123;field_info&#125;</span> &quot;</span></span><br><span class="line">                    <span class="string">f&quot;type <span class="subst">&#123;<span class="built_in">type</span>(value)&#125;</span> not match depends <span class="subst">&#123;self.call&#125;</span> &quot;</span></span><br><span class="line">                    <span class="string">f&quot;annotation <span class="subst">&#123;field._type_display()&#125;</span>, ignored&quot;</span></span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">raise</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> values</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, **kwargs: <span class="type">Any</span></span>) -&gt; <span class="type">Any</span>:</span><br><span class="line">        values = self.solve(**kwargs) <span class="comment"># 解析出函数的需要的值 字典形式</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.call(**values) <span class="comment"># 注入参数计算返回</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;Dependent <span class="subst">&#123;self.__class__.__name__&#125;</span> call=<span class="subst">&#123;self.call.__name__&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Depends</span>(<span class="params">dependency: <span class="type">Optional</span>[<span class="type">Callable</span>[..., <span class="type">Any</span>]] = <span class="literal">None</span></span>) -&gt; <span class="type">Any</span>:  <span class="comment"># noqa: N802</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    对用户依赖进行包装</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> DependsInner(dependency=dependency) </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="测试结果"><a class="markdownIt-Anchor" href="#测试结果"></a> 测试结果</h1>
<p>demo如下，省去了<code>nonebot</code>中通过装饰器注册容器，和选择handler运行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Dict</span></span><br><span class="line"><span class="keyword">from</span> dependencies.model <span class="keyword">import</span> TestObj,Person</span><br><span class="line"><span class="keyword">from</span> dependencies.params <span class="keyword">import</span> Depends,Dependent</span><br><span class="line"><span class="keyword">from</span> colorama <span class="keyword">import</span> Fore</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">provider1</span>(<span class="params">person</span>) -&gt; <span class="type">Dict</span>[<span class="built_in">str</span>,<span class="built_in">int</span>]:</span><br><span class="line">    <span class="built_in">print</span>(Fore.GREEN + <span class="string">&quot;----in provider1-----&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;person&#x27;name :<span class="subst">&#123;person.name&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-------end-------&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;c&quot;</span>: <span class="number">123</span>,<span class="string">&quot;d&quot;</span>:<span class="number">999</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">provider2</span>(<span class="params">dep:<span class="type">Dict</span>[<span class="built_in">str</span>,<span class="built_in">int</span>]=Depends(<span class="params">provider1</span>)</span>) -&gt; <span class="type">Dict</span>[<span class="built_in">str</span>,<span class="built_in">int</span>]:</span><br><span class="line">    <span class="built_in">print</span>(Fore.RED + <span class="string">&quot;----in provider2-----&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;in provider 2 dep are:<span class="subst">&#123;dep&#125;</span>&quot;</span>)</span><br><span class="line">    return_values:<span class="type">Dict</span>[<span class="built_in">str</span>,<span class="built_in">int</span>] = &#123;<span class="string">&quot;a&quot;</span>: <span class="number">123</span>,<span class="string">&quot;b&quot;</span>:<span class="number">999</span>&#125;</span><br><span class="line">    return_values.update(dep)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-------end-------&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> return_values</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_func</span>(<span class="params">test:TestObj,dep : <span class="type">Dict</span>[<span class="built_in">str</span>,<span class="built_in">int</span>] = Depends(<span class="params">provider2</span>)</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    原始函数</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(Fore.CYAN + <span class="string">&quot;----in test_func-----&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;testparam&#x27;s id:<span class="subst">&#123;test.<span class="built_in">id</span>&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;----print dict-----&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(dep)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-------end-------&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 运行前注册</span></span><br><span class="line">    d = Dependent.parse(call=test_func)</span><br><span class="line">    <span class="comment"># 外部参数</span></span><br><span class="line">    p = Person(<span class="string">&quot;test person&quot;</span>)</span><br><span class="line">    t = TestObj(<span class="number">6</span>)</span><br><span class="line">    <span class="comment"># 省去挑选handler步骤，直接执行原函数</span></span><br><span class="line">    d(test = t,person=p)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line">    </span><br></pre></td></tr></table></figure>
<p>运行结果如下<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.1/result.png" alt="result" /></p>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>简单实现一下<code>nonebot2</code>的依赖注入，其实可以发现里面的逻辑非常简单，可以简化为通过反射获取函数的参数信息，然后将初始化一个字典values，key是参数名，value是参数值，然后将外部的全部参数按照参数名或者参数类型放入字典中，最后通过<code>**kwargs</code>的形式执行被注入函数。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p><a href="https://v2.nonebot.dev/docs/">nonebot2文档</a></p>
<p><a href="https://github.com/nonebot/nonebot2">nonebot2</a></p>
<p><a href="https://stackoverflow.com/questions/14301967/bare-asterisk-in-function-arguments">Bare asterisk in function arguments?</a></p>
<p><a href="https://stackoverflow.com/questions/23038767/what-is-the-purpose-of-a-bare-asterisk-in-function-arguments">What is the purpose of a bare asterisk in function arguments?</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>nonebot</tag>
      </tags>
  </entry>
  <entry>
    <title>mann-kendall检验</title>
    <url>/2022/12/22/mann-kendall-test/</url>
    <content><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>因为在项目中单次的治疗效果找不到什么指标，用的是模型倒数第二层输出的特征向量和不患病的人之间做特征相似度的分析，但是长期的治疗分析找不到很好的指标，于是想到了使用时间序列的趋势做分析，对于时间序列趋势的检验有mann-kendall算法。</p>
<h1 id="mann-kendall检验"><a class="markdownIt-Anchor" href="#mann-kendall检验"></a> mann-kendall检验</h1>
<p>mann-kendall检验用于判断给定的时间序列是否存在线性单调趋势。</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>假设：不存在单调趋势</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">H_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>假设：三种
<ul>
<li>存在单调上升趋势</li>
<li>存在单调下降趋势</li>
<li>存在单调上升或者单调下降趋势</li>
</ul>
</li>
</ul>
<h1 id="mann-kendall的假设"><a class="markdownIt-Anchor" href="#mann-kendall的假设"></a> mann-kendall的假设</h1>
<p>以下假设是mk测试检验的基础</p>
<ul>
<li>在没有趋势的时候，数据成独立同分布</li>
<li>随时间推移的观察结果代表真实情况的采样</li>
<li>用于采样的方法、仪器测量是无偏差的</li>
</ul>
<h1 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h1>
<ul>
<li>
<p>不假设数据是符合特定的分布</p>
</li>
<li>
<p>不受缺省值的影响，受采样值数量的影响</p>
</li>
<li>
<p>不受采样时间间距不规则影响</p>
</li>
<li>
<p>不受时间序列长度影响</p>
</li>
</ul>
<h1 id="局限性"><a class="markdownIt-Anchor" href="#局限性"></a> 局限性</h1>
<ul>
<li>不适用与具有周期性的数据，为了使数据有效，建建议预处理前删除已知的周期性影响</li>
<li>检验对较短的数据给出较多坏结果，序列越长趋势检测越有效</li>
</ul>
<h1 id="计算方法"><a class="markdownIt-Anchor" href="#计算方法"></a> 计算方法</h1>
<ol>
<li>按照时间顺序列出所有数据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_1, x_2, ..., x_n
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li>计算所有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">n(n-1)/2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span>种的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>j</mi></msub><mo>−</mo><msub><mi>x</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">x_j-x_k
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的差值其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>&gt;</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">j \gt k
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span></li>
<li>计算上一步中差值的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">sgn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span></span></span></span>函数结果</li>
</ol>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">sgn(x_i - x_j) =
    \begin{cases}
                    1,  &amp; x_i - x_j &gt; 0\\
                    0,  &amp; x_i - x_j = 0\\
                    -1, &amp; x_i - x_j &lt; 0
    \end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ol start="4">
<li>计算所有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">sgn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span></span></span></span>的和</li>
</ol>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>j</mi><mo>−</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mi>n</mi></munderover><mtext>sgn</mtext><mo stretchy="false">(</mo><msub><mi>x</mi><mi>j</mi></msub><mo>−</mo><msub><mi>x</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mstyle></mstyle></mrow><annotation encoding="application/x-tex">S = \displaystyle\sum_{k-1}^{n-1}\displaystyle\sum_{j-k+1}^{n}\text{sgn}(x_j-x_k) 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2393340000000004em;vertical-align:-1.438221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.438221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord">sgn</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<ol start="5">
<li>计算方差<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>A</mi><mi>R</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">VAR(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span>，公式如下。其中g是有相同数据的组的数量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">t_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是相同数据的数量。例如序列[23, 24, 29, 6, 29, 24, 24, 29, 23]中，我们有g=3个相同数据组，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">t_1=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>，因为序列中有2个23，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mn>2</mn></msub><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">t_2=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>，因为数据中有3个24，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mn>3</mn></msub><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">t_3=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>因为数据中有3个29</li>
</ol>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>VAR</mtext><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>18</mn></mfrac><mo fence="false">[</mo><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>2</mn><mi>n</mi><mo>+</mo><mn>5</mn><mo stretchy="false">)</mo><mo>−</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow><mi>g</mi></munderover><msub><mi>t</mi><mi>p</mi></msub><mo stretchy="false">(</mo><msub><mi>t</mi><mi>p</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>2</mn><msub><mi>t</mi><mi>p</mi></msub><mo>+</mo><mn>5</mn><mo stretchy="false">)</mo><mo fence="false">]</mo></mstyle></mrow><annotation encoding="application/x-tex">\text{VAR}(S) = \frac{1}{18}\Big[n(n-1)(2n+5) 
 - \displaystyle\sum_{p-1}^{g}t_p(t_p-1)(2t_p+5)\Big] 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">VAR</span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.101726em;vertical-align:-1.403221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mord">5</span><span class="mclose">)</span><span class="mord"><span class="delimsizing size2">]</span></span></span></span></span></span></p>
<ol start="6">
<li>计算mann kendall检验的统计量</li>
</ol>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mrow><mi>M</mi><mi>K</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mi>S</mi><mo>−</mo><mn>1</mn></mrow><msqrt><mrow><mi>V</mi><mi>A</mi><mi>R</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow></msqrt></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>S</mi><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>S</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mi>S</mi><mo>+</mo><mn>1</mn></mrow><msqrt><mrow><mi>V</mi><mi>A</mi><mi>R</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow></msqrt></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>S</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">Z_{MK} =
    \begin{cases}
                    \frac{S - 1} {\sqrt{VAR(S)}},  &amp; S &gt; 0\\
                    0,  &amp; S = 0\\
                    \frac{S + 1} {\sqrt{VAR(S)}},  &amp; S &lt; 0\\
    \end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.115200000000001em;vertical-align:-2.3076000000000003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65002em;"><span style="top:-1.8999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.8999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.1999899999999997em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8076000000000003em;"><span style="top:-4.807600000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.4641625em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0369107142857144em;"><span class="svg-align" style="top:-3.428571428571429em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="mord mathdefault mtight">A</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mclose mtight">)</span></span></span><span style="top:-3.0089107142857143em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5428571428571431em;"><svg width='400em' height='1.5428571428571431em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4196607142857143em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8295999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span><span style="top:-2.9699999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-1.5299999999999996em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.4641625em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0369107142857144em;"><span class="svg-align" style="top:-3.428571428571429em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="mord mathdefault mtight">A</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mclose mtight">)</span></span></span><span style="top:-3.0089107142857143em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5428571428571431em;"><svg width='400em' height='1.5428571428571431em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4196607142857143em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8295999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3076000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8076000000000003em;"><span style="top:-4.807600000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.9699999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-1.5299999999999996em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3076000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ol start="7">
<li>检验假设：显著性水平<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>a</mi><mo>&lt;</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">0&lt;a&lt;0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>）表示了MK检验中错误的拒绝原假设的可容忍概率
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>假设:无趋势</li>
<li>单调上升趋势
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">H_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>假设:单调上升趋势</li>
<li>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mrow><mi>M</mi><mi>K</mi></mrow></msub><mo>≥</mo><msub><mi>Z</mi><mrow><mn>1</mn><mo>−</mo><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Z_{MK} \geq Z_{1-a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> 就接受假设 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">H_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mrow><mn>1</mn><mo>−</mo><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Z_{1-a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>表示正态分布中第100(1-a)个百分位数</li>
</ul>
</li>
<li>单调下降趋势
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">H_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>假设:单调下降趋势</li>
<li>如果$Z_{MK} \leq -Z_{1-a} $ 就接受假设 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">H_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
</ul>
</li>
<li>存在单调上升或者单调下降趋势
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">H_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>假设:存在单调上升或者单调下降趋势</li>
<li>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>Z</mi><mrow><mi>M</mi><mi>K</mi></mrow></msub><mi mathvariant="normal">∣</mi><mo>≥</mo><msub><mi>Z</mi><mrow><mn>1</mn><mo>−</mo><mi>a</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">|Z_{MK}| \geq Z_{1-a/2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span> 就接受假设 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">H_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
</ul>
</li>
</ul>
</li>
</ol>
<h1 id="修正公式"><a class="markdownIt-Anchor" href="#修正公式"></a> 修正公式</h1>
<p>因为mk检验中一个重要的步骤就是计算两次测量之间的差异大于、等于还是小于0.如果我们的测量的x精度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ε</mi><mo>=</mo><mn>0.01</mn></mrow><annotation encoding="application/x-tex">\varepsilon = 0.01</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ε</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">1</span></span></span></span>，由于存在浮点计算误差可能有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>27</mn></msub><mo>−</mo><msub><mi>x</mi><mn>11</mn></msub><mo>=</mo><mn>0.000251</mn><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x_{27} - x_{11} = 0.000251 &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">2</span><span class="mord">5</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，这个大于0的值其实是没有意义的，因为在实际的测量中是无法确定这么小的差异，因此在mk检验的实现中我们加入了一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ε</span></span></span></span>来解决<br />
修改上面两个公式</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo>&gt;</mo><mi>ε</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>ε</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo>&lt;</mo><mo>−</mo><mi>ε</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">sgn(x_i - x_j) =
    \begin{cases}
                    1,  &amp; x_i - x_j &gt; \varepsilon\\
                    0,  &amp; |x_i - x_j| \leq \varepsilon\\
                    -1, &amp; x_i - x_j &lt; -\varepsilon
    \end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">ε</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">ε</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord mathdefault">ε</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mrow><mi>M</mi><mi>K</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mi>S</mi><mo>−</mo><mn>1</mn></mrow><msqrt><mrow><mi>V</mi><mi>A</mi><mi>R</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow></msqrt></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>S</mi><mo>&gt;</mo><mi>ε</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi>S</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>ε</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mi>S</mi><mo>+</mo><mn>1</mn></mrow><msqrt><mrow><mi>V</mi><mi>A</mi><mi>R</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow></msqrt></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>S</mi><mo>&lt;</mo><mo>−</mo><mi>ε</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">Z_{MK} =
    \begin{cases}
                    \frac{S - 1} {\sqrt{VAR(S)}},  &amp; S &gt;
                    \varepsilon\\
                    0,  &amp; |S| \leq \varepsilon\\
                    \frac{S + 1} {\sqrt{VAR(S)}},  &amp; S &lt;
                    -\varepsilon\\
    \end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.115200000000001em;vertical-align:-2.3076000000000003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65002em;"><span style="top:-1.8999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.8999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.1999899999999997em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8076000000000003em;"><span style="top:-4.807600000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.4641625em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0369107142857144em;"><span class="svg-align" style="top:-3.428571428571429em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="mord mathdefault mtight">A</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mclose mtight">)</span></span></span><span style="top:-3.0089107142857143em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5428571428571431em;"><svg width='400em' height='1.5428571428571431em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4196607142857143em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8295999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span><span style="top:-2.9699999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-1.5299999999999996em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.4641625em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0369107142857144em;"><span class="svg-align" style="top:-3.428571428571429em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="mord mathdefault mtight">A</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mclose mtight">)</span></span></span><span style="top:-3.0089107142857143em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5428571428571431em;"><svg width='400em' height='1.5428571428571431em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4196607142857143em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8295999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3076000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8076000000000003em;"><span style="top:-4.807600000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">ε</span></span></span><span style="top:-2.9699999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">ε</span></span></span><span style="top:-1.5299999999999996em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord mathdefault">ε</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3076000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<h1 id="实现代码"><a class="markdownIt-Anchor" href="#实现代码"></a> 实现代码</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> norm</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_preprocess</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    数据预处理 返回拉平的x和通道数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    x = np.asarray(x).astype(<span class="built_in">float</span>)</span><br><span class="line">    dim = x.ndim</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> dim == <span class="number">1</span>:</span><br><span class="line">        c = <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> dim == <span class="number">2</span>:</span><br><span class="line">        (_, c) = x.shape</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> c == <span class="number">1</span>:</span><br><span class="line">            x = x.flatten()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">assert</span> <span class="number">1</span> == dim, <span class="string">&quot;please check you input shape&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> x, c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_missing_values_analysis</span>(<span class="params">x, method: <span class="built_in">str</span> = <span class="string">&quot;skip&quot;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    缺省值预处理，默认抛弃</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    method = method.lower()</span><br><span class="line">    <span class="keyword">assert</span> method <span class="keyword">in</span> [<span class="string">&quot;skip&quot;</span>], <span class="string">f&quot;method: <span class="subst">&#123;method&#125;</span> is not allow&quot;</span></span><br><span class="line">    <span class="keyword">if</span> method == <span class="string">&quot;skip&quot;</span>:</span><br><span class="line">        <span class="keyword">if</span> x.ndim == <span class="number">1</span>:</span><br><span class="line">            x = x[~np.isnan(x)]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            x = x[~np.isnan(x).<span class="built_in">any</span>(axis=<span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line">    n = <span class="built_in">len</span>(x)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> x, n</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_mk_score</span>(<span class="params">x, n, eps=<span class="number">1e-6</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    计算 mk算法s分数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    sgn = np.zeros((n, n), dtype=<span class="string">&quot;int&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        tmp = x - x[i]</span><br><span class="line">        tmp[np.where(np.fabs(tmp) &lt;= eps)] = <span class="number">0.0</span>  <span class="comment"># 对0特殊处理</span></span><br><span class="line">        sgn[i] = np.sign(tmp)</span><br><span class="line"></span><br><span class="line">    s = sgn[np.triu_indices(n, k=<span class="number">1</span>)].<span class="built_in">sum</span>()  <span class="comment"># 取上三角，不含对角线</span></span><br><span class="line">    <span class="keyword">return</span> s, sgn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_variance_s</span>(<span class="params">x, sgn, n,eps=<span class="number">1e-6</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    计算方差</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    np.fill_diagonal(sgn,eps*<span class="number">1e6</span>)</span><br><span class="line">    i,_ = np.where(sgn==<span class="number">0.</span>)</span><br><span class="line">    ties = np.unique(x[i]) <span class="comment">#重复的点</span></span><br><span class="line">    p = <span class="built_in">len</span>(ties)</span><br><span class="line">    q = np.zeros(<span class="built_in">len</span>(ties), dtype=<span class="string">&quot;int&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(p):</span><br><span class="line">        idx = np.where(np.fabs(x-ties[k])&lt;eps)</span><br><span class="line">        q[k] = <span class="built_in">len</span>(idx)</span><br><span class="line"></span><br><span class="line">    term1 = n * (n - <span class="number">1</span>) * (<span class="number">2</span> * n + <span class="number">5</span>)</span><br><span class="line">    term2 = (q * (q - <span class="number">1</span>) * (<span class="number">2</span> * q + <span class="number">5</span>)).<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line">    var_s = <span class="built_in">float</span>(term1 - term2) / <span class="number">18.</span></span><br><span class="line">    <span class="keyword">return</span> var_s</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_z_score</span>(<span class="params">s,var_s,eps=<span class="number">1e-6</span></span>):</span><br><span class="line">    <span class="keyword">if</span> s &gt; eps:</span><br><span class="line">        z = (s-<span class="number">1</span>)/np.sqrt(var_s)</span><br><span class="line">    <span class="keyword">elif</span> np.fabs(s) &lt;= eps:</span><br><span class="line">        z = <span class="number">0.</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        z = (s+<span class="number">1</span>) / np.sqrt(var_s)</span><br><span class="line">    <span class="keyword">return</span> z</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_p_value</span>(<span class="params">z,alpha</span>):</span><br><span class="line">    <span class="comment"># 双端测试</span></span><br><span class="line">    p = <span class="number">2</span>*(<span class="number">1</span>-norm.cdf(<span class="built_in">abs</span>(z)))  </span><br><span class="line">    h = <span class="built_in">abs</span>(z) &gt; norm.ppf(<span class="number">1</span>-alpha/<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (z &lt; <span class="number">0</span>) <span class="keyword">and</span> h:</span><br><span class="line">        trend = <span class="string">&#x27;decreasing&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> (z &gt; <span class="number">0</span>) <span class="keyword">and</span> h:</span><br><span class="line">        trend = <span class="string">&#x27;increasing&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        trend = <span class="string">&#x27;no trend&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> p, h, trend</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mann_kendall_test</span>(<span class="params">x,alpha = <span class="number">0.05</span>, eps=<span class="number">1e-6</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    x: 待检验数据</span></span><br><span class="line"><span class="string">    alpha: 显著性水平 允许错误否定假设的误差 0~0.5</span></span><br><span class="line"><span class="string">    eps: 最小计数误差</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    res = namedtuple(<span class="string">&quot;mann_kendall_result&quot;</span>,[<span class="string">&#x27;trend&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;p&#x27;</span>])</span><br><span class="line">    x, _ = _preprocess(x)</span><br><span class="line">    x, n = _missing_values_analysis(x)</span><br><span class="line">    s, sgn = _mk_score(x, n, eps=eps)</span><br><span class="line">    var_s = _variance_s(x,sgn,n,eps=eps)</span><br><span class="line">    z = _z_score(s,var_s,eps=eps)</span><br><span class="line">    p,h,trend = _p_value(z,alpha)</span><br><span class="line">    <span class="comment"># 对于mk算法 p不是必须的</span></span><br><span class="line">    <span class="comment"># 可以算斜率，但用不上</span></span><br><span class="line">    <span class="keyword">return</span> res(trend,h,p)</span><br></pre></td></tr></table></figure>
<h1 id="测试效果"><a class="markdownIt-Anchor" href="#测试效果"></a> 测试效果</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">9</span>)</span><br><span class="line"><span class="built_in">print</span>(mann_kendall_test(x))</span><br><span class="line">x = np.random.sample(<span class="number">60</span>)</span><br><span class="line"><span class="built_in">print</span>(mann_kendall_test(x)) </span><br><span class="line">x = np.random.sample(<span class="number">60</span>) - np.arange(<span class="number">60</span>)</span><br><span class="line"><span class="built_in">print</span>(mann_kendall_test(x))</span><br></pre></td></tr></table></figure>
<p>输出如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mann_kendall_result(trend=<span class="string">&#x27;increasing&#x27;</span>, h=<span class="literal">True</span>, p=<span class="number">0.00026326080270355767</span>)</span><br><span class="line">mann_kendall_result(trend=<span class="string">&#x27;no trend&#x27;</span>, h=<span class="literal">False</span>, p=<span class="number">0.754646525401216</span>)</span><br><span class="line">mann_kendall_result(trend=<span class="string">&#x27;decreasing&#x27;</span>, h=<span class="literal">True</span>, p=<span class="number">0.0</span>)</span><br></pre></td></tr></table></figure>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<ul>
<li><a href="https://up-rs-esp.github.io/mkt/#module-mkt">Mann-Kendall Test (mkt)</a></li>
<li><a href="https://blog.minitab.com/en/adventures-in-statistics-2/understanding-hypothesis-tests-significance-levels-alpha-and-p-values-in-statistics">Understanding Hypothesis Tests: Significance Levels (Alpha) and P values in Statistics</a></li>
<li><a href="https://github.com/mmhs013/pyMannKendall">pyMannKendall</a></li>
<li><a href="https://vsp.pnnl.gov/help/vsample/design_trend_mann_kendall.htm">Mann-Kendall Test For Monotonic Trend</a></li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>js检测开发者工具是否打开</title>
    <url>/2023/01/26/js-check-devtool/</url>
    <content><![CDATA[<blockquote>
<p>封面 《Unless Terminalia》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>在使用浏览器对一些网站进行分析的时候经常会遇到打开开发者工具后跳出debugger或者说是跳转到了别的网页。下面我会讲一些网站是如何做到的和应对方法。</p>
<h1 id="debugger"><a class="markdownIt-Anchor" href="#debugger"></a> debugger</h1>
<p>一种常见的方法是使用<code>debugger</code>，比如米游社用的是这种，当打开开发者工具时会有debugger跳出效果如下，效果类似于程序中的断点，点继续调试的时候也是如此，让人忙于处理debugger<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.2/debugger.png" alt="" /></p>
<p>实现起来为如下代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">check</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">debugger</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">setTimeout</span>(check, <span class="number">1</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">check</span>();</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="破解方法"><a class="markdownIt-Anchor" href="#破解方法"></a> 破解方法</h2>
<p>对于这种方法，我们只需要禁用debugger就行，最简单的方法就是点击开发中工具中的deactivated breakpoints<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.2/debugger-hack.png" alt="" /></p>
<h1 id="禁用右键和f12"><a class="markdownIt-Anchor" href="#禁用右键和f12"></a> 禁用右键和F12</h1>
<p>禁用F12和右键，使得无法打开开发者工具。这种方法有点掩耳盗铃</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// F12</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">onkeydown</span> = <span class="variable language_">window</span>.<span class="property">onkeyup</span> = <span class="variable language_">window</span>.<span class="property">onkeypress</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 判断是否按下F12，F12键码为123  </span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (event.<span class="property">keyCode</span> = <span class="number">123</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                event.<span class="title function_">preventDefault</span>(); <span class="comment">// 阻止默认事件行为  </span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">returnValue</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 右键</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">oncontextmenu</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="破解方法-2"><a class="markdownIt-Anchor" href="#破解方法-2"></a> 破解方法</h2>
<p>按下<code>ctrl+shift+I</code>或者点击chrome浏览器头像右侧的地方里面的<code>更多工具-&gt;开发者工具</code></p>
<h1 id="检测窗口大小变化"><a class="markdownIt-Anchor" href="#检测窗口大小变化"></a> 检测窗口大小变化</h1>
<p><code>window.outerHeight</code>和<code>window.outerWidth</code>返回整个浏览器窗口的高度，宽度，包括侧边栏（如果存在）。<code>window.innerHeight</code>和<code>window.innerWidth</code>返回浏览器视窗大小，如果有滚动条也包含滚动条。具体区分可见下图</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.2/height.png" alt="" /></p>
<p>这里实现直接照搬别人的<a href="https://github.com/sindresorhus/devtools-detect">github</a>，附带上该库的<a href="https://sindresorhus.com/devtools-detect/">例程</a></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> devtools = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isOpen</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">orientation</span>: <span class="literal">undefined</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// inner和outer之间大小的阈值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> threshold = <span class="number">170</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 定义监听开发者工具事件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="title function_">emitEvent</span> = (<span class="params">isOpen, orientation</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">            globalThis.<span class="title function_">dispatchEvent</span>(<span class="keyword">new</span> globalThis.<span class="title class_">CustomEvent</span>(<span class="string">&#x27;devtoolschange&#x27;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">detail</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    isOpen,</span></span><br><span class="line"><span class="language-javascript">                    orientation,</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;));</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="title function_">main</span> = (<span class="params">&#123; emitEvents = <span class="literal">true</span> &#125; = &#123;&#125;</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> widthThreshold = globalThis.<span class="property">outerWidth</span> - globalThis.<span class="property">innerWidth</span> &gt; threshold;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> heightThreshold = globalThis.<span class="property">outerHeight</span> - globalThis.<span class="property">innerHeight</span> &gt; threshold;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> orientation = widthThreshold ? <span class="string">&#x27;vertical&#x27;</span> : <span class="string">&#x27;horizontal&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (</span></span><br><span class="line"><span class="language-javascript">                !(heightThreshold &amp;&amp; widthThreshold)</span></span><br><span class="line"><span class="language-javascript">                &amp;&amp; ((globalThis.<span class="property">Firebug</span> &amp;&amp; globalThis.<span class="property">Firebug</span>.<span class="property">chrome</span> &amp;&amp; globalThis.<span class="property">Firebug</span>.<span class="property">chrome</span>.<span class="property">isInitialized</span>) || widthThreshold || heightThreshold)</span></span><br><span class="line"><span class="language-javascript">            ) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 有超过阈值 是打开的</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> ((!devtools.<span class="property">isOpen</span> || devtools.<span class="property">orientation</span> !== orientation) &amp;&amp; emitEvents) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">emitEvent</span>(<span class="literal">true</span>, orientation);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                devtools.<span class="property">isOpen</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">                devtools.<span class="property">orientation</span> = orientation;</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 开发者工具未打开</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (devtools.<span class="property">isOpen</span> &amp;&amp; emitEvents) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">emitEvent</span>(<span class="literal">false</span>, <span class="literal">undefined</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                devtools.<span class="property">isOpen</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">                devtools.<span class="property">orientation</span> = <span class="literal">undefined</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">main</span>(&#123; <span class="attr">emitEvents</span>: <span class="literal">false</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setInterval</span>(main, <span class="number">500</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;devtoolschange&#x27;</span>, <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(event.<span class="property">detail</span>.<span class="property">isOpen</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="破解方法-3"><a class="markdownIt-Anchor" href="#破解方法-3"></a> 破解方法</h2>
<p>这种方法需要设置一个阈值，容易误触发。破解方法就是将开发者工具设置为独立窗口，这样就无法检测到窗口变化。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.2/resize-hack.png" alt="" /></p>
<h1 id="重写tostring"><a class="markdownIt-Anchor" href="#重写tostring"></a> 重写toString</h1>
<div class="note red icon-padding simple"><i class="note-icon fa-solid fa-triangle-exclamation"></i><p>在我的chrome 109.0.5414.119上没有复现成功</p>
</div>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法1</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(x, <span class="string">&#x27;id&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">get</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">// 开发者工具被打开</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line"><span class="comment">//方法2</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">c.<span class="property">toString</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 开发者工具被打开</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br></pre></td></tr></table></figure>
<h2 id="破解方法-4"><a class="markdownIt-Anchor" href="#破解方法-4"></a> 破解方法</h2>
<p>对于一些使用<code>console</code>判断的可以把<code>console</code>的输出失效。这里可以用<a href="https://github.com/546669204/fuck-debugger-extensions">插件</a>完成</p>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>以上就是一些常见的检测方法了，还有一些可能没有说到，可以看一看<a href="https://github.com/AEPKILL/devtools-detector">devtools-detector</a>里面的实现。</p>
<p>因为前端是源码给到浏览器用户的，其实想要避免被扒还是有点困难，一些组织办法只是增加扒代码一方的麻烦，或者过滤掉一部分人。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://paper.seebug.org/1900/#_24">前端 JS 攻防对抗</a></p>
<p><a href="https://segmentfault.com/a/1190000021510230">如何解决反调试困扰-chrome extension</a></p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/outerHeight">Window.outerHeight</a></p>
<p><a href="https://github.com/sindresorhus/devtools-detect">devtools-detect</a></p>
<p><a href="https://github.com/546669204/fuck-debugger-extensions">fuck-debugger-extensions</a></p>
<p><a href="https://stackoverflow.com/questions/7798748/find-out-whether-chrome-console-is-open">Find out whether Chrome console is open</a></p>
<p><a href="https://github.com/AEPKILL/devtools-detector">devtools-detector</a></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
        <tag>javascript</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>崩坏3rd 2023新年礼盒开箱</title>
    <url>/2023/02/08/honkai-gift-box-2023/</url>
    <content><![CDATA[<blockquote>
<p>mihoyo旗舰店买的崩坏3rd 2023年新年礼盒，包含活页本、虚三家亚克力立牌、春联、贺卡、红包套装和微信红包封面兑换卡。</p>
</blockquote>
<blockquote>
<p>封面来自淘宝商品界面</p>
</blockquote>
<h1 id="礼盒主题"><a class="markdownIt-Anchor" href="#礼盒主题"></a> 礼盒主题</h1>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/front.jpg" alt="正面" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/back.jpg" alt="反面" /></p>
<h1 id="第一层"><a class="markdownIt-Anchor" href="#第一层"></a> 第一层</h1>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/first.jpg" alt="第一层" /></p>
<h2 id="红包包装"><a class="markdownIt-Anchor" href="#红包包装"></a> 红包包装</h2>
<p>御三家的红包封面都挺好看的。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/IMG_20230206_153527.jpg" alt="红包" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/IMG_20230206_163940.jpg" alt="微信红包兑换卡" /></p>
<h2 id="春联"><a class="markdownIt-Anchor" href="#春联"></a> 春联</h2>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/couplets.jpg" alt="春联" /></p>
<h2 id="活页本"><a class="markdownIt-Anchor" href="#活页本"></a> 活页本</h2>
<p>里面也是封面御三家<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/IMG_20230206_154046.jpg" alt="活页本" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/kiana.jpg" alt="琪亚娜" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/mei.jpg" alt="芽衣" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/bronya.jpg" alt="板鸭" /></p>
<h1 id="第二层"><a class="markdownIt-Anchor" href="#第二层"></a> 第二层</h1>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/second.jpg" alt="第二层" /></p>
<h2 id="贺卡"><a class="markdownIt-Anchor" href="#贺卡"></a> 贺卡</h2>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/IMG_20230206_154254.jpg" alt="" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/IMG_20230206_154305.jpg" alt="" /></p>
<h2 id="亚克力立牌"><a class="markdownIt-Anchor" href="#亚克力立牌"></a> 亚克力立牌</h2>
<p>这个亚克力立牌应该是礼盒里我最喜欢的，底座可以合并也可以分开<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/IMG_20230206_163940.jpg" alt="" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/IMG_20230206_154615.jpg" alt="" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.3/IMG_20230206_154634.jpg" alt="" /></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>react native使用github action自动集成android</title>
    <url>/2023/02/20/react-native-github-action/</url>
    <content><![CDATA[<blockquote>
<p>封面 《さくらの雲＊スカアレットの恋》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>因为写了一个基于 react native 的 app，想要使用 github action 来进行自动继承和自动部署。因为我这里没有 ios 开发环境，因此就只写 android 方面的自动部署</p>
<h1 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h1>
<p>在进行脚本部署之前先看一下 react native 给的文档，我们需要对 android 生成的 apk 进行签名，在 windows 上执行以下脚本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">keytool <span class="literal">-genkeypair</span> <span class="literal">-v</span> <span class="literal">-storetype</span> PKCS12 <span class="literal">-keystore</span> my<span class="literal">-upload-key</span>.keystore <span class="literal">-alias</span> my<span class="literal">-key-alias</span> <span class="literal">-keyalg</span> RSA <span class="literal">-keysize</span> <span class="number">2048</span> <span class="literal">-validity</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>
<p>把<code>my-upload-key.keystore</code>和<code>my-key-alias</code>换成你自己需要的名字。记住自己的alias和密码，并且保存好keystore文件，不要上传到版本库或泄露了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.4/generate-key.png" alt="" /></p>
<h1 id="整体流程"><a class="markdownIt-Anchor" href="#整体流程"></a> 整体流程</h1>
<p>我们的action总体流程如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">拉取代码 -&gt; 加载yarn和gradle缓存 -&gt; 安装依赖 -&gt; 编译代码 -&gt; 对包进行签名 -&gt; 发布到release</span><br></pre></td></tr></table></figure>
<h2 id="拉取代码"><a class="markdownIt-Anchor" href="#拉取代码"></a> 拉取代码</h2>
<p>这里直接使用<a href="https://github.com/actions/checkout">action/checkout</a></p>
<h2 id="加载缓存"><a class="markdownIt-Anchor" href="#加载缓存"></a> 加载缓存</h2>
<p>这里使用<a href="https://github.com/actions/cache">action/cache</a>，使用cache存yarn和gradle的缓存</p>
<p>这里不存<code>node_modules</code>是由于不同node版本可能不一样，同时对<code>npm ci</code>不起作用</p>
<p>gradle的缓存时要注意关闭gradle的守护进程，因为gradle有锁，可能导致缓存创建失败，用<code>gradle &lt;task&gt; --no-daemon</code>进行关闭</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.4/cache.png" alt="cache" /><br />
可以看到使用了缓存后总体速度快了很多，</p>
<h3 id="缓存限制"><a class="markdownIt-Anchor" href="#缓存限制"></a> 缓存限制</h3>
<p>一个仓库最多10G缓存，超过上限会将最早的缓存去除，另外上周的缓存也会去除。</p>
<h2 id="安装依赖"><a class="markdownIt-Anchor" href="#安装依赖"></a> 安装依赖</h2>
<p>这里直接<code>yarn</code>就行</p>
<h2 id="编译代码"><a class="markdownIt-Anchor" href="#编译代码"></a> 编译代码</h2>
<p>按照react native官方给的教程，记得加上<code>--no-daemon</code>。可以生成<code>aab</code>格式或者<code>apk</code>格式，<code>aab</code>格式无法直接安装，需要谷歌商店，所以我们生成<code>apk</code>格式。两者区别可以看<a href="https://stackoverflow.com/questions/52059339/difference-between-apk-apk-and-app-bundle-aab">这</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> android &amp;&amp; ./gradlew assembleRelease --no-daemon</span><br></pre></td></tr></table></figure>
<p>对于编译debug代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gradlew assembleDebug</span><br></pre></td></tr></table></figure>
<p>如果要生成<code>aab</code>格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gradlew bundleRelease</span><br></pre></td></tr></table></figure>
<h2 id="签名"><a class="markdownIt-Anchor" href="#签名"></a> 签名</h2>
<p>在react-native给出的例子里，我们需要修改<code>build.gradle</code>文件填写我们前面生成的keystore等信息，不过在GitHub Action里面我们可以以字符串的形式来存放需要保密的信息，而文件形式比较麻烦。</p>
<p>其中一种方法是加密成字符串后然后在github action里面解密</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加密</span></span><br><span class="line">gpg -c --armor release.keystore</span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 前后省略 解密</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">checkout</span></span><br><span class="line">    <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        echo &quot;$&#123;&#123;secrets.RELEASE_KEYSTORE&#125;&#125;&quot; &gt; release.keystore.asc</span></span><br><span class="line"><span class="string">        gpg -d --passphrase &quot;$&#123;&#123;secrets.RELEASE_KEYSTORE_PASSWORD&#125;&#125;&quot; --batch release.keystore.asc &gt; andorid/app/release.keystore</span></span><br></pre></td></tr></table></figure>
<p>我们在这里使用别人写好的<a href="https://github.com/r0adkll/sign-android-release">r0adkll/sign-android-release@v1</a></p>
<p>这个action用的是base64进行加密</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl <span class="built_in">base64</span> &lt; release.keystore | <span class="built_in">tr</span> -d <span class="string">&#x27;\n&#x27;</span> | <span class="built_in">tee</span> release.keystore.base64.txt</span><br></pre></td></tr></table></figure>
<p>配置如下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">steps:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">r0adkll/sign-android-release@v1</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Sign</span> <span class="string">app</span> <span class="string">APK</span></span><br><span class="line">    <span class="comment"># ID used to access action output</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">sign_app</span></span><br><span class="line">    <span class="attr">with:</span></span><br><span class="line">      <span class="attr">releaseDirectory:</span> <span class="string">app/build/outputs/apk/release</span></span><br><span class="line">      <span class="attr">signingKeyBase64:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SIGNING_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">alias:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ALIAS</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">keyStorePassword:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.KEY_STORE_PASSWORD</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">keyPassword:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.KEY_PASSWORD</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure>
<p>签名后的文件输出在<code>$&#123;&#123;steps.sign_app.outputs.signedReleaseFile&#125;&#125;</code></p>
<h2 id="发布到release"><a class="markdownIt-Anchor" href="#发布到release"></a> 发布到release</h2>
<p>这里使用<a href="https://github.com/softprops/action-gh-release">softprops/action-gh-release@v1</a>。</p>
<p>在发布之前我们可能想改一下文件名，加上<code>package.json</code>里面的版本号，这里通过一条命令获取<code>package.json</code>的版本号</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> package.json | jq <span class="string">&#x27;.version&#x27;</span> | <span class="built_in">tr</span> -d <span class="string">&#x27;&quot;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>如果要让下一个step获取之前的step输出，则要在要输出的step中加上id，要输出的step中执行。在其他的step中要用时使用<code>$&#123;&#123;steps.step_id.outputs.name&#125;&#125;</code>，不要忘记里<code>outputs</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&#123;name&#125;=&#123;value&#125;&quot;</span> &gt;&gt; <span class="variable">$GITHUB_OUTPUT</span></span><br></pre></td></tr></table></figure>
<h1 id="完整action文件"><a class="markdownIt-Anchor" href="#完整action文件"></a> 完整action文件</h1>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 工作流名称</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">Assemble</span> <span class="string">Android</span> <span class="string">Release</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 触发条件 有tags时或者push到master时触发</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">tags:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;v*&quot;</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;master&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">assemble:</span></span><br><span class="line">    <span class="attr">environment:</span> <span class="string">release</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="comment"># 使用checkout 拉去代码库</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Get</span> <span class="string">yarn</span> <span class="string">cache</span> <span class="string">directory</span> <span class="string">path</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">yarn-cache-dir-path</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">echo</span> <span class="string">&quot;dir=$(yarn cache dir)&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$GITHUB_OUTPUT</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/cache@v3</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">yarn-cache</span> <span class="comment"># use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != &#x27;true&#x27;`)</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">$&#123;&#123;</span> <span class="string">steps.yarn-cache-dir-path.outputs.dir</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-yarn-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/yarn.lock&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.os &#125;&#125;-yarn-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          yarn</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache</span> <span class="string">gradle</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            ~/.gradle/caches</span></span><br><span class="line"><span class="string">            ~/.gradle/wrapper</span></span><br><span class="line"><span class="string"></span>          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-gradle-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/*.gradle*&#x27;,</span> <span class="string">&#x27;**/gradle-wrapper.properties&#x27;</span><span class="string">)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.os &#125;&#125;-gradle-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Make</span> <span class="string">Gradlew</span> <span class="string">Executable</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">cd</span> <span class="string">android</span> <span class="string">&amp;&amp;</span> <span class="string">chmod</span> <span class="string">+x</span> <span class="string">./gradlew</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">App</span> <span class="string">APK</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          cd android &amp;&amp; ./gradlew assembleRelease --no-daemon</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Sign</span> <span class="string">app</span> <span class="string">APK</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">r0adkll/sign-android-release@v1</span></span><br><span class="line">        <span class="comment"># ID used to access action output</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">sign_app</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">releaseDirectory:</span> <span class="string">android/app/build/outputs/apk/release</span></span><br><span class="line">          <span class="attr">signingKeyBase64:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SIGNING_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">alias:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.KEY_ALIAS</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">keyStorePassword:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.KEY_STORE_PASSWORD</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">keyPassword:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.KEY_PASSWORD</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">get</span> <span class="string">version</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">rn_version</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          echo &quot;version=$(cat package.json | jq &#x27;.version&#x27; | tr -d &#x27;&quot;&#x27;)&quot; &gt;&gt; $GITHUB_OUTPUT</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rename</span> <span class="string">file</span> <span class="string">with</span> <span class="string">version</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">rename</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          mv $&#123;&#123;steps.sign_app.outputs.signedReleaseFile&#125;&#125; android/app/build/outputs/apk/release/app-release-$&#123;&#123;steps.rn_version.outputs.version&#125;&#125;.apk</span></span><br><span class="line"><span class="string">          echo &quot;releaseFile=android/app/build/outputs/apk/release/app-release-$&#123;&#123;steps.rn_version.outputs.version&#125;&#125;.apk&quot; &gt;&gt; $GITHUB_OUTPUT</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Upload</span> <span class="string">release</span> <span class="string">assets</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">softprops/action-gh-release@v1</span></span><br><span class="line">        <span class="attr">if:</span> <span class="string">startsWith(github.ref,</span> <span class="string">&#x27;refs/tags/&#x27;</span><span class="string">)</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">files:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123;steps.rename.outputs.releaseFile&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>
<h1 id="执行action"><a class="markdownIt-Anchor" href="#执行action"></a> 执行action</h1>
<p>现在可以执行action来看看运行结果，目前的触发方式有push、创建<code>v*</code>开头的tag，或者手动触发。我们这里创建一个<code>v1.0.0</code>的tag，可以看到release里面加上了编译后的apk。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.4/release.png" alt="" /></p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://reactnative.dev/docs/signed-apk-android">Publishing to Google Play Store</a></p>
<p><a href="https://github.com/actions/checkout">action/checkout</a></p>
<p><a href="https://github.com/actions/cache">action/cache</a></p>
<p><a href="https://docs.gradle.org/current/userguide/gradle_daemon.html">gradle daemon</a></p>
<p><a href="https://stackoverflow.com/questions/52059339/difference-between-apk-apk-and-app-bundle-aab">Difference between apk (.apk) and app bundle (.aab)</a></p>
<p><a href="https://stefma.medium.com/how-to-store-a-android-keystore-safely-on-github-actions-f0cef9413784">How to store a Android Keystore safely on GitHub Actions</a></p>
<p><a href="https://stackoverflow.com/questions/59191913/how-do-i-get-the-output-of-a-specific-step-in-github-actions">How do I get the output of a specific step in GitHub Actions?</a></p>
<p><a href="https://www.obytes.com/blog/react-native-ci-cd-github-action">react-native-ci-cd-github-action</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>react native</tag>
      </tags>
  </entry>
  <entry>
    <title>ControlNet论文笔记</title>
    <url>/2023/02/23/controlnet-note/</url>
    <content><![CDATA[<blockquote>
<p>封面 《紅月ゆれる恋あかり》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>最近读了ControlNet的论文，觉得还挺有趣就写一下笔记吧。在以往的AI绘画中我们通常使用输入prompt来生成我们图像，这里会有一个问题就是使用prompt通常不能完美的满足我们的需要，如何实现对绘图的控制，这就是ControlNet做的事情。</p>
<h1 id="结构"><a class="markdownIt-Anchor" href="#结构"></a> 结构</h1>
<p>ControlNet是一种网络结构，可以增强特定任务下的预训练模型。ControlNet对神经网络块中的输入条件进行操作从而控制整个神经网络，这里网络块指的是resnet块、CBN块、多头注意力块、transformer块等常用于搭建神经网络的层。其结构如下图所示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.5/block.png" alt="block" /></p>
<p>ControlNet锁住原始网络的参数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span>，并且拷贝了一份可以训练的参数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Θ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\Theta_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，除此以外还有额外的条件向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>。采用拷贝而不是直接训练原始权重是为了避免数据集过小的时候过拟合并且保留从数十亿张图像中训练到的大型模型的质量。</p>
<p>神经网络块和ControlNet之间是通过零卷积（zero<br />
convolution）进行连接，零卷积即1*1大小的卷积，其权重和偏差都被初始化为0。这么设置使得一开始即使ControlNet不进行训练，ControlNet部分的输入和输出都为0加到原始网络里面也不会对原始网络有任何影响。公式推导如下：</p>
<p>假定原始的神经网络，其中一层的定义如下，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>为该层的输出，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>为该层的输入，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span>为该层的参数,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x;\Theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Θ</span><span class="mclose">)</span></span></span></span>表示该层的映射。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=F(x;\Theta)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Θ</span><span class="mclose">)</span></span></span></span></span></p>
<p>加入ControlNet后一层的表示方式如下，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">y_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为新的输出，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Z(x;\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>为零卷积映射，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><msub><mi>z</mi><mn>1</mn></msub></msub></mrow><annotation encoding="application/x-tex">\theta_{z_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9445399999999999em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><msub><mi>z</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">\theta_{z_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9445399999999999em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span>为两个零卷积的参数,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\theta_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为原始网络的权重复制。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>c</mi></msub><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo>+</mo><mi>Z</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>Z</mi><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">;</mo><msub><mi>θ</mi><msub><mi>z</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo><mo separator="true">;</mo><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo><mo separator="true">;</mo><msub><mi>θ</mi><msub><mi>z</mi><mn>2</mn></msub></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_c = F(x;\Theta) + Z(F(x+Z(c;\theta_{z_1});\theta_c);\theta_{z_2})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>当训练刚开始时，由于零卷积的效果公式会有下面的效果</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">;</mo><msub><mi>θ</mi><msub><mi>z</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>Z</mi><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">;</mo><msub><mi>θ</mi><msub><mi>z</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo><mo separator="true">;</mo><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>Z</mi><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">;</mo><msub><mi>θ</mi><msub><mi>z</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo><mo separator="true">;</mo><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo><mo separator="true">;</mo><msub><mi>θ</mi><msub><mi>z</mi><mn>2</mn></msub></msub><mo stretchy="false">)</mo><mo>=</mo><mi>Z</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo><mo separator="true">;</mo><msub><mi>θ</mi><msub><mi>z</mi><mn>2</mn></msub></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
Z(c;\theta_{z_1}) = 0 \\
F(x+Z(c;\theta_{z_1});\theta_c) = F(x;\theta_c) = F(x;\theta) \\
Z(F(x+Z(c;\theta_{z_1});\theta_c);\theta_{z_2}) = Z(F(x;\theta_c);\theta_{z_2}) = 0
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>因此在最开始的时候ControlNet就有原始网络的效果，后面就是在优化条件。</p>
<h2 id="零卷积是怎么学习的"><a class="markdownIt-Anchor" href="#零卷积是怎么学习的"></a> 零卷积是怎么学习的</h2>
<p>当一个卷积权重为0，输入的梯度也会是0，那么这个网络能学到参数吗？<br />
假设有如下公式</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y = wx + b
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></span></p>
<p>此时梯度计算如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><mi>x</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mi>w</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\frac{\partial y}{\partial w}  = x 
\frac{\partial y}{\partial x}  = w 
\frac{\partial y}{\partial b}  = 1 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord mathdefault">x</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>=</mo><mn>0</mn><mi>x</mi><mi mathvariant="normal">≠</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">w=0 x \ne 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时，梯度如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mi mathvariant="normal">≠</mi><mn>0</mn><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mn>0</mn><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac><mi mathvariant="normal">≠</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">\frac{\partial y}{\partial w}  \ne 0 
\frac{\partial y}{\partial x}  = 0 
\frac{\partial y}{\partial b}  \ne 0 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord">0</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord">0</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p>
<p>因此只要一次梯度计算中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>不为0，那么<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>的梯度就不为0，使得更新后的权重<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>不为0，使得后续<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>的梯度不为0，网络开始学习</p>
<h1 id="整体结构"><a class="markdownIt-Anchor" href="#整体结构"></a> 整体结构</h1>
<p>在Image2Image上ControlNet对Stable Diffusion的修改如下<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.5/ControlNet.png" alt="ControlNet" /></p>
<h1 id="训练"><a class="markdownIt-Anchor" href="#训练"></a> 训练</h1>
<p>在ControlNet训练过程中，随机将50%的prompts替换成了空字符串，这有助于ControlNet从输入的条件向量中识别语义信息，这主要因为当prompt对SD Model不可见时，encoder倾向于从输入的条件向量中学习更多语义以替代prompt。</p>
<h2 id="小规模训练"><a class="markdownIt-Anchor" href="#小规模训练"></a> 小规模训练</h2>
<p>当计算量有限的时候，可以通过选择性的断开ControlNet和SD Model的部分连接加速训练，默认的模型如上所示，ControlNet和SD Middle Block、SD Decoder Block 1,2,3,4相连接，当与SD Decoder Block 1,2,3,4的连接断开时可以在3070TI的笔记本上提升1.6倍速度，当输出结构和条件之间有关联时可以将这些连接重新关联。</p>
<h2 id="大规模训练"><a class="markdownIt-Anchor" href="#大规模训练"></a> 大规模训练</h2>
<p>当计算量和数据集较大时，过拟合的风险较低，可以先训练ControlNet到足够的迭代次数，然后解锁stable diffusion的全部权重共同训练。</p>
<h1 id="条件变量"><a class="markdownIt-Anchor" href="#条件变量"></a> 条件变量</h1>
<p>官方给的条件变量有Canny算子计算的原图边缘、霍夫变换计算的、姿态检测得到的还有用户涂鸦线稿，主要都是生成了一个条件，后续stable diffusion生成的图片都与条件有一定的相似度。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://arxiv.org/abs/2302.05543">Adding Conditional Control to Text-to-Image Diffusion Models</a></p>
<p><a href="https://github.com/lllyasviel/ControlNet">ControlNet</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>SegResNet论文笔记</title>
    <url>/2023/02/25/segresnet-note/</url>
    <content><![CDATA[<blockquote>
<p>封面《AMBITIOUS MISSION》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>最近读了《Automated head and neck tumor segmentation from 3D PET/CT HECKTOR 2022 challenge report》这篇论文，里面提到使用的autosegresnet是使用的segresnet作为backbone。因此来读一下SegResNet的论文。这里的SegResNet是monai项目中的叫法，monai是一个用于医疗影像的库，该网络的api文档在<a href="https://docs.monai.io/en/stable/networks.html#segresnet">这</a>源码在<a href="https://docs.monai.io/en/stable/_modules/monai/networks/nets/segresnet.html">这</a>。比较简单易懂的源码在这<a href="https://github.com/IAmSuyogJadhav/3d-mri-brain-tumor-segmentation-using-autoencoder-regularization">github</a></p>
<h1 id="网络结构"><a class="markdownIt-Anchor" href="#网络结构"></a> 网络结构</h1>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.6/SegResNet.png" alt="网络结构" /><br />
SegResNet的网络结构如上图所示，采用CNN的encoder-decoder结构，encoder来提取图像特征，decoder来重构分割结果，此外还引入了VAE结构来恢复原始图像，VAE部分只在训练期间训练encoder。其中绿色的部分是一个类似于ResNet的部分，其中由GN-RELU-CONV3x3x3-GN-RELU-CONV3x3x3组成。</p>
<h2 id="encoder"><a class="markdownIt-Anchor" href="#encoder"></a> encoder</h2>
<p>encoder部分中，每个res block由2组conv、norm和relu组成，norm部分采用Group Norm，在Batch较小的时候效果比Batch Norm效果好，encoder部分中和CNN类似，每次下采样的时候通道数翻一倍。卷积的初始通道数为32，总共下采样8倍。</p>
<h2 id="decoder"><a class="markdownIt-Anchor" href="#decoder"></a> decoder</h2>
<p>decoder部分与encoder部分类似，但是每层只有一个block。上采样采用1x1x1大小的卷积输出通道数减半，和3D双线性上采样再加上同层的encoder的输出。最后一层的卷积采用1x1x1的卷积，输出通道数为分割的类别，激活函数使用sigmoid。</p>
<h2 id="vae"><a class="markdownIt-Anchor" href="#vae"></a> VAE</h2>
<p>SegResNet的输入大小为4x160x192x128，其中encoder部分的输出为256x20x24x16，这里SegResNet采用了VAE结构。VAE的结构和内容下次再讲，这里需要知道的是VAE需要通过训练获取均值向量mean和方差向量std，然后通过重参化进行采样，避免直接采样使得网络不可导。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mo>=</mo><mi>m</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo>+</mo><mi>ε</mi><mo>×</mo><mi>s</mi><mi>t</mi><mi>d</mi><mspace width="2em"/><mi>ε</mi><mo>∼</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Z = mean + \varepsilon \times std \qquad   \varepsilon \sim \mathcal{N}(0, 1)   
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ε</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:2em;"></span><span class="mord mathdefault">ε</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14736em;">N</span></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p>SegResNet中将输出的256通道拆分为2个128通道分别作为均值和方差。结构类似于decoder部分，但是不使用encoder部分的输出。</p>
<h1 id="loss"><a class="markdownIt-Anchor" href="#loss"></a> loss</h1>
<p>SegResNet的Loss包含3部分，公式如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><msub><mi>L</mi><mrow><mi>d</mi><mi>i</mi><mi>c</mi><mi>e</mi></mrow></msub><mo>+</mo><mn>0.1</mn><mo>∗</mo><msub><mi>L</mi><msub><mi>L</mi><mn>2</mn></msub></msub><mo>+</mo><mn>0.1</mn><mo>∗</mo><msub><mi>L</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L = L_{dice} + 0.1 * L_{L_2} + 0.1 * L_{KL} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="dice-loss"><a class="markdownIt-Anchor" href="#dice-loss"></a> dice loss</h2>
<p>dice loss用于decoder部分输出和gt之间的比较，原始是分割3个类，这里每个分割类别都算了一个dice loss</p>
<h2 id="l2-loss"><a class="markdownIt-Anchor" href="#l2-loss"></a> l2 loss</h2>
<p>l2 loss用于计算VAE部分重构输出和原始图像之间的loss</p>
<h2 id="kl-loss"><a class="markdownIt-Anchor" href="#kl-loss"></a> kl loss</h2>
<p>这是来自于VAE部分的loss，在这计算公式如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo>=</mo><mn>1</mn><mfrac><mn>1</mn><mrow><mo>∑</mo><msup><mi>μ</mi><mn>2</mn></msup><mo>+</mo><msup><mi>σ</mi><mn>2</mn></msup><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><msup><mi>σ</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">L_{KL} = 1 \frac{1}{\sum \mu^2 + \sigma^2 - log\sigma^2 - 1 }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25745em;vertical-align:-0.93601em;"></span><span class="mord">1</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93601em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>个人看来在SegResNet中采用VAE作为其中是很有创新意义，采用原始数据来协调训练encoder部分，提高了网络性能。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://arxiv.org/abs/2209.10809">Automated head and neck tumor segmentation from 3D PET/CT HECKTOR 2022 challenge report</a></p>
<p><a href="https://arxiv.org/abs/1810.11654">3D MRI brain tumor segmentation using autoencoder regularization</a></p>
<p><a href="https://docs.monai.io/en/stable/index.html">monai</a></p>
<p><a href="https://docs.monai.io/en/stable/networks.html#segresnet">SegResNet</a></p>
<p><a href="https://github.com/IAmSuyogJadhav/3d-mri-brain-tumor-segmentation-using-autoencoder-regularization">3D MRI Brain Tumor Segmentation Using Autoencoder Regularization (Github)</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>UNETR论文笔记</title>
    <url>/2023/10/05/unetr-note/</url>
    <content><![CDATA[<blockquote>
<p>封面《殻ノ少女》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>最近读了UNETR的论文，需要了解这个模型，因此就记录一下学习笔记。UNETR是一种将UNet和Transformer结合的网络结构，可以用于图像分割任务。</p>
<h1 id="结构"><a class="markdownIt-Anchor" href="#结构"></a> 结构</h1>
<p>传统CNN网络在分割领域有了很大的成功，但是CNN因其结构原因在全局特征信息和长范围空间依赖性上表现较差，这对分割结果有很大的影响。</p>
<p>Transformer因其attention机制，在全局特征方面有很好的表现，因此UNETR提出了一种新的网络结构，将UNet和Transformer结合，如下图所示。<br />
其相对其他以往的分割网络有一下特征</p>
<ul>
<li>直接为3D分割量身定制，直接使用体积数据</li>
<li>直接将transformer作为网络的编码器，而非使用其作为网络中的attention层。所有ViT中间层的输出大小都是一样的</li>
<li>不依赖CNN backbone生成输入序列，而是直接使用tokenized patch</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.7/UNETR.png" alt="UNETR" /></p>
<p>在backbone方面完全采用了ViT的结构，其结构与Transformer一样，patch embedding采用了卷积网络结构，patch size和stride size都为16，并将大小为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mi>H</mi><mo separator="true">,</mo><mi>W</mi><mo separator="true">,</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(N,C,H,W,D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span>的图像转换为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mi>L</mi><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(N,L,C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><mfrac><mi>H</mi><mn>4</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>4</mn></mfrac><mo>×</mo><mfrac><mi>D</mi><mn>4</mn></mfrac></mrow><annotation encoding="application/x-tex">L=\frac{H}{4} × \frac{W}{4} × \frac{D}{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<p>在特征金字塔的路径上先将ViT中3、6、9、12层的输出从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mi>L</mi><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(N,L,C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span> reshape成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mfrac><mi>H</mi><mn>16</mn></mfrac><mo separator="true">,</mo><mfrac><mi>W</mi><mn>16</mn></mfrac><mo separator="true">,</mo><mfrac><mi>D</mi><mn>16</mn></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(N,C,\frac{H}{16},\frac{W}{16},\frac{D}{16})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>再进行反卷积上采样，对于下方的特征则是直接反卷积上采样，两者特征直接拼接再卷积提取特征。</p>
<h1 id="损失函数"><a class="markdownIt-Anchor" href="#损失函数"></a> 损失函数</h1>
<p>损失函数方面采用soff dice loss + CE loss，其定义如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>G</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mn>2</mn><mi>J</mi></mfrac><msubsup><mi mathvariant="normal">Σ</mi><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>J</mi></msubsup><mfrac><mrow><msubsup><mi mathvariant="normal">Σ</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>I</mi></msubsup><msub><mi>G</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><msub><mi>Y</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><mrow><msubsup><mi mathvariant="normal">Σ</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>I</mi></msubsup><msub><mi>G</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>+</mo><msubsup><mi mathvariant="normal">Σ</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>I</mi></msubsup><msub><mi>Y</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow></mfrac><mo>−</mo><mfrac><mn>1</mn><mi>I</mi></mfrac><msubsup><mi mathvariant="normal">Σ</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>I</mi></msubsup><msubsup><mi mathvariant="normal">Σ</mi><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>J</mi></msubsup><msub><mi>G</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> L(G,Y) = 1 - \frac{2}{J} \Sigma_{j=1}^J \frac{\Sigma_{i=1}^I G_{i,j}Y_{i,j} }{\Sigma_{i=1}^I G_{i,j} + \Sigma_{i=1}^I Y_{i,j}} 
 - \frac{1}{I} \Sigma_{i=1}^I \Sigma_{j=1}^J G_{i,j}log(Y_{i,j})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.51757em;vertical-align:-0.999239em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.09618em;">J</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183309999999999em;"><span style="top:-2.286869em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231310000000001em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231310000000001em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.999239em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.09618em;">J</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span>是体素数量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi></mrow><annotation encoding="application/x-tex">J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span></span>是类别数量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span>是ground truth，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>是预测值。</p>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>笔者在<a href="http://www.isles-challenge.org/">ISLES2022</a>数据集上以输入大小(2,96,96,96)，优化器为adamw，损失函数为dice loss的情况下训练了UNETR，是目前各个网络这效果最好的，其dice系数在79.9%。但是由于使用了transformer其计算量和显存开销依然不可忽视。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://arxiv.org/abs/2103.10504">UNETR</a></p>
<p><a href="http://www.isles-challenge.org/">ISLES</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>metaformer论文笔记</title>
    <url>/2023/10/06/metaformer-note/</url>
    <content><![CDATA[<blockquote>
<p>封面 《天結いキャッスルマイスター》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>因为最近的用的网络里面采用了 Metaformer 作为 backbone，因此读一下 Metaformer 的论文，顺便记录一下。</p>
<h1 id="结构"><a class="markdownIt-Anchor" href="#结构"></a> 结构</h1>
<p>Transformer block 一般由两部分组成，一个是令牌混合器（token mixer），另一个是融合通道信息的（channel mlp）。一个普遍的观点是，attention 机制在 transformer 中共享最大，但是最近的工作表明将 attention 换成 Spatial MLP 后模型的表现仍然良好。基于这个观察 Metaformer 的作者提出了 Metaformer，将 transformer 中的 token mixer 换成其他模块，其认为 transformer 的宏观设计比 token mixer 更为重要。</p>
<p>metaformer 的结构如下，其一共有 4 种 former，分别为 IdentityFormer，RandFormer,ConvFormer,TransFormer。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.8/metaformer.png" alt="" /></p>
<p>Metaformer block 的公式总结如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>X</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>X</mi><mo>+</mo><mi>T</mi><mi>o</mi><mi>k</mi><mi>e</mi><mi>n</mi><mi>M</mi><mi>i</mi><mi>x</mi><mi>e</mi><mi>r</mi><mo stretchy="false">(</mo><mi>N</mi><mi>o</mi><mi>r</mi><msub><mi>m</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msup><mi>X</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo>=</mo><msup><mi>X</mi><mo mathvariant="normal">′</mo></msup><mo>+</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>N</mi><mi>o</mi><mi>r</mi><msub><mi>m</mi><mn>2</mn></msub><mo stretchy="false">(</mo><msup><mi>X</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><msub><mi>W</mi><mn>1</mn></msub><mo stretchy="false">)</mo><msub><mi>W</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">X&#x27; = X + TokenMixer(Norm_1(X)) \\

X&#x27;&#x27; = X&#x27; + \sigma(Norm_2(X&#x27;)W_1)W_2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8852220000000001em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>o</mi><mi>r</mi><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">Norm_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>o</mi><mi>r</mi><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">Norm_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为正则化，TokenMixer 为 metaformer 的令牌混合器，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span>为激活函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">W_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">W_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为 channel MLP 的可学习参数</p>
<h2 id="identityformer"><a class="markdownIt-Anchor" href="#identityformer"></a> IdentityFormer</h2>
<p>IdentityFormer 中给 IdentityMapping 就是直接进行恒等映射</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>y</mi><mi>M</mi><mi>a</mi><mi>p</mi><mi>p</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">IdentityMapping(X) = X
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span></span></p>
<h2 id="randomformer"><a class="markdownIt-Anchor" href="#randomformer"></a> RandomFormer</h2>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi>o</mi><mi>m</mi><mi>M</mi><mi>i</mi><mi>x</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>X</mi><msub><mi>W</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">RandomMixing(X) = XW_R
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>N</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">X \in R^{N \times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span> 是输入序列长度为 N，通道数为 C，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub><mo>∈</mo><msup><mi>R</mi><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">W_R \in R^{N \times N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></span>，为一个矩阵，其在随机初始化后冻结不可训练</p>
<h2 id="convformer"><a class="markdownIt-Anchor" href="#convformer"></a> ConvFormer</h2>
<p>卷积采用mobileNetV2的结构中翻转可分离卷积的设计，采用pointwise卷积和depthwise卷积的结构，其公式如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi>C</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>o</mi><mi>l</mi><mi>u</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>s</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><mo>=</mo><mrow><mi>C</mi><mi>o</mi><mi>n</mi><msub><mi>v</mi><mrow><mi>p</mi><mi>w</mi><mn>2</mn></mrow></msub></mrow><mo stretchy="false">(</mo><mrow><mi>C</mi><mi>o</mi><mi>n</mi><msub><mi>v</mi><mrow><mi>d</mi><mi>w</mi></mrow></msub></mrow><mo stretchy="false">(</mo><mi>σ</mi><mo stretchy="false">(</mo><mrow><mi>C</mi><mi>o</mi><mi>n</mi><msub><mi>v</mi><mrow><mi>p</mi><mi>w</mi><mn>1</mn></mrow></msub></mrow><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">{Convolutions(X)} = {Conv_{pw2}}( {Conv_{dw}}(\sigma ({Conv_{pw1}}(X))))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="caformer"><a class="markdownIt-Anchor" href="#caformer"></a> CAFormer</h2>
<p>CAFormer如上图所示，即backbone的部分为convformer，部分为transformer。</p>
<h1 id="starrelu激活函数"><a class="markdownIt-Anchor" href="#starrelu激活函数"></a> StarRELU激活函数</h1>
<h2 id="relu"><a class="markdownIt-Anchor" href="#relu"></a> ReLU</h2>
<p>在大多transformer中使用ReLU激活函数,每个ReLU消耗1FLOP计算单元</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ReLU(x) = max(0,x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="gelu"><a class="markdownIt-Anchor" href="#gelu"></a> GELU</h2>
<p>而GPT、Bert和ViT等网络默认使用GELU激活函数，其计算公式如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>E</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≈</mo><mn>0.5</mn><mo>×</mo><mi>x</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>tanh</mi><mo>⁡</mo><mo stretchy="false">(</mo><msqrt><mfrac><mn>2</mn><mi>π</mi></mfrac></msqrt><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>0.044715</mn><msup><mi>x</mi><mn>3</mn></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GELU(x) = x\Phi(x) \approx 0.5 \times x(1 + \tanh(\sqrt{\frac{2}{\pi}}(x + 0.044715x^3)))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.788405em;"></span><span class="mop">tanh</span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.651595em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.6115950000000003em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,
-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,
25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,
-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079
c169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6
s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2z M1001 80H400000v40H1014z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.788405em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">4</span><span class="mord">4</span><span class="mord">7</span><span class="mord">1</span><span class="mord">5</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Phi(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>为高斯分布的累积分布函数(Cumulative Distribution Function for Gaussian Distribution ,CDFGD)，每个计算单元消耗14FLOPS,tanh简单视作消耗6个FLOPS，乘加算一个</p>
<h2 id="squaredrelu"><a class="markdownIt-Anchor" href="#squaredrelu"></a> SquaredReLU</h2>
<p>为了简化GELU，作者发现可以将CDFGD替换为ReLU，,每个计算单元消耗2FLOPS</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>d</mi><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">SquaredReLU(x) = xReLU(x) = (ReLU(x))^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">u</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="starrelu"><a class="markdownIt-Anchor" href="#starrelu"></a> StarReLU</h2>
<p>作者发现SquaredReLU的性能在某些任务不太行，其假设输入性能差是输出的分布变化导致，假设输入遵循均值为0，方差为1的高斯分布，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∼</mo><mi>N</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x \sim N(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，此时我们有</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><mi>E</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>E</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mn>0.5</mn><mspace linebreak="newline"></mspace><mi>E</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>4</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><msup><mi>z</mi><mn>4</mn></msup><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><msup><mi>z</mi><mn>2</mn></msup><mn>2</mn></mfrac><mo stretchy="false">)</mo><mi>d</mi><mi>z</mi><mspace linebreak="newline"></mspace><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><msup><mi>z</mi><mn>3</mn></msup><mi>d</mi><mo stretchy="false">(</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><msup><mi>z</mi><mn>2</mn></msup><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><msup><mi>z</mi><mn>3</mn></msup><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt></mfrac><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><msup><mi>z</mi><mn>2</mn></msup><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msubsup><mi mathvariant="normal">∣</mi><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mo>+</mo><mn>3</mn><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><msup><mi>z</mi><mn>2</mn></msup><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt></mfrac><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><msup><mi>z</mi><mn>2</mn></msup><mn>2</mn></mfrac><mo stretchy="false">)</mo><mi>d</mi><mi>z</mi><mspace linebreak="newline"></mspace><mo>=</mo><mn>0</mn><mo>+</mo><mn>3</mn><mi>E</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn><mspace linebreak="newline"></mspace><mi>E</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>4</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>E</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>4</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mn>1.5</mn><mspace linebreak="newline"></mspace><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>4</mn></msup><mo stretchy="false">)</mo><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mn>1.5</mn><mo>−</mo><mn>0.</mn><msup><mn>5</mn><mn>2</mn></msup><mo>=</mo><mn>1.25</mn></mrow><annotation encoding="application/x-tex">E(x^2) = Var(x) = 1 \\
E((ReLU(x))^2) = \frac{1}{2}E(x^2) = 0.5 \\
E(x^4) = \frac{1}{\sqrt{2\pi}}\int_{-\infty}^{+\infty} z^4exp(-\frac{z^2}{2})dz  \\
     =  -\frac{1}{\sqrt{2\pi}}\int_{-\infty}^{+\infty} z^3d(exp(-\frac{z^2}{2})) \\
  = (-z^3\frac{1}{\sqrt{2\pi}}exp(-\frac{z^2}{2}))|_{-\infty}^{+\infty} + 3\int_{-\infty}^{+\infty}  z^2\frac{1}{\sqrt{2\pi}}exp(-\frac{z^2}{2})dz \\
  = 0 + 3E(x^2) = 3 \\
E((ReLU(x))^4) = \frac{1}{2}E(x^4) = 1.5 \\
Var((ReLU(x))^2) = E((ReLU(x))^4) - E((ReLU(x))^2)^2 = 1.5 - 0.5^2 = 1.25
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.491512em;vertical-align:-0.970281em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212310000000002em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.491512em;vertical-align:-0.970281em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212310000000002em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4211080000000003em;vertical-align:-0.93em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.491512em;vertical-align:-0.970281em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212310000000002em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">5</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span></span></span></span></span></p>
<p>为了消除偏差影响，采用减去均值除以方差的形式，公式如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>t</mi><mi>a</mi><mi>r</mi><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><msqrt><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo></mrow></msqrt></mfrac><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mn>0.5</mn></mrow><msqrt><mn>1.25</mn></msqrt></mfrac><mspace linebreak="newline"></mspace><mo>≈</mo><mn>0.8944</mn><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mn>0.4472</mn></mrow><annotation encoding="application/x-tex">StarReLU(x) = \frac{(ReLU(x))^2 - E((ReLU(x))^2)}{\sqrt{Var((ReLU(x))^2)}} = \frac{(ReLU(x))^2 - 0.5}{\sqrt{1.25}} \\
\approx  0.8944(ReLU(x))^2 - 0.4472
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.621108em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.175em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,
158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067
c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,
175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71
c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,
-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26
s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4211080000000003em;vertical-align:-0.93em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">1</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.48312em;vertical-align:0em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">8</span><span class="mord">9</span><span class="mord">4</span><span class="mord">4</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mord">4</span><span class="mord">7</span><span class="mord">2</span></span></span></span></span></p>
<p>作者假定输入成高斯分布，为了适应不同情况，将将其改为可学习的缩放和偏移参数，公式如下，这样只消耗4个FLOPS</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>t</mi><mi>a</mi><mi>r</mi><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mo>⋅</mo><mo stretchy="false">(</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">StarReLU(x) = s \cdot (ReLU(x))^2 + \beta
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span></span></p>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>本篇论文认为transformer的宏观设计比token mixer更为重要，在将token mixer换成pooling，identity，conv等操作后，模型的表现依然良好。并且提出了一种新的激活函数StarReLU，其消耗的FLOPS更少。</p>
<p>笔者在自己的数据集上尝试使用metaformer，其参数量比UNETR少，且效果接近UNETR。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://arxiv.org/abs/2111.11418">MetaFormer Is Actually What You Need for Vision</a></p>
<p><a href="https://arxiv.org/abs/2210.13452">MetaFormer Baselines for Vision</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>动态蛇形卷积笔记</title>
    <url>/2023/11/14/dynamic-snake-convolution-note/</url>
    <content><![CDATA[<blockquote>
<p>封面 《時計仕掛けのレイライン -陽炎に彷徨う魔女-》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>最近看到了动态蛇形卷积这一模块，感觉其描述的按血管卷积和适合细长结构比较适合我的场景，因此阅读了解一下，并记录一下论文笔记。</p>
<h1 id="结构"><a class="markdownIt-Anchor" href="#结构"></a> 结构</h1>
<p>尽管现在有SAM、Universal Model等优秀模型，许多分割任务只需要在这上面进行简单微调即可，但是在一些复杂领域，大模型暂时没有很好的覆盖，例如一些复杂结构管状结构，如（3D血管、气管）。整个动态蛇形卷积受到可形变卷积(Deformable Convolution)的启发，其将可形变卷积的偏移量从固定的偏移量变成了动态的偏移量，从而使得其可以更好的适应细长结构。</p>
<p>可形变卷积效果如下，可以看到通过一个卷积计算特征图的偏移量，看起代码可以看到这些偏置只有一个范围约束，形变范围非常的自由，而蛇形卷积作者认为这样子容易让模型丢失占比小的细小结构，对于细长管状结构分割任务来说是一个巨大挑战。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.9/DeformConv.png" alt="可形变卷积" /></p>
<p>其提出对可形变卷积增加一个连续性的约束，使其像蛇一样连续移动，一节节如蛇一样移动，从而使得其可以更好的适应细长结构，每个卷积采用一个方向作为基准自由摆动。<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.9/DSConv.png" alt="蛇形卷积" /><br />
x方向的蛇形卷积，可以看到通过约束，相邻两个感受野y坐标相差<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>±</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\pm1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord">1</span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mrow><mi>i</mi><mo>±</mo><mi>c</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mi>c</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>+</mo><mi>c</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>c</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>+</mo><msubsup><mi mathvariant="normal">Σ</mi><mi>i</mi><mrow><mi>i</mi><mo>+</mo><mi>c</mi></mrow></msubsup><mi mathvariant="normal">Δ</mi><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mi>c</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mi>c</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>c</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>+</mo><msubsup><mi mathvariant="normal">Σ</mi><mrow><mi>i</mi><mo>−</mo><mi>c</mi></mrow><mi>i</mi></msubsup><mi mathvariant="normal">Δ</mi><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex"> K_{i\pm c}= 
    \left\{ 
        \begin {aligned} 
            (x_{i+c}, y_{i+c}) = (x_i+c, y_i + \Sigma _{i}^{i+c} \Delta y) \\ 
            (x_{i-c}, y_{i-c}) = (x_i-c, y_i + \Sigma _{i-c}^{i} \Delta y) \\ 
        \end {aligned}    
    \right.  
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">±</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.069328em;vertical-align:-1.284664em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.784664em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-2.433005em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266995em;"><span></span></span></span></span></span></span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-2.375336em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">c</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305331em;"><span></span></span></span></span></span></span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.284664em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>同理y方向蛇形卷积公式如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mrow><mi>j</mi><mo>±</mo><mi>c</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>j</mi><mo>+</mo><mi>c</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>j</mi><mo>+</mo><mi>c</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>j</mi></msub><mo>+</mo><msubsup><mi mathvariant="normal">Σ</mi><mi>j</mi><mrow><mi>j</mi><mo>+</mo><mi>c</mi></mrow></msubsup><mi mathvariant="normal">Δ</mi><mi>x</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>j</mi><mo>−</mo><mi>c</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>j</mi><mo>−</mo><mi>c</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>j</mi></msub><mo>+</mo><msubsup><mi mathvariant="normal">Σ</mi><mrow><mi>j</mi><mo>−</mo><mi>c</mi></mrow><mi>j</mi></msubsup><mi mathvariant="normal">Δ</mi><mi>x</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo>−</mo><mi>c</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex"> K_{j\pm c}=\left \{ \begin {aligned} (x_{j+c}, y_{j+c}) = (x_{j} + \Sigma _{j}^{j+c} \Delta x, y_j+c), \\ (x_{j-c}, y_{j-c}) = (x_{j} + \Sigma _{j-c}^{j} \Delta x, y_j-c), \\ \end {aligned} \right. 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">±</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.311088em;vertical-align:-1.405544em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.905544em;"><span style="top:-3.962972em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mord">Δ</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.3074280000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">c</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mord">Δ</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.405544em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>蛇形卷积和其他卷积的对比效果如下，可以看到感受野的不同非常明显，且看在实际图像上的感受野，和可形变卷积比跟适合细长管状结构。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.9/conv-compare.png" alt="卷积感受野对比" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.9/conv-effect.png" alt="卷积效果对比,一共三层卷积729个点（红色）的感受野，黄色为卷积核的位置" /></p>
<h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1>
<p>动态蛇形卷积的代码如下，是直接从官方库修改，官方代码中在蛇形卷积中有一些重复代码，但是为了还原效果进行验证还先不改</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line"><span class="keyword">from</span> monai.networks.blocks.convolutions <span class="keyword">import</span> Convolution</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DSConv3d</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        in_ch: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        out_ch: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        kernel_size: <span class="built_in">int</span> = <span class="number">3</span>,</span></span><br><span class="line"><span class="params">        extend_scope: <span class="built_in">int</span> = <span class="number">1</span>,</span></span><br><span class="line"><span class="params">        morph: <span class="built_in">int</span> = <span class="number">0</span>,</span></span><br><span class="line"><span class="params">        if_offset: <span class="built_in">bool</span> = <span class="literal">True</span>,</span></span><br><span class="line"><span class="params">    </span>):</span><br><span class="line">        <span class="built_in">super</span>(DSConv3d, self).__init__()</span><br><span class="line">        <span class="keyword">assert</span> out_ch &gt;= <span class="number">4</span>, <span class="string">&quot;out_ch must be larger than 4&quot;</span></span><br><span class="line">        self.offset_conv = nn.Conv3d(in_ch, <span class="number">3</span> * <span class="number">2</span> * kernel_size, <span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line">        self.bn = nn.BatchNorm3d(<span class="number">3</span> * <span class="number">2</span> * kernel_size)</span><br><span class="line">        self.kernel_size = kernel_size</span><br><span class="line"></span><br><span class="line">        self.if_offset = if_offset</span><br><span class="line">        self.morph = morph</span><br><span class="line">        self.extend_scope = extend_scope</span><br><span class="line"></span><br><span class="line">        self.dcn_conv_x = nn.Conv3d(</span><br><span class="line">            in_ch,</span><br><span class="line">            out_ch,</span><br><span class="line">            kernel_size=(<span class="number">1</span>, <span class="number">1</span>, kernel_size),</span><br><span class="line">            stride=(<span class="number">1</span>, <span class="number">1</span>, kernel_size),</span><br><span class="line">            padding=<span class="number">0</span>,</span><br><span class="line">        )  <span class="comment">#</span></span><br><span class="line">        self.dcn_conv_y = nn.Conv3d(</span><br><span class="line">            in_ch,</span><br><span class="line">            out_ch,</span><br><span class="line">            kernel_size=(<span class="number">1</span>, kernel_size, <span class="number">1</span>),</span><br><span class="line">            stride=(<span class="number">1</span>, kernel_size, <span class="number">1</span>),</span><br><span class="line">            padding=<span class="number">0</span>,</span><br><span class="line">        )  <span class="comment">#</span></span><br><span class="line">        self.dcn_conv_z = nn.Conv3d(</span><br><span class="line">            in_ch,</span><br><span class="line">            out_ch,</span><br><span class="line">            kernel_size=(kernel_size, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">            stride=(kernel_size, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">            padding=<span class="number">0</span>,</span><br><span class="line">        )  <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">        self.dcn_conv = nn.Conv3d(</span><br><span class="line">            in_ch, out_ch, kernel_size=kernel_size, stride=kernel_size, padding=<span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">        self.gn = nn.GroupNorm(out_ch // <span class="number">4</span>, out_ch)</span><br><span class="line">        self.relu = nn.ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, f</span>):</span><br><span class="line">        offset = self.offset_conv(f)</span><br><span class="line">        offset = self.bn(offset)</span><br><span class="line">        offset = torch.tanh(offset)</span><br><span class="line">        input_shape = f.shape</span><br><span class="line"></span><br><span class="line">        dcn = DCN3d(input_shape, self.kernel_size, self.extend_scope, self.morph)</span><br><span class="line">        deformed_feature = dcn.deform_conv(f, offset, self.if_offset)</span><br><span class="line">        <span class="keyword">if</span> self.morph == <span class="number">0</span>:</span><br><span class="line">            x = self.dcn_conv_x(deformed_feature)</span><br><span class="line">            x = self.gn(x)</span><br><span class="line">            x = self.relu(x)</span><br><span class="line">            <span class="keyword">return</span> x</span><br><span class="line">        <span class="keyword">elif</span> self.morph == <span class="number">1</span>:</span><br><span class="line">            x = self.dcn_conv_y(deformed_feature)</span><br><span class="line">            x = self.gn(x)</span><br><span class="line">            x = self.relu(x)</span><br><span class="line">            <span class="keyword">return</span> x</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            x = self.dcn_conv_z(deformed_feature)</span><br><span class="line">            x = self.gn(x)</span><br><span class="line">            x = self.relu(x)</span><br><span class="line">            <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DCN3d</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, input_shape, kernel_size, extend_scope, morph</span>):</span><br><span class="line">        self.num_points = kernel_size</span><br><span class="line">        self.depth = input_shape[<span class="number">2</span>]</span><br><span class="line">        self.width = input_shape[<span class="number">3</span>]</span><br><span class="line">        self.height = input_shape[<span class="number">4</span>]</span><br><span class="line">        self.morph = morph</span><br><span class="line">        self.extend_scope = extend_scope  <span class="comment"># offset (-1 ~ 1) * extend_scope</span></span><br><span class="line">        self.num_batch = input_shape[<span class="number">0</span>]  <span class="comment"># (N,C,D,W,H)</span></span><br><span class="line">        self.num_channels = input_shape[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    input: offset [N,3*K,D,W,H]</span></span><br><span class="line"><span class="string">    output: [N,1,K*D,W,H]   coordinate map</span></span><br><span class="line"><span class="string">    output: [N,1,K,K*W,H]   coordinate map</span></span><br><span class="line"><span class="string">    output: [N,1,D,W,K*H]   coordinate map</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_coordinate_map_3D</span>(<span class="params">self, offset, if_offset</span>):</span><br><span class="line">        device = offset.device</span><br><span class="line">        <span class="comment"># offset</span></span><br><span class="line">        offset1, offset2 = torch.split(offset, <span class="number">3</span> * self.num_points, dim=<span class="number">1</span>)</span><br><span class="line">        z_offset1, y_offset1, x_offset1 = torch.split(offset1, self.num_points, dim=<span class="number">1</span>)</span><br><span class="line">        z_offset2, y_offset2, x_offset2 = torch.split(offset2, self.num_points, dim=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        z_center = torch.arange(<span class="number">0</span>, self.depth).repeat([self.width * self.height])</span><br><span class="line">        z_center = z_center.reshape(self.width, self.height, self.depth)</span><br><span class="line">        z_center = z_center.permute(<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">        z_center = z_center.reshape([-<span class="number">1</span>, self.depth, self.width, self.height])</span><br><span class="line">        z_center = z_center.repeat([self.num_points, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]).<span class="built_in">float</span>()</span><br><span class="line">        z_center = z_center.unsqueeze(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        y_center = torch.arange(<span class="number">0</span>, self.width).repeat([self.height * self.depth])</span><br><span class="line">        y_center = y_center.reshape(self.height, self.depth, self.width)</span><br><span class="line">        y_center = y_center.permute(<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">        y_center = y_center.reshape([-<span class="number">1</span>, self.depth, self.width, self.height])</span><br><span class="line">        y_center = y_center.repeat([self.num_points, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]).<span class="built_in">float</span>()</span><br><span class="line">        y_center = y_center.unsqueeze(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        x_center = torch.arange(<span class="number">0</span>, self.height).repeat([self.depth * self.width])</span><br><span class="line">        x_center = x_center.reshape(self.depth, self.width, self.height)</span><br><span class="line">        x_center = x_center.permute(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">        x_center = x_center.reshape([-<span class="number">1</span>, self.depth, self.width, self.height])</span><br><span class="line">        x_center = x_center.repeat([self.num_points, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]).<span class="built_in">float</span>()</span><br><span class="line">        x_center = x_center.unsqueeze(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.morph == <span class="number">0</span>:</span><br><span class="line">            z = torch.linspace(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">            y = torch.linspace(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">            x = torch.linspace(</span><br><span class="line">                -<span class="built_in">int</span>(self.num_points // <span class="number">2</span>),</span><br><span class="line">                <span class="built_in">int</span>(self.num_points // <span class="number">2</span>),</span><br><span class="line">                <span class="built_in">int</span>(self.num_points),</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">with</span> warnings.catch_warnings():</span><br><span class="line">                warnings.simplefilter(<span class="string">&quot;ignore&quot;</span>)</span><br><span class="line">                z, y, x = torch.meshgrid(z, y, x)</span><br><span class="line">            z_spread = z.reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            y_spread = y.reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            x_spread = x.reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            z_grid = z_spread.repeat([<span class="number">1</span>, self.depth * self.width * self.height])</span><br><span class="line">            z_grid = z_grid.reshape(</span><br><span class="line">                [self.num_points, self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            z_grid = z_grid.unsqueeze(<span class="number">0</span>)  <span class="comment"># [N,K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            y_grid = y_spread.repeat([<span class="number">1</span>, self.depth * self.width * self.height])</span><br><span class="line">            y_grid = y_grid.reshape(</span><br><span class="line">                [self.num_points, self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            y_grid = y_grid.unsqueeze(<span class="number">0</span>)  <span class="comment"># [N,K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            x_grid = x_spread.repeat([<span class="number">1</span>, self.depth * self.width * self.height])</span><br><span class="line">            x_grid = x_grid.reshape(</span><br><span class="line">                [self.num_points, self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            x_grid = x_grid.unsqueeze(<span class="number">0</span>)  <span class="comment"># [N,K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            z_new = z_center + z_grid</span><br><span class="line">            y_new = y_center + y_grid</span><br><span class="line">            x_new = x_center + x_grid  <span class="comment"># [N,K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            z_new = z_new.repeat(self.num_batch, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            y_new = y_new.repeat(self.num_batch, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            x_new = x_new.repeat(self.num_batch, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            z_new = z_new.to(device)</span><br><span class="line">            y_new = y_new.to(device)</span><br><span class="line">            x_new = x_new.to(device)</span><br><span class="line"></span><br><span class="line">            z_offset1_new = z_offset1.detach().clone()</span><br><span class="line">            y_offset1_new = y_offset1.detach().clone()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> if_offset:</span><br><span class="line">                z_offset1_new = z_offset1_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                y_offset1_new = y_offset1_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                z_offset1 = z_offset1.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                y_offset1 = y_offset1.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                center = <span class="built_in">int</span>(self.num_points // <span class="number">2</span>)</span><br><span class="line">                z_offset1_new[center] = <span class="number">0</span></span><br><span class="line">                y_offset1_new[center] = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, center + <span class="number">1</span>):</span><br><span class="line">                    z_offset1_new[center + index] = (</span><br><span class="line">                        z_offset1_new[center + index - <span class="number">1</span>] + z_offset1[center + index]</span><br><span class="line">                    )</span><br><span class="line">                    z_offset1_new[center - index] = (</span><br><span class="line">                        z_offset1_new[center - index + <span class="number">1</span>] + z_offset1[center - index]</span><br><span class="line">                    )</span><br><span class="line">                    y_offset1_new[center + index] = (</span><br><span class="line">                        y_offset1_new[center + index - <span class="number">1</span>] + y_offset1[center + index]</span><br><span class="line">                    )</span><br><span class="line">                    y_offset1_new[center - index] = (</span><br><span class="line">                        y_offset1_new[center - index + <span class="number">1</span>] + y_offset1[center - index]</span><br><span class="line">                    )</span><br><span class="line">                z_offset1_new = z_offset1_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>).to(device)</span><br><span class="line">                y_offset1_new = y_offset1_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>).to(device)</span><br><span class="line">                z_new = z_new.add(z_offset1_new.mul(self.extend_scope))</span><br><span class="line">                y_new = y_new.add(y_offset1_new.mul(self.extend_scope))</span><br><span class="line"></span><br><span class="line">                z_new = z_new.reshape(</span><br><span class="line">                    [</span><br><span class="line">                        self.num_batch,</span><br><span class="line">                        <span class="number">1</span>,</span><br><span class="line">                        <span class="number">1</span>,</span><br><span class="line">                        self.num_points,</span><br><span class="line">                        self.depth,</span><br><span class="line">                        self.width,</span><br><span class="line">                        self.height,</span><br><span class="line">                    ]</span><br><span class="line">                )</span><br><span class="line">                z_new = z_new.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">                z_new = z_new.reshape(</span><br><span class="line">                    [</span><br><span class="line">                        self.num_batch,</span><br><span class="line">                        self.depth,</span><br><span class="line">                        self.width,</span><br><span class="line">                        self.num_points * self.height,</span><br><span class="line">                    ]</span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">                y_new = y_new.reshape(</span><br><span class="line">                    [</span><br><span class="line">                        self.num_batch,</span><br><span class="line">                        <span class="number">1</span>,</span><br><span class="line">                        <span class="number">1</span>,</span><br><span class="line">                        self.num_points,</span><br><span class="line">                        self.depth,</span><br><span class="line">                        self.width,</span><br><span class="line">                        self.height,</span><br><span class="line">                    ]</span><br><span class="line">                )</span><br><span class="line">                y_new = y_new.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">                y_new = y_new.reshape(</span><br><span class="line">                    [</span><br><span class="line">                        self.num_batch,</span><br><span class="line">                        self.depth,</span><br><span class="line">                        self.width,</span><br><span class="line">                        self.num_points * self.height,</span><br><span class="line">                    ]</span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">                x_new = x_new.reshape(</span><br><span class="line">                    [</span><br><span class="line">                        self.num_batch,</span><br><span class="line">                        <span class="number">1</span>,</span><br><span class="line">                        <span class="number">1</span>,</span><br><span class="line">                        self.num_points,</span><br><span class="line">                        self.depth,</span><br><span class="line">                        self.width,</span><br><span class="line">                        self.height,</span><br><span class="line">                    ]</span><br><span class="line">                )</span><br><span class="line">                x_new = x_new.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">                x_new = x_new.reshape(</span><br><span class="line">                    [</span><br><span class="line">                        self.num_batch,</span><br><span class="line">                        self.depth,</span><br><span class="line">                        self.width,</span><br><span class="line">                        self.num_points * self.height,</span><br><span class="line">                    ]</span><br><span class="line">                )</span><br><span class="line">            <span class="keyword">return</span> z_new, y_new, x_new</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> self.morph == <span class="number">1</span>:</span><br><span class="line">            z = torch.linspace(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">            y = torch.linspace(</span><br><span class="line">                -<span class="built_in">int</span>(self.num_points // <span class="number">2</span>),</span><br><span class="line">                <span class="built_in">int</span>(self.num_points // <span class="number">2</span>),</span><br><span class="line">                <span class="built_in">int</span>(self.num_points),</span><br><span class="line">            )</span><br><span class="line">            x = torch.linspace(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">with</span> warnings.catch_warnings():</span><br><span class="line">                warnings.simplefilter(<span class="string">&quot;ignore&quot;</span>)</span><br><span class="line">                z, y, x = torch.meshgrid(z, y, x)</span><br><span class="line">            z_spread = z.reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            y_spread = y.reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            x_spread = x.reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            z_grid = z_spread.repeat([<span class="number">1</span>, self.depth * self.width * self.height])</span><br><span class="line">            z_grid = z_grid.reshape(</span><br><span class="line">                [self.num_points, self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            z_grid = z_grid.unsqueeze(<span class="number">0</span>)  <span class="comment"># [N*K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            y_grid = y_spread.repeat([<span class="number">1</span>, self.depth * self.width * self.height])</span><br><span class="line">            y_grid = y_grid.reshape(</span><br><span class="line">                [self.num_points, self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            y_grid = y_grid.unsqueeze(<span class="number">0</span>)  <span class="comment"># [N*K*K*K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            x_grid = x_spread.repeat([<span class="number">1</span>, self.depth * self.width * self.height])</span><br><span class="line">            x_grid = x_grid.reshape(</span><br><span class="line">                [self.num_points, self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            x_grid = x_grid.unsqueeze(<span class="number">0</span>)  <span class="comment"># [N*K*K*K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            z_new = z_center + z_grid</span><br><span class="line">            y_new = y_center + y_grid</span><br><span class="line">            x_new = x_center + x_grid  <span class="comment"># [N*K*K*K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            z_new = z_new.repeat(self.num_batch, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            y_new = y_new.repeat(self.num_batch, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            x_new = x_new.repeat(self.num_batch, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            z_new = z_new.to(device)</span><br><span class="line">            y_new = y_new.to(device)</span><br><span class="line">            x_new = x_new.to(device)</span><br><span class="line">            x_offset1_new = x_offset1.detach().clone()</span><br><span class="line">            z_offset2_new = z_offset2.detach().clone()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> if_offset:</span><br><span class="line">                x_offset1_new = x_offset1_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                z_offset2_new = z_offset2_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                x_offset1 = x_offset1.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                z_offset2 = z_offset2.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                center = <span class="built_in">int</span>(self.num_points // <span class="number">2</span>)</span><br><span class="line">                x_offset1_new[center] = <span class="number">0</span></span><br><span class="line">                z_offset2_new[center] = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, center + <span class="number">1</span>):</span><br><span class="line">                    x_offset1_new[center + index] = (</span><br><span class="line">                        x_offset1_new[center + index - <span class="number">1</span>] + x_offset1[center + index]</span><br><span class="line">                    )</span><br><span class="line">                    x_offset1_new[center - index] = (</span><br><span class="line">                        x_offset1_new[center - index + <span class="number">1</span>] + x_offset1[center - index]</span><br><span class="line">                    )</span><br><span class="line">                    z_offset2_new[center + index] = (</span><br><span class="line">                        z_offset2_new[center + index - <span class="number">1</span>] + z_offset2[center + index]</span><br><span class="line">                    )</span><br><span class="line">                    z_offset2_new[center - index] = (</span><br><span class="line">                        z_offset2_new[center - index + <span class="number">1</span>] + z_offset2[center - index]</span><br><span class="line">                    )</span><br><span class="line">                x_offset1_new = x_offset1_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>).to(device)</span><br><span class="line">                z_offset2_new = z_offset2_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>).to(device)</span><br><span class="line">                z_new = z_new.add(z_offset2_new.mul(self.extend_scope))</span><br><span class="line">                x_new = x_new.add(x_offset1_new.mul(self.extend_scope))</span><br><span class="line">            z_new = z_new.reshape(</span><br><span class="line">                [</span><br><span class="line">                    self.num_batch,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    self.num_points,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    self.depth,</span><br><span class="line">                    self.width,</span><br><span class="line">                    self.height,</span><br><span class="line">                ]</span><br><span class="line">            )</span><br><span class="line">            z_new = z_new.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">            z_new = z_new.reshape(</span><br><span class="line">                [self.num_batch, self.depth, self.num_points * self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            y_new = y_new.reshape(</span><br><span class="line">                [</span><br><span class="line">                    self.num_batch,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    self.num_points,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    self.depth,</span><br><span class="line">                    self.width,</span><br><span class="line">                    self.height,</span><br><span class="line">                ]</span><br><span class="line">            )</span><br><span class="line">            y_new = y_new.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">            y_new = y_new.reshape(</span><br><span class="line">                [self.num_batch, self.depth, self.num_points * self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            x_new = x_new.reshape(</span><br><span class="line">                [</span><br><span class="line">                    self.num_batch,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    self.num_points,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    self.depth,</span><br><span class="line">                    self.width,</span><br><span class="line">                    self.height,</span><br><span class="line">                ]</span><br><span class="line">            )</span><br><span class="line">            x_new = x_new.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">            x_new = x_new.reshape(</span><br><span class="line">                [self.num_batch, self.depth, self.num_points * self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">return</span> z_new, y_new, x_new</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            z = torch.linspace(</span><br><span class="line">                -<span class="built_in">int</span>(self.num_points // <span class="number">2</span>),</span><br><span class="line">                <span class="built_in">int</span>(self.num_points // <span class="number">2</span>),</span><br><span class="line">                <span class="built_in">int</span>(self.num_points),</span><br><span class="line">            )</span><br><span class="line">            y = torch.linspace(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">            x = torch.linspace(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">with</span> warnings.catch_warnings():</span><br><span class="line">                warnings.simplefilter(<span class="string">&quot;ignore&quot;</span>)</span><br><span class="line">                z, y, x = torch.meshgrid(z, y, x)</span><br><span class="line">            z_spread = z.reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            y_spread = y.reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            x_spread = x.reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            z_grid = z_spread.repeat([<span class="number">1</span>, self.depth * self.width * self.height])</span><br><span class="line">            z_grid = z_grid.reshape(</span><br><span class="line">                [self.num_points, self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            z_grid = z_grid.unsqueeze(<span class="number">0</span>)  <span class="comment"># [N*K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            y_grid = y_spread.repeat([<span class="number">1</span>, self.depth * self.width * self.height])</span><br><span class="line">            y_grid = y_grid.reshape(</span><br><span class="line">                [self.num_points, self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            y_grid = y_grid.unsqueeze(<span class="number">0</span>)  <span class="comment"># [N*K*K*K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            x_grid = x_spread.repeat([<span class="number">1</span>, self.depth * self.width * self.height])</span><br><span class="line">            x_grid = x_grid.reshape(</span><br><span class="line">                [self.num_points, self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            x_grid = x_grid.unsqueeze(<span class="number">0</span>)  <span class="comment"># [N*K*K*K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            z_new = z_center + z_grid</span><br><span class="line">            y_new = y_center + y_grid</span><br><span class="line">            x_new = x_center + x_grid  <span class="comment"># [N*K*K*K,D,W,H]</span></span><br><span class="line"></span><br><span class="line">            z_new = z_new.repeat(self.num_batch, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            y_new = y_new.repeat(self.num_batch, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            x_new = x_new.repeat(self.num_batch, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            z_new = z_new.to(device)</span><br><span class="line">            y_new = y_new.to(device)</span><br><span class="line">            x_new = x_new.to(device)</span><br><span class="line">            x_offset2_new = x_offset2.detach().clone()</span><br><span class="line">            y_offset2_new = y_offset2.detach().clone()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> if_offset:</span><br><span class="line">                x_offset2_new = x_offset2_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                y_offset2_new = y_offset2_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                x_offset2 = x_offset2.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                y_offset2 = y_offset2.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">                center = <span class="built_in">int</span>(self.num_points // <span class="number">2</span>)</span><br><span class="line">                x_offset2_new[center] = <span class="number">0</span></span><br><span class="line">                x_offset2_new[center] = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, center + <span class="number">1</span>):</span><br><span class="line">                    x_offset2_new[center + index] = (</span><br><span class="line">                        x_offset2_new[center + index - <span class="number">1</span>] + x_offset2[center + index]</span><br><span class="line">                    )</span><br><span class="line">                    x_offset2_new[center - index] = (</span><br><span class="line">                        x_offset2_new[center - index + <span class="number">1</span>] + x_offset2[center - index]</span><br><span class="line">                    )</span><br><span class="line">                    y_offset2_new[center + index] = (</span><br><span class="line">                        y_offset2_new[center + index - <span class="number">1</span>] + y_offset2[center + index]</span><br><span class="line">                    )</span><br><span class="line">                    y_offset2_new[center - index] = (</span><br><span class="line">                        y_offset2_new[center - index + <span class="number">1</span>] + y_offset2[center - index]</span><br><span class="line">                    )</span><br><span class="line">                x_offset2_new = x_offset2_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>).to(device)</span><br><span class="line">                y_offset2_new = y_offset2_new.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>).to(device)</span><br><span class="line">                x_new = x_new.add(x_offset2_new.mul(self.extend_scope))</span><br><span class="line">                y_new = y_new.add(y_offset2_new.mul(self.extend_scope))</span><br><span class="line"></span><br><span class="line">            z_new = z_new.reshape(</span><br><span class="line">                [</span><br><span class="line">                    self.num_batch,</span><br><span class="line">                    self.num_points,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    self.depth,</span><br><span class="line">                    self.width,</span><br><span class="line">                    self.height,</span><br><span class="line">                ]</span><br><span class="line">            )</span><br><span class="line">            z_new = z_new.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">            z_new = z_new.reshape(</span><br><span class="line">                [self.num_batch, self.num_points * self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            y_new = y_new.reshape(</span><br><span class="line">                [</span><br><span class="line">                    self.num_batch,</span><br><span class="line">                    self.num_points,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    self.depth,</span><br><span class="line">                    self.width,</span><br><span class="line">                    self.height,</span><br><span class="line">                ]</span><br><span class="line">            )</span><br><span class="line">            y_new = y_new.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">            y_new = y_new.reshape(</span><br><span class="line">                [self.num_batch, self.num_points * self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            x_new = x_new.reshape(</span><br><span class="line">                [</span><br><span class="line">                    self.num_batch,</span><br><span class="line">                    self.num_points,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    self.depth,</span><br><span class="line">                    self.width,</span><br><span class="line">                    self.height,</span><br><span class="line">                ]</span><br><span class="line">            )</span><br><span class="line">            x_new = x_new.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">            x_new = x_new.reshape(</span><br><span class="line">                [self.num_batch, self.num_points * self.depth, self.width, self.height]</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">return</span> z_new, y_new, x_new</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    input: input feature map [N,C,D,W,H]；coordinate map [N,K*D,K*W,K*H] </span></span><br><span class="line"><span class="string">    output: [N,1,K*D,K*W,K*H]  deformed feature map</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_bilinear_interpolate_3D</span>(<span class="params">self, input_feature, z, y, x</span>):</span><br><span class="line">        device = input_feature.device</span><br><span class="line">        z = z.reshape([-<span class="number">1</span>]).<span class="built_in">float</span>()</span><br><span class="line">        y = y.reshape([-<span class="number">1</span>]).<span class="built_in">float</span>()</span><br><span class="line">        x = x.reshape([-<span class="number">1</span>]).<span class="built_in">float</span>()  <span class="comment"># [N*KD*KW*KH]</span></span><br><span class="line"></span><br><span class="line">        zero = torch.zeros([]).<span class="built_in">int</span>()</span><br><span class="line">        max_z = self.depth - <span class="number">1</span></span><br><span class="line">        max_y = self.width - <span class="number">1</span></span><br><span class="line">        max_x = self.height - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># find 8 grid locations</span></span><br><span class="line">        z0 = torch.floor(z).<span class="built_in">int</span>()</span><br><span class="line">        z1 = z0 + <span class="number">1</span></span><br><span class="line">        y0 = torch.floor(y).<span class="built_in">int</span>()</span><br><span class="line">        y1 = y0 + <span class="number">1</span></span><br><span class="line">        x0 = torch.floor(x).<span class="built_in">int</span>()</span><br><span class="line">        x1 = x0 + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># clip out coordinates exceeding feature map volume以外的点</span></span><br><span class="line">        z0 = torch.clamp(z0, zero, max_z)</span><br><span class="line">        z1 = torch.clamp(z1, zero, max_z)</span><br><span class="line">        y0 = torch.clamp(y0, zero, max_y)</span><br><span class="line">        y1 = torch.clamp(y1, zero, max_y)</span><br><span class="line">        x0 = torch.clamp(x0, zero, max_x)</span><br><span class="line">        x1 = torch.clamp(x1, zero, max_x)  <span class="comment"># [N*KD*KW*KH]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># convert input_feature and coordinate X, Y to 3D，for gathering</span></span><br><span class="line">        <span class="comment"># input_feature_flat = input_feature.reshape([-1, self.num_channels])   # [N*D*W*H, C]</span></span><br><span class="line">        input_feature_flat = input_feature.flatten()</span><br><span class="line">        input_feature_flat = input_feature_flat.reshape(</span><br><span class="line">            self.num_batch, self.num_channels, self.depth, self.width, self.height</span><br><span class="line">        )</span><br><span class="line">        input_feature_flat = input_feature_flat.permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>)</span><br><span class="line">        input_feature_flat = input_feature_flat.reshape(-<span class="number">1</span>, self.num_channels)</span><br><span class="line">        dimension = self.height * self.width * self.depth</span><br><span class="line"></span><br><span class="line">        base = torch.arange(self.num_batch) * dimension</span><br><span class="line">        base = base.reshape([-<span class="number">1</span>, <span class="number">1</span>]).<span class="built_in">float</span>()  <span class="comment"># [N,1]</span></span><br><span class="line"></span><br><span class="line">        repeat = torch.ones(</span><br><span class="line">            [self.num_points * self.depth * self.width * self.height]</span><br><span class="line">        ).unsqueeze(<span class="number">0</span>)</span><br><span class="line">        repeat = repeat.<span class="built_in">float</span>()  <span class="comment"># [1,D*W*H*K*K*K]</span></span><br><span class="line"></span><br><span class="line">        base = torch.matmul(</span><br><span class="line">            base, repeat</span><br><span class="line">        )  <span class="comment"># [N,1] * [1,D*W*H*K*K*K]  ==&gt; [N,D*W*H*K*K*K]</span></span><br><span class="line">        base = base.reshape([-<span class="number">1</span>])  <span class="comment"># [D*W*H*K*K*K]</span></span><br><span class="line"></span><br><span class="line">        base = base.to(device)</span><br><span class="line"></span><br><span class="line">        base_z0 = base + z0 * self.height * self.width</span><br><span class="line">        base_z1 = base + z1 * self.height * self.width</span><br><span class="line">        base_y0 = base + y0 * self.height</span><br><span class="line">        base_y1 = base + y1 * self.height</span><br><span class="line"></span><br><span class="line">        <span class="comment"># top rectangle of the neighbourhood volume</span></span><br><span class="line">        index_a0 = base_y0 + base_z0 - base + x0</span><br><span class="line">        index_b0 = base_y0 + base_z1 - base + x0</span><br><span class="line">        index_c0 = base_y0 + base_z0 - base + x1</span><br><span class="line">        index_d0 = base_y0 + base_z1 - base + x1  <span class="comment"># [N*KD*KW*KH]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># bottom rectangle of the neighbourhood volume</span></span><br><span class="line">        index_a1 = base_y1 + base_z0 - base + x0</span><br><span class="line">        index_b1 = base_y1 + base_z1 - base + x0</span><br><span class="line">        index_c1 = base_y1 + base_z0 - base + x1</span><br><span class="line">        index_d1 = base_y1 + base_z1 - base + x1  <span class="comment"># [N*KD*KW*KH]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># get 8 grid values  ([N*D*W*H,C], [N*D*W*H*27])</span></span><br><span class="line">        value_a0 = input_feature_flat[index_a0.<span class="built_in">type</span>(torch.int64)]</span><br><span class="line">        value_b0 = input_feature_flat[index_b0.<span class="built_in">type</span>(torch.int64)]</span><br><span class="line">        value_c0 = input_feature_flat[index_c0.<span class="built_in">type</span>(torch.int64)]</span><br><span class="line">        value_d0 = input_feature_flat[index_d0.<span class="built_in">type</span>(torch.int64)]</span><br><span class="line">        value_a1 = input_feature_flat[index_a1.<span class="built_in">type</span>(torch.int64)]</span><br><span class="line">        value_b1 = input_feature_flat[index_b1.<span class="built_in">type</span>(torch.int64)]</span><br><span class="line">        value_c1 = input_feature_flat[index_c1.<span class="built_in">type</span>(torch.int64)]</span><br><span class="line">        value_d1 = input_feature_flat[index_d1.<span class="built_in">type</span>(torch.int64)]  <span class="comment"># [N*KD*KW*KH, C]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># find 8 grid locations</span></span><br><span class="line">        z0 = torch.floor(z).<span class="built_in">int</span>()</span><br><span class="line">        z1 = z0 + <span class="number">1</span></span><br><span class="line">        y0 = torch.floor(y).<span class="built_in">int</span>()</span><br><span class="line">        y1 = y0 + <span class="number">1</span></span><br><span class="line">        x0 = torch.floor(x).<span class="built_in">int</span>()</span><br><span class="line">        x1 = x0 + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># clip out coordinates exceeding feature map volume以外的点</span></span><br><span class="line">        z0 = torch.clamp(z0, zero, max_z + <span class="number">1</span>)</span><br><span class="line">        z1 = torch.clamp(z1, zero, max_z + <span class="number">1</span>)</span><br><span class="line">        y0 = torch.clamp(y0, zero, max_y + <span class="number">1</span>)</span><br><span class="line">        y1 = torch.clamp(y1, zero, max_y + <span class="number">1</span>)</span><br><span class="line">        x0 = torch.clamp(x0, zero, max_x + <span class="number">1</span>)</span><br><span class="line">        x1 = torch.clamp(x1, zero, max_x + <span class="number">1</span>)  <span class="comment"># [N*KD*KW*KH]</span></span><br><span class="line"></span><br><span class="line">        x0_float = x0.<span class="built_in">float</span>()</span><br><span class="line">        x1_float = x1.<span class="built_in">float</span>()</span><br><span class="line">        y0_float = y0.<span class="built_in">float</span>()</span><br><span class="line">        y1_float = y1.<span class="built_in">float</span>()</span><br><span class="line">        z0_float = z0.<span class="built_in">float</span>()</span><br><span class="line">        z1_float = z1.<span class="built_in">float</span>()</span><br><span class="line"></span><br><span class="line">        vol_a0 = ((z1_float - z) * (y1_float - y) * (x1_float - x)).unsqueeze(-<span class="number">1</span>)</span><br><span class="line">        vol_b0 = ((z - z0_float) * (y1_float - y) * (x1_float - x)).unsqueeze(-<span class="number">1</span>)</span><br><span class="line">        vol_c0 = ((z1_float - z) * (y1_float - y) * (x - x0_float)).unsqueeze(-<span class="number">1</span>)</span><br><span class="line">        vol_d0 = ((z - z0_float) * (y1_float - y) * (x - x0_float)).unsqueeze(-<span class="number">1</span>)</span><br><span class="line">        vol_a1 = ((z1_float - z) * (y - y0_float) * (x1_float - x)).unsqueeze(-<span class="number">1</span>)</span><br><span class="line">        vol_b1 = ((z - z0_float) * (y - y0_float) * (x1_float - x)).unsqueeze(-<span class="number">1</span>)</span><br><span class="line">        vol_c1 = ((z1_float - z) * (y - y0_float) * (x - x0_float)).unsqueeze(-<span class="number">1</span>)</span><br><span class="line">        vol_d1 = ((z - z0_float) * (y - y0_float) * (x - x0_float)).unsqueeze(</span><br><span class="line">            -<span class="number">1</span></span><br><span class="line">        )  <span class="comment"># [N*KD*KW*KH, C]</span></span><br><span class="line"></span><br><span class="line">        outputs = (</span><br><span class="line">            value_a0 * vol_a0</span><br><span class="line">            + value_b0 * vol_b0</span><br><span class="line">            + value_c0 * vol_c0</span><br><span class="line">            + value_d0 * vol_d0</span><br><span class="line">            + value_a1 * vol_a1</span><br><span class="line">            + value_b1 * vol_b1</span><br><span class="line">            + value_c1 * vol_c1</span><br><span class="line">            + value_d1 * vol_d1</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.morph == <span class="number">0</span>:</span><br><span class="line">            outputs = outputs.reshape(</span><br><span class="line">                [</span><br><span class="line">                    self.num_batch,</span><br><span class="line">                    self.depth,</span><br><span class="line">                    self.width,</span><br><span class="line">                    self.num_points * self.height,</span><br><span class="line">                    self.num_channels,</span><br><span class="line">                ]</span><br><span class="line">            )</span><br><span class="line">            outputs = outputs.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">        <span class="keyword">elif</span> self.morph == <span class="number">1</span>:</span><br><span class="line">            outputs = outputs.reshape(</span><br><span class="line">                [</span><br><span class="line">                    self.num_batch,</span><br><span class="line">                    self.depth,</span><br><span class="line">                    self.num_points * self.width,</span><br><span class="line">                    self.height,</span><br><span class="line">                    self.num_channels,</span><br><span class="line">                ]</span><br><span class="line">            )</span><br><span class="line">            outputs = outputs.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            outputs = outputs.reshape(</span><br><span class="line">                [</span><br><span class="line">                    self.num_batch,</span><br><span class="line">                    self.num_points * self.depth,</span><br><span class="line">                    self.width,</span><br><span class="line">                    self.height,</span><br><span class="line">                    self.num_channels,</span><br><span class="line">                ]</span><br><span class="line">            )</span><br><span class="line">            outputs = outputs.permute(<span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">        <span class="keyword">return</span> outputs</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">deform_conv</span>(<span class="params">self, <span class="built_in">input</span>, offset, if_offset</span>):</span><br><span class="line">        z, y, x = self._coordinate_map_3D(offset, if_offset)</span><br><span class="line">        deformed_feature = self._bilinear_interpolate_3D(<span class="built_in">input</span>, z, y, x)</span><br><span class="line">        <span class="keyword">return</span> deformed_feature</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DSConv3dBlock</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        in_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        out_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        kernel_size: <span class="built_in">int</span> = <span class="number">3</span>,</span></span><br><span class="line"><span class="params">        extend_scope: <span class="built_in">int</span> = <span class="number">1</span>,</span></span><br><span class="line"><span class="params">        if_offset: <span class="built_in">bool</span> = <span class="literal">True</span>,</span></span><br><span class="line"><span class="params">        res_block: <span class="built_in">bool</span> = <span class="literal">False</span>,</span></span><br><span class="line"><span class="params">        dropout_rate: <span class="built_in">float</span> = <span class="number">0.0</span>,</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>(DSConv3dBlock, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.res_block = res_block</span><br><span class="line"></span><br><span class="line">        self.conv = Convolution(</span><br><span class="line">            spatial_dims=<span class="number">3</span>,</span><br><span class="line">            in_channels=in_channels,</span><br><span class="line">            out_channels=out_channels,</span><br><span class="line">            dropout=dropout_rate,</span><br><span class="line">        )</span><br><span class="line">        self.ds_conv_x = DSConv3d(</span><br><span class="line">            in_channels, out_channels, kernel_size, extend_scope, <span class="number">0</span>, if_offset</span><br><span class="line">        )</span><br><span class="line">        self.ds_conv_y = DSConv3d(</span><br><span class="line">            in_channels, out_channels, kernel_size, extend_scope, <span class="number">1</span>, if_offset</span><br><span class="line">        )</span><br><span class="line">        self.ds_conv_z = DSConv3d(</span><br><span class="line">            in_channels, out_channels, kernel_size, extend_scope, <span class="number">2</span>, if_offset</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.out_conv = Convolution(</span><br><span class="line">            spatial_dims=<span class="number">3</span>,</span><br><span class="line">            in_channels=<span class="number">4</span> * out_channels,</span><br><span class="line">            out_channels=out_channels,</span><br><span class="line">            dropout=dropout_rate,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, inp</span>):</span><br><span class="line">        residual = inp</span><br><span class="line">        conv_out = self.conv(inp)</span><br><span class="line">        x = self.ds_conv_x(inp)</span><br><span class="line">        y = self.ds_conv_y(inp)</span><br><span class="line">        z = self.ds_conv_z(inp)</span><br><span class="line"></span><br><span class="line">        out = torch.cat([conv_out, x, y, z], dim=<span class="number">1</span>)</span><br><span class="line">        out = self.out_conv(out)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.res_block:</span><br><span class="line">            out += residual</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="实验结果"><a class="markdownIt-Anchor" href="#实验结果"></a> 实验结果</h1>
<p>笔者在ISLES2017数据集上采用了DSCNet，其中UNERT和SegResNet的Dice系数都是0.5，而DSCNet效果是0.6，提升了0.1，但是考虑到ISLES2017数据集本身就很小，该效果需要进一步验证。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.5.9/dice.png" alt="result" /></p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<ul>
<li><a href="https://arxiv.org/abs/2307.08388">Dynamic Snake Convolution based on Topological Geometric Constraints for Tubular Structure Segmentation</a></li>
<li><a href="https://github.com/YaoleiQi/DSCNet">DSCNet</a></li>
<li><a href="https://arxiv.org/abs/1703.06211">Deformable Convolutional Networks</a></li>
</ul>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>DUCK-Net 论文笔记</title>
    <url>/2023/11/16/ducknet-note/</url>
    <content><![CDATA[<blockquote>
<p>封面 《FLIP＊FLOP 〜INNOCENCE OVERCLOCK〜》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>因为在<a href="https://paperswithcode.com/paper/using-duck-net-for-polyp-image-segmentation-1">paper with code</a>上看到了医学分割的排行榜上的DUCK-Net(Deep Understanding Convolutional Kernel Net)的名字，因此来看一下这篇论文是如何做的。</p>
<h1 id="duck-net贡献"><a class="markdownIt-Anchor" href="#duck-net贡献"></a> DUCK-Net贡献</h1>
<ul>
<li>定制DUCK卷积块，允许更深入的特征提取，让模型更好的定位边界信息</li>
<li>采用残差下采样，在编码器的每层分辨率中有原始图像的信息</li>
<li>不使用外部模块，且只在目标集上训练（无预训练）</li>
<li>方法无论实在数量、形状、大小还是质地上准确识别息肉</li>
</ul>
<h1 id="duck-net结构"><a class="markdownIt-Anchor" href="#duck-net结构"></a> DUCK-Net结构</h1>
<p>DUCK-Net的结构如下图所示</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.0/ducknet.png" alt="DUCK-Net结构" /></p>
<p>其中蓝色的下采样部分和灰色的加模块为DUCK-Net提出的残差下采样。</p>
<p>红色部分为DUCK-Net提出的Duck Block结构</p>
<h2 id="duck-block"><a class="markdownIt-Anchor" href="#duck-block"></a> DUCK Block</h2>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.0/duck-block.png" alt="DUCK Block结构" /></p>
<p>DUCK Block由多份卷积并行使用，这样网络可以在每一步中使用其认为的最好的行为。其采用不同内核大小来模拟三种不同方式，这样网络网络可以卷积如何弥补一种模拟方法的缺点。同时加入了1-2-3三层残差模块，实验表明增加WideScope和MidScope和Sparable的数量对结果没有显著变化。</p>
<h3 id="residual-block"><a class="markdownIt-Anchor" href="#residual-block"></a> Residual Block</h3>
<p>残差模块如下图所示</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.0/residual-block.png" alt="Residual Block" /></p>
<p>其是DUCK中的第一个组件，首次在ResUNet++中被引入，其目的是了解息肉小细节，<br />
采用连接1、2、3个残差块来模拟5×5、9×9、13×13的卷积核</p>
<h3 id="midscope-block"><a class="markdownIt-Anchor" href="#midscope-block"></a> MidScope Block</h3>
<p>MidScope Block如下图所示，其采用膨胀卷积来减少较大卷积内核需要的参数，让网络理解更高级特征。该模块因为膨胀卷积副作用丢失信息，学习一点需要稍微注意的细节的突出特征。MidScope采用膨胀卷积模拟了7×7的卷积核</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.0/midscope-block.png" alt="MidScope Block" /></p>
<h3 id="widescope-block"><a class="markdownIt-Anchor" href="#widescope-block"></a> WideScope Block</h3>
<p>WideScope Block如下图所示，其与MidScope Block类似，但是是模拟的15×15的卷积核<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.0/widescope-block.png" alt="WideScope Block" /></p>
<h3 id="separated-block"><a class="markdownIt-Anchor" href="#separated-block"></a> Separated Block</h3>
<p>Separated Block如下图所示，其采用1×N和N×1，其行为类似于N×N的卷积，但是这样会导致一种“对角化”问题，在原本二维卷积上，因为其二维特征保留了对角线元素，捕捉垂直和水平方向包括了对角线方向的学习，然而分离之后，一次在一维上操作，阻碍有效编码对角特征，导致了“对角化损失”。这种对角线关系可以被证明对检测图像中特定的复杂图案或形状有用，因此其他块被设计为补偿</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.0/separated-block.png" alt="Separated Block" /></p>
<h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1>
<p>官方代码在github放出<a href="https://github.com/RazvanDu/DUCK-Net">链接</a><br />
考虑到其是2D，我自己在monai上做了一个3D版本,不过我没训练因为Out of CUDA Memory</p>
<blockquote>
<p>/layers/duck.py</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span>, <span class="type">Sequence</span>, <span class="type">Tuple</span>, <span class="type">Union</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> monai.networks.blocks.convolutions <span class="keyword">import</span> Convolution</span><br><span class="line"><span class="keyword">from</span> monai.networks.layers.utils <span class="keyword">import</span> get_norm_layer, get_act_layer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WideScope</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        in_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        out_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        act_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;RELU&quot;</span>,</span></span><br><span class="line"><span class="params">        norm_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;INSTANCE&quot;</span>,</span></span><br><span class="line"><span class="params">        adn_ordering: <span class="built_in">str</span> = <span class="string">&quot;ADN&quot;</span>,</span></span><br><span class="line"><span class="params">        spatial_dims: <span class="built_in">int</span> = <span class="number">3</span>,</span></span><br><span class="line"><span class="params">    </span>):</span><br><span class="line">        <span class="built_in">super</span>(WideScope, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.conv1 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            in_channels,</span><br><span class="line">            out_channels,</span><br><span class="line">            kernel_size=<span class="number">3</span>,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            norm=norm_name,</span><br><span class="line">            act=act_name,</span><br><span class="line">            dilation=<span class="number">1</span>,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv2 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            out_channels,</span><br><span class="line">            out_channels,</span><br><span class="line">            kernel_size=<span class="number">3</span>,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            norm=norm_name,</span><br><span class="line">            act=act_name,</span><br><span class="line">            dilation=<span class="number">2</span>,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv3 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            out_channels,</span><br><span class="line">            out_channels,</span><br><span class="line">            kernel_size=<span class="number">3</span>,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            norm=norm_name,</span><br><span class="line">            act=act_name,</span><br><span class="line">            dilation=<span class="number">3</span>,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        x = self.conv3(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MidScope</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        in_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        out_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        act_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;RELU&quot;</span>,</span></span><br><span class="line"><span class="params">        norm_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;INSTANCE&quot;</span>,</span></span><br><span class="line"><span class="params">        adn_ordering: <span class="built_in">str</span> = <span class="string">&quot;ADN&quot;</span>,</span></span><br><span class="line"><span class="params">        spatial_dims: <span class="built_in">int</span> = <span class="number">3</span>,</span></span><br><span class="line"><span class="params">    </span>):</span><br><span class="line">        <span class="built_in">super</span>(MidScope, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.conv1 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            in_channels,</span><br><span class="line">            out_channels,</span><br><span class="line">            kernel_size=<span class="number">3</span>,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            norm=norm_name,</span><br><span class="line">            act=act_name,</span><br><span class="line">            dilation=<span class="number">1</span>,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv2 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            out_channels,</span><br><span class="line">            out_channels,</span><br><span class="line">            kernel_size=<span class="number">3</span>,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            norm=norm_name,</span><br><span class="line">            act=act_name,</span><br><span class="line">            dilation=<span class="number">2</span>,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DuckResidualBlock</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        in_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        out_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        act_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;RELU&quot;</span>,</span></span><br><span class="line"><span class="params">        norm_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;INSTANCE&quot;</span>,</span></span><br><span class="line"><span class="params">        adn_ordering: <span class="built_in">str</span> = <span class="string">&quot;ADN&quot;</span>,</span></span><br><span class="line"><span class="params">        dilation: <span class="type">Union</span>[<span class="type">Sequence</span>[<span class="built_in">int</span>], <span class="built_in">int</span>] = <span class="number">1</span>,</span></span><br><span class="line"><span class="params">        spatial_dims: <span class="built_in">int</span> = <span class="number">3</span>,</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>(DuckResidualBlock, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.residual = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            in_channels,</span><br><span class="line">            out_channels,</span><br><span class="line">            kernel_size=<span class="number">3</span>,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            norm=norm_name,</span><br><span class="line">            act=act_name,</span><br><span class="line">            dilation=dilation,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv1 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            in_channels,</span><br><span class="line">            out_channels,</span><br><span class="line">            kernel_size=<span class="number">3</span>,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            norm=norm_name,</span><br><span class="line">            act=act_name,</span><br><span class="line">            dilation=dilation,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv2 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            out_channels,</span><br><span class="line">            out_channels,</span><br><span class="line">            kernel_size=<span class="number">3</span>,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            norm=norm_name,</span><br><span class="line">            act=act_name,</span><br><span class="line">            dilation=dilation,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.norm = get_norm_layer(</span><br><span class="line">            name=norm_name, spatial_dims=spatial_dims, channels=out_channels</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        identity = x</span><br><span class="line"></span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line"></span><br><span class="line">        identity = self.residual(identity)</span><br><span class="line"></span><br><span class="line">        x += identity</span><br><span class="line"></span><br><span class="line">        x = self.norm(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SeparatedConvBlock</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        in_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        out_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        size: <span class="built_in">int</span> = <span class="number">3</span>,</span></span><br><span class="line"><span class="params">        act_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;RELU&quot;</span>,</span></span><br><span class="line"><span class="params">        norm_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;INSTANCE&quot;</span>,</span></span><br><span class="line"><span class="params">        adn_ordering: <span class="built_in">str</span> = <span class="string">&quot;ADN&quot;</span>,</span></span><br><span class="line"><span class="params">        spatial_dims: <span class="built_in">int</span> = <span class="number">3</span>,</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>(SeparatedConvBlock, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.conv1 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            in_channels,</span><br><span class="line">            out_channels,</span><br><span class="line">            kernel_size=(size, <span class="number">1</span>, <span class="number">1</span>) <span class="keyword">if</span> spatial_dims == <span class="number">3</span> <span class="keyword">else</span> (size, <span class="number">1</span>),</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            norm=norm_name,</span><br><span class="line">            act=act_name,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv2 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            out_channels,</span><br><span class="line">            out_channels,</span><br><span class="line">            kernel_size=(<span class="number">1</span>, size, <span class="number">1</span>) <span class="keyword">if</span> spatial_dims == <span class="number">3</span> <span class="keyword">else</span> (<span class="number">1</span>, size),</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            norm=norm_name,</span><br><span class="line">            act=act_name,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> spatial_dims == <span class="number">3</span>:</span><br><span class="line">            self.conv3 = Convolution(</span><br><span class="line">                spatial_dims,</span><br><span class="line">                out_channels,</span><br><span class="line">                out_channels,</span><br><span class="line">                kernel_size=(<span class="number">1</span>, <span class="number">1</span>, size),</span><br><span class="line">                adn_ordering=adn_ordering,</span><br><span class="line">                norm=norm_name,</span><br><span class="line">                act=act_name,</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.conv3 = nn.Identity()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        x = self.conv3(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DuckBlock</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        in_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        out_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        act_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;RELU&quot;</span>,</span></span><br><span class="line"><span class="params">        norm_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;INSTANCE&quot;</span>,</span></span><br><span class="line"><span class="params">        adn_ordering: <span class="built_in">str</span> = <span class="string">&quot;ADN&quot;</span>,</span></span><br><span class="line"><span class="params">        spatial_dims: <span class="built_in">int</span> = <span class="number">3</span>,</span></span><br><span class="line"><span class="params">    </span>):</span><br><span class="line">        <span class="built_in">super</span>(DuckBlock, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.norm1 = get_norm_layer(</span><br><span class="line">            name=norm_name, spatial_dims=spatial_dims, channels=in_channels</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.ws = WideScope(</span><br><span class="line">            in_channels=in_channels,</span><br><span class="line">            out_channels=out_channels,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.ms = MidScope(</span><br><span class="line">            in_channels=in_channels,</span><br><span class="line">            out_channels=out_channels,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.res1 = DuckResidualBlock(</span><br><span class="line">            in_channels=in_channels,</span><br><span class="line">            out_channels=out_channels,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.res2 = nn.Sequential(</span><br><span class="line">            *[</span><br><span class="line">                DuckResidualBlock(</span><br><span class="line">                    in_channels=in_channels <span class="keyword">if</span> i == <span class="number">0</span> <span class="keyword">else</span> out_channels,</span><br><span class="line">                    out_channels=out_channels,</span><br><span class="line">                    act_name=act_name,</span><br><span class="line">                    norm_name=norm_name,</span><br><span class="line">                    adn_ordering=adn_ordering,</span><br><span class="line">                    spatial_dims=spatial_dims,</span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>)</span><br><span class="line">            ]</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.res3 = nn.Sequential(</span><br><span class="line">            *[</span><br><span class="line">                DuckResidualBlock(</span><br><span class="line">                    in_channels=in_channels <span class="keyword">if</span> i == <span class="number">0</span> <span class="keyword">else</span> out_channels,</span><br><span class="line">                    out_channels=out_channels,</span><br><span class="line">                    act_name=act_name,</span><br><span class="line">                    norm_name=norm_name,</span><br><span class="line">                    adn_ordering=adn_ordering,</span><br><span class="line">                    spatial_dims=spatial_dims,</span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)</span><br><span class="line">            ]</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.sepconv = SeparatedConvBlock(</span><br><span class="line">            in_channels=in_channels,</span><br><span class="line">            out_channels=out_channels,</span><br><span class="line">            size=<span class="number">5</span>,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.norm2 = get_norm_layer(</span><br><span class="line">            name=norm_name, spatial_dims=spatial_dims, channels=out_channels</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x_in</span>):</span><br><span class="line">        x_in = self.norm1(x_in)</span><br><span class="line"></span><br><span class="line">        ws = self.ws(x_in)</span><br><span class="line">        ms = self.ms(x_in)</span><br><span class="line">        res1 = self.res1(x_in)</span><br><span class="line">        res2 = self.res2(x_in)</span><br><span class="line">        res3 = self.res3(x_in)</span><br><span class="line">        sepconv = self.sepconv(x_in)</span><br><span class="line"></span><br><span class="line">        x_final = ws + ms + res1 + res2 + res3 + sepconv</span><br><span class="line"></span><br><span class="line">        x_final = self.norm2(x_final)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> x_final</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>/nets/ducket.py</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span>, <span class="type">Sequence</span>, <span class="type">Tuple</span>, <span class="type">Union</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> monai.networks.blocks.upsample <span class="keyword">import</span> UpSample</span><br><span class="line"><span class="keyword">from</span> monai.networks.blocks.convolutions <span class="keyword">import</span> Convolution</span><br><span class="line"><span class="keyword">from</span> monai.utils <span class="keyword">import</span> ensure_tuple_rep</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> layers <span class="keyword">import</span> DuckBlock, DuckResidualBlock</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DuckNet</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        in_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        out_channels: <span class="built_in">int</span>,</span></span><br><span class="line"><span class="params">        start_channels: <span class="built_in">int</span> = <span class="number">17</span>,</span></span><br><span class="line"><span class="params">        act_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;RELU&quot;</span>,</span></span><br><span class="line"><span class="params">        norm_name: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="type">Tuple</span>, <span class="built_in">str</span>]] = <span class="string">&quot;INSTANCE&quot;</span>,</span></span><br><span class="line"><span class="params">        adn_ordering: <span class="built_in">str</span> = <span class="string">&quot;ADN&quot;</span>,</span></span><br><span class="line"><span class="params">        interp_mode: <span class="built_in">str</span> = <span class="string">&quot;nearest&quot;</span>,</span></span><br><span class="line"><span class="params">        align_corners: <span class="type">Optional</span>[<span class="built_in">bool</span>] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">        spatial_dims: <span class="built_in">int</span> = <span class="number">3</span>,</span></span><br><span class="line"><span class="params">    </span>):</span><br><span class="line">        <span class="built_in">super</span>(DuckNet, self).__init__()</span><br><span class="line"></span><br><span class="line">        upsamle_size = ensure_tuple_rep(<span class="number">2</span>, spatial_dims)</span><br><span class="line"></span><br><span class="line">        self.down1 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            in_channels,</span><br><span class="line">            start_channels * <span class="number">2</span>,</span><br><span class="line">            kernel_size=<span class="number">2</span>,</span><br><span class="line">            strides=<span class="number">2</span>,</span><br><span class="line">            padding=<span class="number">0</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.down2 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            start_channels * <span class="number">2</span>,</span><br><span class="line">            start_channels * <span class="number">4</span>,</span><br><span class="line">            kernel_size=<span class="number">2</span>,</span><br><span class="line">            strides=<span class="number">2</span>,</span><br><span class="line">            padding=<span class="number">0</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.down3 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            start_channels * <span class="number">4</span>,</span><br><span class="line">            start_channels * <span class="number">8</span>,</span><br><span class="line">            kernel_size=<span class="number">2</span>,</span><br><span class="line">            strides=<span class="number">2</span>,</span><br><span class="line">            padding=<span class="number">0</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.down4 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            start_channels * <span class="number">8</span>,</span><br><span class="line">            start_channels * <span class="number">16</span>,</span><br><span class="line">            kernel_size=<span class="number">2</span>,</span><br><span class="line">            strides=<span class="number">2</span>,</span><br><span class="line">            padding=<span class="number">0</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.down5 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            start_channels * <span class="number">16</span>,</span><br><span class="line">            start_channels * <span class="number">32</span>,</span><br><span class="line">            kernel_size=<span class="number">2</span>,</span><br><span class="line">            strides=<span class="number">2</span>,</span><br><span class="line">            padding=<span class="number">0</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.duck1 = DuckBlock(</span><br><span class="line">            in_channels,</span><br><span class="line">            start_channels,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">        )</span><br><span class="line">        self.sub_down1 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            start_channels,</span><br><span class="line">            start_channels * <span class="number">2</span>,</span><br><span class="line">            kernel_size=<span class="number">2</span>,</span><br><span class="line">            strides=<span class="number">2</span>,</span><br><span class="line">            padding=<span class="number">0</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.duck2 = DuckBlock(</span><br><span class="line">            start_channels * <span class="number">2</span>,</span><br><span class="line">            start_channels * <span class="number">2</span>,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.sub_down2 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            start_channels * <span class="number">2</span>,</span><br><span class="line">            start_channels * <span class="number">4</span>,</span><br><span class="line">            kernel_size=<span class="number">2</span>,</span><br><span class="line">            strides=<span class="number">2</span>,</span><br><span class="line">            padding=<span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">        self.duck3 = DuckBlock(</span><br><span class="line">            start_channels * <span class="number">4</span>,</span><br><span class="line">            start_channels * <span class="number">4</span>,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.sub_down3 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            start_channels * <span class="number">4</span>,</span><br><span class="line">            start_channels * <span class="number">8</span>,</span><br><span class="line">            kernel_size=<span class="number">2</span>,</span><br><span class="line">            strides=<span class="number">2</span>,</span><br><span class="line">            padding=<span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">        self.duck4 = DuckBlock(</span><br><span class="line">            start_channels * <span class="number">8</span>,</span><br><span class="line">            start_channels * <span class="number">8</span>,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.sub_down4 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            start_channels * <span class="number">8</span>,</span><br><span class="line">            start_channels * <span class="number">16</span>,</span><br><span class="line">            kernel_size=<span class="number">2</span>,</span><br><span class="line">            strides=<span class="number">2</span>,</span><br><span class="line">            padding=<span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">        self.duck5 = DuckBlock(</span><br><span class="line">            start_channels * <span class="number">16</span>,</span><br><span class="line">            start_channels * <span class="number">16</span>,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.sub_down5 = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            start_channels * <span class="number">16</span>,</span><br><span class="line">            start_channels * <span class="number">32</span>,</span><br><span class="line">            kernel_size=<span class="number">2</span>,</span><br><span class="line">            strides=<span class="number">2</span>,</span><br><span class="line">            padding=<span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">        self.res1 = nn.Sequential(</span><br><span class="line">            DuckResidualBlock(</span><br><span class="line">                start_channels * <span class="number">32</span>,</span><br><span class="line">                start_channels * <span class="number">32</span>,</span><br><span class="line">                act_name=act_name,</span><br><span class="line">                norm_name=norm_name,</span><br><span class="line">                adn_ordering=adn_ordering,</span><br><span class="line">                spatial_dims=spatial_dims,</span><br><span class="line">            ),</span><br><span class="line">            DuckResidualBlock(</span><br><span class="line">                start_channels * <span class="number">32</span>,</span><br><span class="line">                start_channels * <span class="number">32</span>,</span><br><span class="line">                act_name=act_name,</span><br><span class="line">                norm_name=norm_name,</span><br><span class="line">                adn_ordering=adn_ordering,</span><br><span class="line">                spatial_dims=spatial_dims,</span><br><span class="line">            ),</span><br><span class="line">        )</span><br><span class="line">        self.res2 = nn.Sequential(</span><br><span class="line">            DuckResidualBlock(</span><br><span class="line">                start_channels * <span class="number">32</span>,</span><br><span class="line">                start_channels * <span class="number">16</span>,</span><br><span class="line">                act_name=act_name,</span><br><span class="line">                norm_name=norm_name,</span><br><span class="line">                adn_ordering=adn_ordering,</span><br><span class="line">                spatial_dims=spatial_dims,</span><br><span class="line">            ),</span><br><span class="line">            DuckResidualBlock(</span><br><span class="line">                start_channels * <span class="number">16</span>,</span><br><span class="line">                start_channels * <span class="number">16</span>,</span><br><span class="line">                act_name=act_name,</span><br><span class="line">                norm_name=norm_name,</span><br><span class="line">                adn_ordering=adn_ordering,</span><br><span class="line">                spatial_dims=spatial_dims,</span><br><span class="line">            ),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.up1 = UpSample(</span><br><span class="line">            spatial_dims=<span class="number">3</span>,</span><br><span class="line">            scale_factor=upsamle_size,</span><br><span class="line">            mode=<span class="string">&quot;nontrainable&quot;</span>,</span><br><span class="line">            interp_mode=interp_mode,</span><br><span class="line">            align_corners=align_corners</span><br><span class="line">        )</span><br><span class="line">        self.duck6 = DuckBlock(</span><br><span class="line">            start_channels * <span class="number">16</span>,</span><br><span class="line">            start_channels * <span class="number">8</span>,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.up2 = UpSample(</span><br><span class="line">            spatial_dims=<span class="number">3</span>,</span><br><span class="line">            scale_factor=upsamle_size,</span><br><span class="line">            mode=<span class="string">&quot;nontrainable&quot;</span>,</span><br><span class="line">            interp_mode=interp_mode,</span><br><span class="line">            align_corners=align_corners</span><br><span class="line">        )</span><br><span class="line">        self.duck7 = DuckBlock(</span><br><span class="line">            start_channels * <span class="number">8</span>,</span><br><span class="line">            start_channels * <span class="number">4</span>,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.up3 = UpSample(</span><br><span class="line">            spatial_dims=<span class="number">3</span>,</span><br><span class="line">            scale_factor=upsamle_size,</span><br><span class="line">            mode=<span class="string">&quot;nontrainable&quot;</span>,</span><br><span class="line">            interp_mode=interp_mode,</span><br><span class="line">            align_corners=align_corners</span><br><span class="line">        )</span><br><span class="line">        self.duck8 = DuckBlock(</span><br><span class="line">            start_channels * <span class="number">4</span>,</span><br><span class="line">            start_channels * <span class="number">2</span>,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">        )</span><br><span class="line">        </span><br><span class="line">        self.up4 = UpSample(</span><br><span class="line">            spatial_dims=<span class="number">3</span>,</span><br><span class="line">            scale_factor=upsamle_size,</span><br><span class="line">            mode=<span class="string">&quot;nontrainable&quot;</span>,</span><br><span class="line">            interp_mode=interp_mode,</span><br><span class="line">            align_corners=align_corners</span><br><span class="line">        )</span><br><span class="line">        self.duck9 = DuckBlock(</span><br><span class="line">            start_channels * <span class="number">2</span>,</span><br><span class="line">            start_channels,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.up5 = UpSample(</span><br><span class="line">            spatial_dims=<span class="number">3</span>,</span><br><span class="line">            scale_factor=upsamle_size,</span><br><span class="line">            mode=<span class="string">&quot;nontrainable&quot;</span>,</span><br><span class="line">            interp_mode=interp_mode,</span><br><span class="line">            align_corners=align_corners</span><br><span class="line">        )</span><br><span class="line">        self.duck10 = DuckBlock(</span><br><span class="line">            start_channels,</span><br><span class="line">            start_channels,</span><br><span class="line">            spatial_dims=spatial_dims,</span><br><span class="line">            act_name=act_name,</span><br><span class="line">            norm_name=norm_name,</span><br><span class="line">            adn_ordering=adn_ordering,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.final_conv = Convolution(</span><br><span class="line">            spatial_dims,</span><br><span class="line">            start_channels,</span><br><span class="line">            out_channels,</span><br><span class="line">            kernel_size=<span class="number">1</span>,</span><br><span class="line">            act=act_name,</span><br><span class="line">            norm=norm_name,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        p1 = self.down1(x)</span><br><span class="line">        p2 = self.down2(p1)</span><br><span class="line">        p3 = self.down3(p2)</span><br><span class="line">        p4 = self.down4(p3)</span><br><span class="line">        p5 = self.down5(p4)</span><br><span class="line"></span><br><span class="line">        t0 = self.duck1(x)</span><br><span class="line">        l1i = self.sub_down1(t0)</span><br><span class="line">        s1 = p1 + l1i</span><br><span class="line">        t1 = self.duck2(s1)</span><br><span class="line"></span><br><span class="line">        l2i = self.sub_down2(t1)</span><br><span class="line">        s2 = p2 + l2i</span><br><span class="line">        t2 = self.duck3(s2)</span><br><span class="line"></span><br><span class="line">        l3i = self.sub_down3(t2)</span><br><span class="line">        s3 = p3 + l3i</span><br><span class="line">        t3 = self.duck4(s3)</span><br><span class="line"></span><br><span class="line">        l4i = self.sub_down4(t3)</span><br><span class="line">        s4 = p4 + l4i</span><br><span class="line">        t4 = self.duck5(s4)</span><br><span class="line"></span><br><span class="line">        l5i = self.sub_down5(t4)</span><br><span class="line">        s5 = p5 + l5i</span><br><span class="line">        t51 = self.res1(s5)</span><br><span class="line">        t53 = self.res2(t51)</span><br><span class="line"></span><br><span class="line">        l5o = self.up1(t53)</span><br><span class="line">        c4 = l5o + t4</span><br><span class="line">        q4 = self.duck6(c4)</span><br><span class="line"></span><br><span class="line">        l4o = self.up2(q4)</span><br><span class="line">        c3 = l4o + t3</span><br><span class="line">        q3 = self.duck7(c3)</span><br><span class="line"></span><br><span class="line">        l3o = self.up3(q3)</span><br><span class="line">        c2 = l3o + t2</span><br><span class="line">        q2 = self.duck8(c2)</span><br><span class="line"></span><br><span class="line">        l2o = self.up4(q2)</span><br><span class="line">        c1 = l2o + t1</span><br><span class="line">        q1 = self.duck9(c1)</span><br><span class="line"></span><br><span class="line">        l1o = self.up5(q1)</span><br><span class="line">        c0 = l1o + t0</span><br><span class="line">        z1 = self.duck10(c0)</span><br><span class="line"></span><br><span class="line">        y = self.final_conv(z1)</span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h1>
<p>因为我自己Out of CUDA Memory无法给出一个很好的效果，因此放一下paper上的效果<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.0/result1.png" alt="效果1" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.0/result2.png" alt="效果2" /></p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://www.nature.com/articles/s41598-023-36940-5">Using DUCK-Net for polyp image segmentation</a></p>
<p><a href="https://github.com/RazvanDu/DUCK-Net">DUCK-Net</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>live2d-widget添加moc3模型支持</title>
    <url>/2023/11/25/live2d-widget-moc3/</url>
    <content><![CDATA[<blockquote>
<p>封面《FLIP * FLOP ~RAMBLING OVERRUN~》</p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>每次看到网站的live2d模型的时候都会想只有nep是喜欢的，想要添加模型发现这个库只支持moc2模型，不支持moc3模型，虽然可以加但是作者并没有加，只是给了一份pr，但是这个pr已经是两年前了，不如自己重新写一下。</p>
<h1 id="做法"><a class="markdownIt-Anchor" href="#做法"></a> 做法</h1>
<p>参考pr中的代码，其实很简单，就是采用了<code>pixi-live2d-display</code>这个库来加载模型，该库支持各个版本的live2d模型，因此只需要修改原来的加载模型代码<code>loadlive2d</code>函数即可。</p>
<p>首先按照<code>pixi-live2d-display</code>这个库来安装，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install pixi-live2d-display</span><br></pre></td></tr></table></figure>
<p>然后下载live2d-widget的源码，修改<code>src/model.js</code>文件，新增下面函数，将<code>loadlive2d</code>函数修改为该函数：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">PIXI</span> <span class="keyword">from</span> <span class="string">&quot;pixi.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Live2DModel</span> &#125; <span class="keyword">from</span> <span class="string">&quot;pixi-live2d-display&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// expose PIXI to window so that this plugin is able to</span></span><br><span class="line"><span class="comment">// reference window.PIXI.Ticker to automatically update Live2D models</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">PIXI</span> = <span class="variable constant_">PIXI</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">loadModelPixi</span>(<span class="params">id, jsonpath</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> element = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(id);</span><br><span class="line">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="variable constant_">PIXI</span>.<span class="title class_">Application</span>(&#123;</span><br><span class="line">      <span class="attr">view</span>: element,</span><br><span class="line">      <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> model = <span class="keyword">await</span> <span class="title class_">Live2DModel</span>.<span class="title function_">from</span>(jsonpath);</span><br><span class="line"></span><br><span class="line">    app.<span class="property">stage</span>.<span class="title function_">addChild</span>(model);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> parentWidth = element.<span class="property">width</span>;</span><br><span class="line">    <span class="keyword">const</span> parentHeight = element.<span class="property">height</span>;</span><br><span class="line">    <span class="comment">// Scale to fit the stage</span></span><br><span class="line">    <span class="keyword">const</span> ratio = <span class="title class_">Math</span>.<span class="title function_">min</span>(</span><br><span class="line">      parentWidth / model.<span class="property">width</span>,</span><br><span class="line">      parentHeight / model.<span class="property">height</span></span><br><span class="line">    );</span><br><span class="line">    model.<span class="property">scale</span>.<span class="title function_">set</span>(ratio, ratio);</span><br><span class="line">    <span class="comment">// Align bottom and center horizontally</span></span><br><span class="line">    </span><br><span class="line">    model.<span class="property">x</span> = (parentWidth - model.<span class="property">width</span>) / <span class="number">2</span>;</span><br><span class="line">    model.<span class="property">y</span> =  parentHeight - model.<span class="property">height</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该函数显而易见，加载模型后设置缩放和位置，需要注意的是在代码里面我们可以看到<code>&lt;canvas id=&quot;live2d&quot; width=&quot;800&quot; height=&quot;800&quot;&gt;&lt;/canvas&gt;</code>，而css里面可以看到</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#live2d</span> &#123;</span><br><span class="line">	<span class="attribute">cursor</span>: grab;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">	<span class="attribute">position</span>: relative;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里其实是live2d先在800×800上面画，然后通过css缩放到300×300，这样子会看的高清一点，live2d看起来会很模糊</p>
<p>效果如下，其实比例上还是有点小问题需要调整一下<br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.1/result.png" alt="result" /></p>
<p>完整代码在<a href="https://github.com/qxdn/live2d-widget">github</a>，也可以直接直接在网页中添加下面这行代码添加live2d到网站</p>
<pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/gh/qxdn/live2d-widget@latest/autoload.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
</code></pre>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>该代码其实还是有点小缺陷，即模型对准buttom其实还是有点对不准，如果可以看到<code>loadlive2d</code>的实现可能效果会好一点。</p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<ul>
<li>
<p><a href="https://github.com/stevenjoezhang/live2d-widget">stevenjoezhang/live2d-widget</a></p>
</li>
<li>
<p><a href="https://github.com/stevenjoezhang/live2d-widget/pull/82">pull request 82</a></p>
</li>
<li>
<p><a href="https://github.com/guansss/pixi-live2d-display">guansss/pixi-live2d-display</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>用TTS模型做春风学姐的语音合成</title>
    <url>/2023/11/29/tts-haruka/</url>
    <content><![CDATA[<blockquote>
<p>封面 《9-nine-春色春恋春熙风》</p>
</blockquote>
<blockquote>
<p>省流版本<br />
<strong>感觉 hugging face 的 cpu 跑的效果和我本地跑的效果完全不一样</strong><br />
demo: <a href="https://huggingface.co/spaces/qxdn/tts-9nine">demo</a><br />
测试文本： 誕生日おめでとうございます<br />
效果语音： <audio id="audio" controls src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/haruka_birthday.wav"></p>
</blockquote>
<source  src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/haruka_birthday.wav">
</audio>
<blockquote>
<p>测试视频： <iframe src="//player.bilibili.com/player.html?aid=964019251&bvid=BV1MH4y117Dh&cid=1347616172&p=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></p>
</blockquote>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>临近生日想整个活，就做一个喜欢角色的TTS模型吧</p>
<h1 id="调研"><a class="markdownIt-Anchor" href="#调研"></a> 调研</h1>
<p>上次搞 TTS 还是去年（2022）的时候想用 vits 来做一个爱莉希雅的 TTS 模型，根据网上的拆包工具拆出来崩坏 3 的语音包，但是没找出文本，不想自己标注和用语音识别标注就搁置了，如今过了一年多技术上应该有进步所以来看看新的方法，而且相对于崩坏 3，galgame 更加好拆且相当于一个自带标注的数据集，用来训练再合适不过了。</p>
<p>最简单的是去看 tts 的<a href="https://arxiv.org/abs/2106.15561">综述</a>，但是这篇是 21 年的，不含这几年的进展，后面在知乎上找到一个实时更新<a href="https://zhuanlan.zhihu.com/p/474601997">文章</a>。</p>
<p>所以先试试 HierSpeech++，首先是最新，其次是 zero-shot 模型，这样的话就不需要怎么训练微调。其项目和演示如下地址</p>
<p><a href="https://huggingface.co/spaces/LeeSangHoon/HierSpeech_TTS">demo</a><br />
尝试输入音频作为 prompt,文本 prompt 用“失敗した”</p>
<blockquote>
<p>输入音频 prompt<br />
<audio id="audio" controls src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/haruka1391.ogg"></p>
</blockquote>
<source  src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/haruka1391.ogg">
</audio>
<p>调了调输出音频结果如下，效果有点难崩，可见在分词和预测时长上还是有点问题需要微调，不如换个方法。</p>
<blockquote>
<p>输出结果<br />
<audio id="audio" controls src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/zo_output.wav"></p>
</blockquote>
<source  src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/zo_output.wav">
</audio>
<blockquote>
<p>推特吐槽了一下，被一作找上门了，原因是没有日语训练，底下用 phoneme 库转音标所以可以发送。和作者说了一下发了份<a href="https://github.com/CjangCjengh/MoeGoe">MoeGoe</a>的cleaners代码<br />
相关链接 <a href="https://twitter.com/Al_Fe2O3/status/1727633489061949897">推特</a></p>
</blockquote>
<h1 id="拆包"><a class="markdownIt-Anchor" href="#拆包"></a> 拆包</h1>
<p>9nine 的拆包可以直接用现成的 GARbro 进行拆包，我觉得比 escu:de 那些好拆多了，那种拆包封包找不到啥现成程序，还得自己写，有空的话可以写一下怎么拆 escu:de 的游戏。春春春拆包如下，<code>voice.xp3</code>里面是语音包，<code>data.xp3</code>里面包含了文本包，在<code>scn</code>里面。</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/garbro1.png" alt="garbro预览" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/voice_xp3.png" alt="voice.xp3" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/scn.png" alt="scn" /></p>
<p>关于 scn 我搜怎么解包的时候刚好看到有人也拆包春春春做 tts，那么直接参考他的方案用<a href="https://github.com/UlyssesWu/FreeMote">freemote</a></p>
<p>观察<code>freemote</code>解码出来的信息，可以看到里面有主要有两类 json，我们要的主要在<code>.json</code>里面，经过观察文本和对音的语音文件主要在<code>texts</code>和<code>voices</code>里面</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/text_json.png" alt=".text.json" /><br />
<img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/resx_json.png" alt=".resx.json" /></p>
<h1 id="提取"><a class="markdownIt-Anchor" href="#提取"></a> 提取</h1>
<p>我只想要四位女主<s>其他人是什么</s>的声音文件，因此直接在别人的提取脚本上小改一下，代码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">character = [<span class="string">&quot;都&quot;</span>, <span class="string">&quot;天&quot;</span>, <span class="string">&quot;春風&quot;</span>, <span class="string">&quot;希亜&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_json_files</span>(<span class="params">base_path</span>):</span><br><span class="line">    file_lists = []</span><br><span class="line">    files = os.listdir(base_path)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> tqdm(files):</span><br><span class="line">        <span class="keyword">if</span> file.endswith(<span class="string">&quot;.txt.json&quot;</span>):</span><br><span class="line">            file_lists.append(file)</span><br><span class="line">    <span class="keyword">return</span> file_lists</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_voice_and_text_from_json</span>(<span class="params">json_file: <span class="built_in">str</span>, collapse_LF: <span class="built_in">bool</span> = <span class="literal">True</span></span>):</span><br><span class="line">    train_list = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(json_file, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        json_text = json.load(f)</span><br><span class="line">        scenes = json_text[<span class="string">&quot;scenes&quot;</span>]</span><br><span class="line">        <span class="keyword">for</span> scene <span class="keyword">in</span> scenes:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;texts&quot;</span> <span class="keyword">in</span> scene.keys():</span><br><span class="line">                texts = scene[<span class="string">&quot;texts&quot;</span>]</span><br><span class="line">                <span class="keyword">for</span> text_list <span class="keyword">in</span> texts:</span><br><span class="line">                    <span class="comment"># 先确保是list</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">isinstance</span>(text_list, <span class="built_in">list</span>):</span><br><span class="line">                        <span class="keyword">if</span> text_list[<span class="number">0</span>] <span class="keyword">in</span> character:</span><br><span class="line">                            <span class="keyword">if</span> text_list[<span class="number">3</span>] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                                txt = text_list[<span class="number">2</span>][<span class="number">1</span>:-<span class="number">1</span>]</span><br><span class="line">                                voice = text_list[<span class="number">3</span>][<span class="number">0</span>][<span class="string">&quot;voice&quot;</span>]</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> collapse_LF:</span><br><span class="line">                                    txt = txt.replace(<span class="string">&quot;\\n&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">                                train_list.append(<span class="string">f&quot;<span class="subst">&#123;text_list[<span class="number">0</span>]  &#125;</span>|<span class="subst">&#123;txt&#125;</span>|<span class="subst">&#123;voice&#125;</span>.ogg\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> train_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    base_path = <span class="string">&quot;./data/scn&quot;</span></span><br><span class="line">    file_lists = load_json_files(base_path)</span><br><span class="line">    <span class="comment"># print(file_lists)</span></span><br><span class="line">    voices = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> tqdm(file_lists):</span><br><span class="line">        voice = load_voice_and_text_from_json(os.path.join(base_path, file))</span><br><span class="line"></span><br><span class="line">        voices.extend(voice)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./train.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.writelines(voices)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>其实这样提取还是有一点点小问题，比如语音文本有一下一些问题，比如单纯的?，还有一些特殊符号，这些主要是游戏中一些特殊文本显示。对于前者采用<a href="https://github.com/CjangCjengh/tacotron2-japanese">tacotron2-japanese</a>进行清理，不用 bert-vits2 的 cleaner 是因为有插入停止词不好处理，后者直接训练集里面去掉</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">春風|？|hk0154.ogg</span><br><span class="line">天|あぁ……うん、っぽい、けど、%D$vl1;え？　ラブレター？|sr0679_ep2.ogg</span><br></pre></td></tr></table></figure>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+ import torch</span></span><br><span class="line"><span class="addition">+ from text import text_to_sequence</span></span><br><span class="line"><span class="deletion">-</span></span><br><span class="line"></span><br><span class="line">def load_voice_and_text_from_json(json_file: str, collapse_LF: bool = True):</span><br><span class="line">    train_list = []</span><br><span class="line"></span><br><span class="line">    with open(json_file, encoding=&quot;utf-8&quot;) as f:</span><br><span class="line">        json_text = json.load(f)</span><br><span class="line">        scenes = json_text[&quot;scenes&quot;]</span><br><span class="line">        for scene in scenes:</span><br><span class="line">            if &quot;texts&quot; in scene.keys():</span><br><span class="line">                texts = scene[&quot;texts&quot;]</span><br><span class="line">                for text_list in texts:</span><br><span class="line">                    # 先确保是list</span><br><span class="line">                    if isinstance(text_list, list):</span><br><span class="line">                        if text_list[0] in character:</span><br><span class="line"><span class="deletion">-                            if text_list[3] is not None:</span></span><br><span class="line"><span class="deletion">-                                txt = text_list[2][1:-1]</span></span><br><span class="line"><span class="deletion">-                                voice = text_list[3][0][&quot;voice&quot;]</span></span><br><span class="line"><span class="addition">+                            txt:str = text_list[2][1:-1]</span></span><br><span class="line"><span class="addition">+                            if txt.find(&#x27;%&#x27;) != -1:</span></span><br><span class="line"><span class="addition">+                                continue</span></span><br><span class="line"><span class="addition">+                            if (</span></span><br><span class="line"><span class="addition">+                                len(</span></span><br><span class="line"><span class="addition">+                                    torch.IntTensor(</span></span><br><span class="line"><span class="addition">+                                        text_to_sequence(txt, [&quot;japanese_cleaners&quot;])</span></span><br><span class="line"><span class="addition">+                                    )</span></span><br><span class="line"><span class="addition">+                                )</span></span><br><span class="line"><span class="addition">+                                &gt; 1</span></span><br><span class="line"><span class="addition">+                            ):</span></span><br><span class="line"><span class="addition">+                                if text_list[3] is not None:</span></span><br><span class="line"><span class="addition">+                                    voice = text_list[3][0][&quot;voice&quot;]</span></span><br><span class="line"></span><br><span class="line">                                    if collapse_LF:</span><br><span class="line">                                        txt = txt.replace(&quot;\\n&quot;, &quot;&quot;)</span><br><span class="line"></span><br><span class="line">                                    train_list.append(</span><br><span class="line">                                        f&quot;&#123;text_list[0]  &#125;|&#123;txt&#125;|&#123;voice&#125;.ogg\n&quot;</span><br><span class="line">                                    )</span><br><span class="line"></span><br><span class="line">    return train_list</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>二次清理数据</strong><br />
训练过程中发现存在一些单纯的<code>…</code>还有<s>hs 时候的呻吟</s>，这些对训练结果影响较大，因此需要去除一下</p>
</blockquote>
<h2 id="简单-eda"><a class="markdownIt-Anchor" href="#简单-eda"></a> 简单 eda</h2>
<p>首先看一下数据分布</p>
<p><img src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/voice_count.png" alt="语音数量" /></p>
<ul>
<li>希亜: 370 条</li>
<li>天: 576 条</li>
<li>春風: 2031 条（不愧是学姐主场）</li>
<li>都: 190 条（不愧是女路人）</li>
</ul>
<p>语音总时长： 3.92h</p>
<h1 id="训练"><a class="markdownIt-Anchor" href="#训练"></a> 训练</h1>
<p>我这里采用的是<code>Bert-Vits2</code>模型，这个项目将 bert 和 vits 结合起来，主题来说就是使用 Bert 预先对文本进行处理，后面再送入，此外他们还加了个 emotion 情绪编码器，可以使得语音带上情绪。<code>Bert-VITS2</code>项目的文档较少，主要都需要自己来读代码进行理解。另外该项目使用<code>.wav</code>文件作为输入，所以我们得事先转换一下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">ogg2wav</span>(<span class="params">ogg,out_base</span>):</span><br><span class="line">    filename,ext = os.path.splitext(ogg)</span><br><span class="line">    filename = os.path.basename(filename)</span><br><span class="line">    y,sr = librosa.load(ogg)</span><br><span class="line">    sf.write(os.path.join(out_base,filename+<span class="string">&quot;.wav&quot;</span>),y,sr)</span><br></pre></td></tr></table></figure>
<p>另外我们需要准备一份<code>file.list</code>文件，这个文件是用来指定训练集和验证集的，格式如下</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line"># wave_path 要是绝对路径</span><br><span class="line">&#123;wav_path&#125;|&#123;speaker_name&#125;|&#123;language&#125;|&#123;text&#125;</span><br><span class="line">例如</span><br><span class="line">hk1447.wav|春風|JP|その……く、九條さんが、作ったことあるって、　聞いて……</span><br></pre></td></tr></table></figure>
<p>修改<code>config.yml</code>，默认读取 config.yml，所以不用改代码，所以我们得做一下简单修改</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局配置</span></span><br><span class="line"><span class="comment"># 对于希望在同一时间使用多个配置文件的情况，例如两个GPU同时跑两个训练集：通过环境变量指定配置文件，不指定则默认为./config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拟提供通用路径配置，统一存放数据，避免数据放得很乱</span></span><br><span class="line"><span class="comment"># 每个数据集与其对应的模型存放至统一路径下，后续所有的路径配置均为相对于datasetPath的路径</span></span><br><span class="line"><span class="comment"># 不填或者填空则路径为相对于项目根目录的路径</span></span><br><span class="line"><span class="attr">dataset_path:</span> <span class="string">&quot;Data/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模型镜像源，默认huggingface，使用openi镜像源需指定openi_token</span></span><br><span class="line"><span class="attr">mirror:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">openi_token:</span> <span class="string">&quot;&quot;</span> <span class="comment"># openi token</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># resample 音频重采样配置</span></span><br><span class="line"><span class="comment"># 注意， “:” 后需要加空格</span></span><br><span class="line"><span class="attr">resample:</span></span><br><span class="line">  <span class="comment"># 目标重采样率</span></span><br><span class="line">  <span class="attr">sampling_rate:</span> <span class="number">44100</span></span><br><span class="line">  <span class="comment"># 音频文件输入路径，重采样会将该路径下所有.wav音频文件重采样</span></span><br><span class="line">  <span class="comment"># 请填入相对于datasetPath的相对路径</span></span><br><span class="line">  <span class="attr">in_dir:</span> <span class="string">&quot;audios/raw&quot;</span> <span class="comment"># 相对于根目录的路径为 /datasetPath/in_dir</span></span><br><span class="line">  <span class="comment"># 音频文件重采样后输出路径</span></span><br><span class="line">  <span class="attr">out_dir:</span> <span class="string">&quot;audios/wavs&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># preprocess_text 数据集预处理相关配置</span></span><br><span class="line"><span class="comment"># 注意， “:” 后需要加空格</span></span><br><span class="line"><span class="attr">preprocess_text:</span></span><br><span class="line">  <span class="comment"># 原始文本文件路径，文本格式应为&#123;wav_path&#125;|&#123;speaker_name&#125;|&#123;language&#125;|&#123;text&#125;。</span></span><br><span class="line">  <span class="attr">transcription_path:</span> <span class="string">&quot;filelists/haruka.list&quot;</span></span><br><span class="line">  <span class="comment"># 数据清洗后文本路径，可以不填。不填则将在原始文本目录生成</span></span><br><span class="line">  <span class="attr">cleaned_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment"># 训练集路径</span></span><br><span class="line">  <span class="attr">train_path:</span> <span class="string">&quot;filelists/train.list&quot;</span></span><br><span class="line">  <span class="comment"># 验证集路径</span></span><br><span class="line">  <span class="attr">val_path:</span> <span class="string">&quot;filelists/val.list&quot;</span></span><br><span class="line">  <span class="comment"># 配置文件路径</span></span><br><span class="line">  <span class="attr">config_path:</span> <span class="string">&quot;haruka.json&quot;</span></span><br><span class="line">  <span class="comment"># 每个speaker的验证集条数</span></span><br><span class="line">  <span class="attr">val_per_spk:</span> <span class="number">40</span></span><br><span class="line">  <span class="comment"># 验证集最大条数，多于的会被截断并放到训练集中</span></span><br><span class="line">  <span class="attr">max_val_total:</span> <span class="number">200</span></span><br><span class="line">  <span class="comment"># 是否进行数据清洗</span></span><br><span class="line">  <span class="attr">clean:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bert_gen 相关配置</span></span><br><span class="line"><span class="comment"># 注意， “:” 后需要加空格</span></span><br><span class="line"><span class="attr">bert_gen:</span></span><br><span class="line">  <span class="comment"># 训练数据集配置文件路径</span></span><br><span class="line">  <span class="attr">config_path:</span> <span class="string">&quot;haruka.json&quot;</span></span><br><span class="line">  <span class="comment"># 并行数</span></span><br><span class="line">  <span class="attr">num_processes:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># 使用设备：可选项 &quot;cuda&quot; 显卡推理，&quot;cpu&quot; cpu推理</span></span><br><span class="line">  <span class="comment"># 该选项同时决定了get_bert_feature的默认设备</span></span><br><span class="line">  <span class="attr">device:</span> <span class="string">&quot;cuda&quot;</span></span><br><span class="line">  <span class="comment"># 使用多卡推理</span></span><br><span class="line">  <span class="attr">use_multi_device:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># emo_gen 相关配置</span></span><br><span class="line"><span class="comment"># 注意， “:” 后需要加空格</span></span><br><span class="line"><span class="attr">emo_gen:</span></span><br><span class="line">  <span class="comment"># 训练数据集配置文件路径</span></span><br><span class="line">  <span class="attr">config_path:</span> <span class="string">&quot;haruka.json&quot;</span></span><br><span class="line">  <span class="comment"># 并行数</span></span><br><span class="line">  <span class="attr">num_processes:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># 使用设备：可选项 &quot;cuda&quot; 显卡推理，&quot;cpu&quot; cpu推理</span></span><br><span class="line">  <span class="attr">device:</span> <span class="string">&quot;cuda&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># train 训练配置</span></span><br><span class="line"><span class="comment"># 注意， “:” 后需要加空格</span></span><br><span class="line"><span class="attr">train_ms:</span></span><br><span class="line">  <span class="attr">env:</span></span><br><span class="line">    <span class="attr">MASTER_ADDR:</span> <span class="string">&quot;localhost&quot;</span></span><br><span class="line">    <span class="attr">MASTER_PORT:</span> <span class="number">10086</span></span><br><span class="line">    <span class="attr">WORLD_SIZE:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">LOCAL_RANK:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">RANK:</span> <span class="number">0</span></span><br><span class="line">    <span class="comment"># 可以填写任意名的环境变量</span></span><br><span class="line">    <span class="comment"># THE_ENV_VAR_YOU_NEED_TO_USE: &quot;1234567&quot;</span></span><br><span class="line">  <span class="comment"># 底模设置</span></span><br><span class="line">  <span class="attr">base:</span></span><br><span class="line">    <span class="attr">use_base_model:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">repo_id:</span> <span class="string">&quot;Stardust_minus/Bert-VITS2&quot;</span></span><br><span class="line">    <span class="attr">model_image:</span> <span class="string">&quot;Bert-VITS2_2.1-Emo底模&quot;</span> <span class="comment"># openi网页的模型名</span></span><br><span class="line">  <span class="comment"># 训练模型存储目录：与旧版本的区别，原先数据集是存放在logs/model_name下的，现在改为统一存放在Data/你的数据集/models下</span></span><br><span class="line">  <span class="attr">model:</span> <span class="string">&quot;models&quot;</span></span><br><span class="line">  <span class="comment"># 配置文件路径</span></span><br><span class="line">  <span class="attr">config_path:</span> <span class="string">&quot;haruka.json&quot;</span></span><br><span class="line">  <span class="comment"># 训练使用的worker，不建议超过CPU核心数</span></span><br><span class="line">  <span class="attr">num_workers:</span> <span class="number">16</span></span><br><span class="line">  <span class="comment"># 关闭此项可以节约接近50%的磁盘空间，但是可能导致实际训练速度变慢和更高的CPU使用率。</span></span><br><span class="line">  <span class="attr">spec_cache:</span> <span class="literal">True</span></span><br><span class="line">  <span class="comment"># 保存的检查点数量，多于此数目的权重会被删除来节省空间。</span></span><br><span class="line">  <span class="attr">keep_ckpts:</span> <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># webui webui配置</span></span><br><span class="line"><span class="comment"># 注意， “:” 后需要加空格</span></span><br><span class="line"><span class="attr">webui:</span></span><br><span class="line">  <span class="comment"># 推理设备</span></span><br><span class="line">  <span class="attr">device:</span> <span class="string">&quot;cuda&quot;</span></span><br><span class="line">  <span class="comment"># 模型路径</span></span><br><span class="line">  <span class="attr">model:</span> <span class="string">&quot;models/G_18000.pth&quot;</span></span><br><span class="line">  <span class="comment"># 配置文件路径</span></span><br><span class="line">  <span class="attr">config_path:</span> <span class="string">&quot;configs/haruka.json&quot;</span></span><br><span class="line">  <span class="comment"># 端口号</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7860</span></span><br><span class="line">  <span class="comment"># 是否公开部署，对外网开放</span></span><br><span class="line">  <span class="attr">share:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 是否开启debug模式</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 语种识别库，可选langid, fastlid</span></span><br><span class="line">  <span class="attr">language_identification_library:</span> <span class="string">&quot;langid&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># server api配置</span></span><br><span class="line"><span class="comment"># 注意， “:” 后需要加空格</span></span><br><span class="line"><span class="comment"># 注意，本配置下的所有配置均为相对于根目录的路径</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="comment"># 端口号</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5000</span></span><br><span class="line">  <span class="comment"># 模型默认使用设备：但是当前并没有实现这个配置。</span></span><br><span class="line">  <span class="attr">device:</span> <span class="string">&quot;cuda&quot;</span></span><br><span class="line">  <span class="comment"># 需要加载的所有模型的配置</span></span><br><span class="line">  <span class="comment"># 注意，所有模型都必须正确配置model与config的路径，空路径会导致加载错误。</span></span><br><span class="line">  <span class="attr">models:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="comment"># 模型的路径</span></span><br><span class="line">      <span class="attr">model:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="comment"># 模型config.json的路径</span></span><br><span class="line">      <span class="attr">config:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="comment"># 模型使用设备，若填写则会覆盖默认配置</span></span><br><span class="line">      <span class="attr">device:</span> <span class="string">&quot;cuda&quot;</span></span><br><span class="line">      <span class="comment"># 模型默认使用的语言</span></span><br><span class="line">      <span class="attr">language:</span> <span class="string">&quot;ZH&quot;</span></span><br><span class="line">      <span class="comment"># 模型人物默认参数</span></span><br><span class="line">      <span class="comment"># 不必填写所有人物，不填的使用默认值</span></span><br><span class="line">      <span class="comment"># 暂时不用填写，当前尚未实现按人区分配置</span></span><br><span class="line">      <span class="attr">speakers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">speaker:</span> <span class="string">&quot;科比&quot;</span></span><br><span class="line">          <span class="attr">sdp_ratio:</span> <span class="number">0.2</span></span><br><span class="line">          <span class="attr">noise_scale:</span> <span class="number">0.6</span></span><br><span class="line">          <span class="attr">noise_scale_w:</span> <span class="number">0.8</span></span><br><span class="line">          <span class="attr">length_scale:</span> <span class="number">1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">speaker:</span> <span class="string">&quot;五条悟&quot;</span></span><br><span class="line">          <span class="attr">sdp_ratio:</span> <span class="number">0.3</span></span><br><span class="line">          <span class="attr">noise_scale:</span> <span class="number">0.7</span></span><br><span class="line">          <span class="attr">noise_scale_w:</span> <span class="number">0.8</span></span><br><span class="line">          <span class="attr">length_scale:</span> <span class="number">0.5</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">speaker:</span> <span class="string">&quot;安倍晋三&quot;</span></span><br><span class="line">          <span class="attr">sdp_ratio:</span> <span class="number">0.2</span></span><br><span class="line">          <span class="attr">noise_scale:</span> <span class="number">0.6</span></span><br><span class="line">          <span class="attr">noise_scale_w:</span> <span class="number">0.8</span></span><br><span class="line">          <span class="attr">length_scale:</span> <span class="number">1.2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="comment"># 模型的路径</span></span><br><span class="line">      <span class="attr">model:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="comment"># 模型config.json的路径</span></span><br><span class="line">      <span class="attr">config:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="comment"># 模型使用设备，若填写则会覆盖默认配置</span></span><br><span class="line">      <span class="attr">device:</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line">      <span class="comment"># 模型默认使用的语言</span></span><br><span class="line">      <span class="attr">language:</span> <span class="string">&quot;JP&quot;</span></span><br><span class="line">      <span class="comment"># 模型人物默认参数</span></span><br><span class="line">      <span class="comment"># 不必填写所有人物，不填的使用默认值</span></span><br><span class="line">      <span class="attr">speakers:</span> [] <span class="comment"># 也可以不填</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 百度翻译开放平台 api配置</span></span><br><span class="line"><span class="comment"># api接入文档 https://api.fanyi.baidu.com/doc/21</span></span><br><span class="line"><span class="comment"># 请不要在github等网站公开分享你的app id 与 key</span></span><br><span class="line"><span class="attr">translate:</span></span><br><span class="line">  <span class="comment"># 你的APPID</span></span><br><span class="line">  <span class="attr">&quot;app_key&quot;:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment"># 你的密钥</span></span><br><span class="line">  <span class="attr">&quot;secret_key&quot;:</span> <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="文本预处理"><a class="markdownIt-Anchor" href="#文本预处理"></a> 文本预处理</h2>
<p>需要注意一下我们要先去 hugging face 上把缺少的权重先下载下来</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python preprocess_text.py</span><br></pre></td></tr></table></figure>
<p>这里主要执行 text2sequence，且检查能否找到音频和是否有重复音频</p>
<h2 id="重采样"><a class="markdownIt-Anchor" href="#重采样"></a> 重采样</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python resample.py</span><br></pre></td></tr></table></figure>
<h2 id="bert-预处理"><a class="markdownIt-Anchor" href="#bert-预处理"></a> Bert 预处理</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python bert_gen.py</span><br></pre></td></tr></table></figure>
<h2 id="emo-预处理"><a class="markdownIt-Anchor" href="#emo-预处理"></a> Emo 预处理</h2>
<p>这里主要获取情感信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python emo_gen.py</span><br></pre></td></tr></table></figure>
<h2 id="训练-2"><a class="markdownIt-Anchor" href="#训练-2"></a> 训练</h2>
<p>需要注意我们修改一下<code>config.json</code>里面的内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python train_ms.py</span><br></pre></td></tr></table></figure>
<h1 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h1>
<p>下面为第 23000iter 的效果，天的声音依然有一些电音</p>
<iframe src="//player.bilibili.com/player.html?aid=918952876&bvid=BV19u4y157p3&cid=1346290722&p=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
<p>后续继续训练一下<br />
输入文本 “誕生日おめでとうございます”，输出<br />
<audio id="audio" controls src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/haruka_birthday.wav"></p>
<source  src="https://cdn.jsdelivr.net/gh/qxdn/qxdn-assert@0.6.2/haruka_birthday.wav">
</audio>
<p>放一个 hugging face 的 demo 链接，可以去体验一下<br />
<a href="https://huggingface.co/spaces/qxdn/tts-9nine">demo</a><br />
最终效果</p>
<iframe src="//player.bilibili.com/player.html?aid=964019251&bvid=BV1MH4y117Dh&cid=1347616172&p=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1>
<p>vits系列模型都需要大规模数据，虽然我已经加入了经过原神训练的预训练模型，但是还是可以看到天和喵都的数据量不太多容易电音，春风学姐的就好一点</p>
<p><s>虽然我喜欢春风学姐，但我其实是喵都厨</s></p>
<h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1>
<p><a href="https://arxiv.org/abs/2106.15561">A Survey on Neural Speech Synthesis</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/474601997">举世无双语音合成系统 VITS 发展历程（2023.11.22 HierSpeech++）</a></p>
<p><a href="https://github.com/sh-lee-prml/HierSpeechpp">HierSpeech++</a></p>
<p><a href="https://huggingface.co/spaces/LeeSangHoon/HierSpeech_TTS">HierSpeech++ demo</a></p>
<p><a href="https://www.bilibili.com/read/cv21397170/">基于 tacotron2 的 galgame 角色语音合成+galgame 解包 保姆级教程（千恋万花版）</a></p>
<p><a href="https://github.com/UlyssesWu/FreeMote">freemote</a></p>
<p><a href="https://github.com/CjangCjengh/tacotron2-japanese">tacotron2-japanese</a></p>
<p><a href="https://github.com/fishaudio/Bert-VITS2">Bert-VITS2</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>语音合成</tag>
      </tags>
  </entry>
</search>
